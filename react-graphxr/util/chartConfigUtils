{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# Untitled`","pinCode":false,"dname":"e25715e1-4350-4ecc-93d5-595044e343aa","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"ShapeType = [\"circle\", \"point\", \"square\", \"diamond\", \"hexagon\", \"triangle\", \"cross\"]","pinCode":false,"dname":"1be51a8a-423a-41dc-b0ec-15134e904c16","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"fontAlignTypes = \"left|center|right\".split(\"|\");","pinCode":false,"dname":"484580d3-eb1d-4522-b310-b70430bb8695","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"positions = [\"top-left\", \"top-center\", \"top-right\",\n    \"right-top\", \"right-center\", \"right-bottom\",\n    \"bottom-left\", \"bottom-center\", \"bottom-right\",\n    \"left-top\", \"left-center\", \"left-bottom\",]","pinCode":false,"dname":"f4cdb21e-3e1e-40b4-a09e-cd129081ab9d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"titleSizes = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']","pinCode":false,"dname":"5f4af2f4-4aaf-4d65-8482-4f21e91f8a5d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"RENDERERS = ['canvas', 'svg'];","pinCode":false,"dname":"8969617d-e7ca-4e9d-af59-9c2a9978a9ea","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"HEAT_MAP_TYPES = ['polygon', 'density'];","pinCode":false,"dname":"02b82ff2-a28c-4363-bfa6-df6accab4297","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"BubbleShapeType = \"circle, square, bowtie, diamond, hexagon, triangle,triangle-down, hollow-circle, hollow-square, hollow-bowtie,hollow-diamond, hollow-hexagon, hollow-triangle, hollow-triangle-down, cross, tick, plus, hyphen, line\".split(\", \")","pinCode":false,"dname":"a6de2442-8bc0-403c-bfae-818e463f58f9","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"HeatmapShapeType = \"rect,square,circle\".split(\",\");","pinCode":false,"dname":"9ce4de4f-8219-4a1e-abdd-a863f3ddda6b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"StepType = \" | hv | vh | hvh | vhv\".split(\" | \");","pinCode":false,"dname":"4c14812d-b1c0-4f58-b042-f4cee01f3b6f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"groupHeightModes = ['auto', 'fixed', 'fitItems'];","pinCode":false,"dname":"f6e2b12d-1e35-4805-b300-184838a20eb2","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"tmItemTypes = ['box', 'point', 'range'];","pinCode":false,"dname":"c9149347-58a3-4c75-8987-7e3587a3a92c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"zoomKeys = ['', 'ctrlKey', 'altKey', 'shiftKey', 'metaKey'];","pinCode":false,"dname":"dab0ec21-77d3-4172-bfad-86d40787aa60","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"optionsByType = ({});","pinCode":false,"dname":"7d97e5be-4a51-4c88-ad14-181cf3cd1271","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"legendPositions = ['top', 'top-left', 'top-right',\n    'left', 'left-top', 'left-bottom',\n    'right', 'right-top', 'right-bottom',\n    'bottom', 'bottom-left', 'bottom-right']","pinCode":false,"dname":"13aebbbc-99ae-4b71-9ad0-d7b4d6152680","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"tickMethods = ['cat', 'time-cat', 'wilkinson-extended', 'r-pretty', 'time', 'time-pretty', 'log', 'pow', 'quantile', 'd3-linear']","pinCode":false,"dname":"75e976e2-77d9-4d2c-9ca9-9b4486f48bd0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"interactions = ['element-active', 'element-selected', 'element-single-selected', 'element-highlight', 'element-highlight-by-color', 'element-highlight-by-x', 'legend-highlight', 'axis-label-highlight']","pinCode":false,"dname":"66cc245c-7564-4c2b-b3fd-50ab9ef829e0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"pieLableTypes = \"inner|outer|spider\".split(\"|\");","pinCode":false,"dname":"a648850a-595d-4ab6-a79f-3d7ca4348410","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"FLY_TOS = ['none', 'center', 'node'];","pinCode":false,"dname":"78732571-3ca4-4f1c-8ed2-93ebd978511e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"columnLabelPositions = \"top' | 'bottom' | 'middle' | 'left' | 'right\".split(\"' | '\")\n","pinCode":false,"dname":"fa8af326-c348-4abf-87d3-cf626c4bbf8d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"","pinCode":false,"dname":"4847c63c-803b-4b66-9960-41313c72241c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"NoTimeLineAddOptions = ({\n    appendPadding: {\n        displayConfig: { type: ShowType.AppendPadding },\n        value: 0,\n    },\n    padding: {\n        displayConfig: { type: ShowType.Padding },\n        value: 'auto',\n    },\n    tooltip: {\n        showContent: true,\n        shared: false,\n        customContent: {\n            displayConfig: {\n                type: ShowType.On, onValue: {\n                    displayConfig: { type: ShowType.JsText },\n                    value: `(title, data) => {\n                    let datas = _.uniq(_.map(data,(d)=>{\n                        return d.data?.datum?.SOURCE_CHART_DATA || d.data?.SOURCE_CHART_DATA || d.data?.datum || d.data;\n                    }))\n                    let bs = _.map(data, (d) => d.name);\n                    return datas.length && _.reduce(datas, (p,d,i)=>{ p += _.reduce(d, (prev, v, k) => {\n                        if (\"SPECIAL_GRAPHXR_NODE_ID\" !== k && \"SOURCE_CHART_DATA\" !== k) {\n                            if (~bs.indexOf(k)) {\n                                prev += (\\`<div class=\"d-flex justify-content-between\"><div><b> <span class=\"fas fa-circle f10\" style=\"color:\\${data[bs.indexOf(k)].color}\"></span>\\${k}&nbsp;&nbsp;</b></div><div><b>\\${v}</b></div></div>\\`)\n                            } else {\n                                prev += (\\`<div class=\"d-flex justify-content-between\"><div>\\${k}&nbsp;&nbsp;</div><div>\\${v}</div></div>\\`)\n                            }\n                        }\n                        return prev;\n                    }, (i == 0 ? \"\" : \"<hr>\") + (\\`<div class=\"mb1\"><b> <span class=\"fas fa-circle f10\" style=\"color:\\${data[i].color}\"></span>\\${data[i].title}</b></div>\\`));\n                    return p;\n                    }, \"\")\n                }`\n                }\n            }\n        }\n    }\n})","pinCode":false,"dname":"db58d48b-e64a-4965-8058-ef855aa3fa38","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"AddOption =( {\n    linkMain: {\n        selectGraphNode: true,\n        flyTo: {\n            displayConfig: { type: ShowType.Select },\n            selector: FLY_TOS,\n            value: FLY_TOS[2],\n        },\n    },\n})","pinCode":false,"dname":"6e9a6005-6ad8-46f9-be5d-6d03d142915f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"getRandomColor = function() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}","pinCode":false,"dname":"e0faa2c5-9d76-4cca-8057-9a2e76b9661d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"multiColors = [{\n    displayConfig: { type: ShowType.Color },\n    value: \"#5B8FF9\"\n},\n{\n    displayConfig: { type: ShowType.Color },\n    value: \"#5AD8A6\"\n},\n{\n    displayConfig: { type: ShowType.Color },\n    value: \"#5D7092\"\n},\n{\n    displayConfig: { type: ShowType.Color },\n    value: \"#F6BD16\"\n},\n{\n    displayConfig: { type: ShowType.Color },\n    value: \"#E8684A\"\n},]","pinCode":false,"dname":"4a379476-1228-4e13-aa2c-9daa17ef589e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"getMultiColors = function (num) {\n    for (let i = 0; i < num; i++) {\n        if (!multiColors[i]) {\n            let color = getRandomColor();\n            if (_.filter(multiColors, (multiColor, index) => { return multiColor === color }).length > 0) {\n                i--;\n                continue;\n            }\n            multiColors[i] = {\n                displayConfig: { type: ShowType.Color },\n                value: color\n            }\n        }\n    }\n    return {\n        displayConfig: {\n            type: ShowType.Off, onValue: multiColors.slice(0, num)\n        },\n    }\n}","pinCode":false,"dname":"93700f9b-3150-4ca4-97b7-cdc6bcdfce47","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"loadMultiColors = function (num) {\n    for (let i = 0; i < num; i++) {\n        if (!multiColors[i]) {\n            let color = getRandomColor();\n            if (_.filter(multiColors, (multiColor, index) => { return multiColor === color }).length > 0) {\n                i--;\n                continue;\n            }\n            multiColors[i] = {\n                displayConfig: { type: ShowType.Color },\n                value: color\n            }\n        }\n    }\n    return multiColors\n}","pinCode":false,"dname":"b5fd7d8a-0335-4f81-bf4b-37b02cbed1fb","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"LABEL_DEFAULT_COLOR = ({\n    displayConfig: {\n        type: ShowType.Off, onValue: {\n            displayConfig: { type: ShowType.Color },\n            value: \"var(--text-color)\"\n        }\n    },\n})","pinCode":false,"dname":"f5afa2ca-f40c-434c-9b9f-d3ab5f91660f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"DEFAULT_COLOR = ({\n    displayConfig: {\n        type: ShowType.Off, onValue: {\n            displayConfig: { type: ShowType.Color },\n            value: \"#5B8FF9\"\n        }\n    },\n})","pinCode":false,"dname":"cc4b39ab-5d77-4ed4-ad8a-426f365ab93e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"DEFAULT_MULTI_COLOR = getMultiColors(0)","pinCode":false,"dname":"c56c1dde-3e9d-4251-9955-7c4ff38fdadf","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"DEFAULT_INTERACTIONS = [{\n    type: {\n        displayConfig: { type: ShowType.Select },\n        selector: interactions,\n        value: interactions[0]\n    }\n}, {\n    type: {\n        displayConfig: { type: ShowType.Select },\n        selector: interactions,\n        value: interactions[1]\n    }\n}];","pinCode":false,"dname":"ad59a142-a2ea-41f7-9d61-a26c254bd572","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"ROTATE_CONFIG = ({\n    displayConfig: { type: ShowType.Number },\n    minV: 0.0,\n    maxV: 10.0,\n    step: 0.01,\n    value: 0,\n})","pinCode":false,"dname":"1410754e-ea48-4ca8-90e8-bf181117ce3f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"OFF_GRID_CONFIG = ({\n    displayConfig: {\n        type: ShowType.Off\n    },\n    line: {\n        style: {\n            lineWidth: 1,\n        }\n    }\n})","pinCode":false,"dname":"a15e5952-202c-408a-bd06-d4019ef52222","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"ON_GRID_CONFIG = ({\n    displayConfig: {\n        type: ShowType.On\n    },\n    line: {\n        style: {\n            lineWidth: 1,\n        }\n    }\n});","pinCode":false,"dname":"991256cb-12df-4432-bc93-ac34d71c335c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"TitleConfig = ({\n    // align: {\n    //     displayConfig: { type: ShowType.Select },\n    //     selector: titleAligns,\n    //     value: titleAligns[1],\n    // },\n    size: {\n        displayConfig: { type: ShowType.Select },\n        selector: titleSizes,\n        value: titleSizes[5],\n    }\n})","pinCode":false,"dname":"24b17d26-dd4f-4d74-8423-0c4cf21a5ca8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"LableStyleConfig = ({\n    displayConfig: { type: ShowType.Off },\n    fontSize: 10,\n    textAlign: {\n        displayConfig: { type: ShowType.Select },\n        selector: fontAlignTypes,\n        value: 'center'\n    },\n    fill: _.cloneDeep(LABEL_DEFAULT_COLOR),\n})","pinCode":false,"dname":"8b39e68a-de11-43c3-a1b5-1359d943674a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"DefaultChartConfig = ({\n    title: {\n        text: \"line chart\"\n    },\n    description: {\n        text: \"a simple line chart\"\n    },\n    autoFit: true,\n    renderer: {\n        displayConfig: { type: ShowType.Select },\n        selector: RENDERERS,\n        value: RENDERERS[0]\n    },\n    smooth: false,\n    lineStyle: {\n        lineWidth: 2,//line size\n    },\n    label: {\n        offset: 10,//entire offset\n        offsetX: 0,\n        offsetY: 0,\n        style: _.cloneDeep(LableStyleConfig),\n    },\n    point: {\n        size: 3,\n        shape: 'circle'\n    },\n    // tooltip: {\n    //     showContent: true,\n    // },\n    xAxis: {\n        title: {\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,//entire offset\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: true,\n            autoHide: false,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            length: 5\n        },\n        grid: OFF_GRID_CONFIG,\n    },\n    yAxis: {\n        title: {\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,//entire offset\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: true,\n            autoHide: false,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            length: 5\n        },\n        grid: ON_GRID_CONFIG,\n    }\n})","pinCode":false,"dname":"ecc1d1a0-c855-436d-abe8-e8b99f7d7fe2","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"timelineDefault = ({\n    startField: 'year',\n    contentField: 'value',\n    type: {\n        displayConfig: { type: ShowType.Select },\n        selector: tmItemTypes,\n        value: tmItemTypes[1],\n    },\n    title: _.assign({\n        text: \"timeline chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple timeline chart\"\n    },\n    maxHeight: 400,\n    stack: true,\n    verticalScroll: true,\n    timeSpacing: {\n        displayConfig: { type: ShowType.Number },\n        minV: -1,\n        maxV: 100,\n        step: 1,\n        value: -1,\n    },\n    hideLabel: true,\n    zoomKey: {\n        displayConfig: { type: ShowType.Select },\n        selector: zoomKeys,\n        value: zoomKeys[1],\n    },\n})","pinCode":false,"dname":"77cacf49-d5d3-4622-b6b3-b6d3dcb31aa3","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"rangeTimelineDefault = _.merge(_.cloneDeep(timelineDefault), {\n    endField: \"endTime\",\n    type: {\n        displayConfig: { type: ShowType.Select },\n        selector: tmItemTypes,\n        value: 'range',\n    },\n    title: _.assign({\n        text: \"range timeline chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple range timeline chart\"\n    },\n})","pinCode":false,"dname":"79f5e86b-04d4-4338-8f41-d37de2875958","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"groupsTimelineDefault = ({\n    startField: 'year',\n    groupField: 'groupBy',\n    contentField: 'value',\n    type: {\n        displayConfig: { type: ShowType.Select },\n        selector: tmItemTypes,\n        value: 'point',\n    },\n    title: _.assign({\n        text: \"groups timeline chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple groups timeline chart\"\n    },\n    maxHeight: 400,\n    groupHeightMode: {\n        displayConfig: { type: ShowType.Select },\n        selector: groupHeightModes,\n        value: groupHeightModes[0],\n    },\n    stack: false,\n    verticalScroll: true,\n    timeSpacing: {\n        displayConfig: { type: ShowType.Number },\n        minV: -1,\n        maxV: 100,\n        step: 1,\n        value: -1,\n    },\n    hideLabel: true,\n    zoomKey: {\n        displayConfig: { type: ShowType.Select },\n        selector: zoomKeys,\n        value: zoomKeys[1],\n    },\n})","pinCode":false,"dname":"f4045ad5-53ba-4be8-8f08-18cfd09eaeeb","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"groupsRangeTimelineDefault = _.merge(_.cloneDeep(groupsTimelineDefault), {\n    endField: \"endTime\",\n    type: {\n        displayConfig: { type: ShowType.Select },\n        selector: tmItemTypes,\n        value: 'range',\n    },\n    title: _.assign({\n        text: \"groups range timeline chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple groups range timeline chart\"\n    },\n})","pinCode":false,"dname":"b0537883-908c-441a-aebe-7938ab722e0b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"subGroupsTimelineDefault = ({\n    startField: 'year',\n    groupField: 'groupBy',\n    contentField: 'value',\n    type: {\n        displayConfig: { type: ShowType.Select },\n        selector: tmItemTypes,\n        value: 'point',\n    },\n    title: _.assign({\n        text: \"subgroups timeline chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple subgroups timeline chart\"\n    },\n    maxHeight: 400,\n    groupHeightMode: {\n        displayConfig: { type: ShowType.Select },\n        selector: groupHeightModes,\n        value: groupHeightModes[0],\n    },\n    stack: false,\n    verticalScroll: true,\n    timeSpacing: {\n        displayConfig: { type: ShowType.Number },\n        minV: -1,\n        maxV: 100,\n        step: 1,\n        value: -1,\n    },\n    hideLabel: true,\n    zoomKey: {\n        displayConfig: { type: ShowType.Select },\n        selector: zoomKeys,\n        value: zoomKeys[1],\n    },\n    groupSeparator: {\n        displayConfig: { type: ShowType.Select },\n        selector: groupSeparators,\n        value: groupSeparators[0],\n    },\n})","pinCode":false,"dname":"9d37f5a6-78a9-44e7-a412-14a861d062ab","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"subGroupsRangeTimelineDefault = _.merge(_.cloneDeep(subGroupsTimelineDefault), {\n    endField: \"endTime\",\n    type: {\n        displayConfig: { type: ShowType.Select },\n        selector: tmItemTypes,\n        value: 'range',\n    },\n    title: _.assign({\n        text: \"subgroups range timeline chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple subgroups range timeline chart\"\n    },\n})","pinCode":false,"dname":"2eef42a5-93bd-424a-a1f2-273aab30cc87","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"lineDefault = ({\n    xField: 'year',\n    yField: 'value',\n    title: _.assign({\n        text: \"line chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple line chart\"\n    },\n    padding: {\n        displayConfig: { type: ShowType.Padding },\n        value: 'auto',\n    },\n    autoFit: true,\n    renderer: {\n        displayConfig: { type: ShowType.Select },\n        selector: RENDERERS,\n        value: RENDERERS[0]\n    },\n    smooth: false,\n    legend: {\n        displayConfig: { type: ShowType.Remove },\n        position: {\n            displayConfig: { type: ShowType.Select },\n            selector: legendPositions,\n            value: 'top-left',\n        },\n        flipPage: true,\n        offsetX: 0,\n        offsetY: 0,\n    },\n    stepType: {\n        displayConfig: { type: ShowType.Select },\n        selector: StepType,\n        value: '',\n    },\n    lineStyle: {\n        displayConfig: {\n            type: ShowType.On, onValue: {\n                lineWidth: 2,//line size\n            }\n        },\n    },\n    label: {\n        displayConfig: { type: ShowType.Off },\n        offset: 10,//entire offset\n        offsetX: 0,\n        offsetY: 0,\n        style: _.cloneDeep(LableStyleConfig),\n    },\n    point: {\n        displayConfig: { type: ShowType.Off },\n        size: 5,\n        shape: {\n            displayConfig: { type: ShowType.Select },\n            selector: ShapeType,\n            value: 'circle',\n        }\n    },\n    xAxis: {\n        title: {\n            displayConfig: { type: ShowType.Off },\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: false,\n            autoHide: true,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            displayConfig: { type: ShowType.Off },\n            length: 5\n        },\n        grid: OFF_GRID_CONFIG,\n        min: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 0\n            }\n        },\n        tickInterval: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 5\n            }\n        },\n    },\n    yAxis: {\n        title: {\n            displayConfig: { type: ShowType.Off },\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: false,\n            autoHide: true,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            displayConfig: { type: ShowType.Off },\n            length: 5\n        },\n        grid: ON_GRID_CONFIG,\n        min: {\n            displayConfig: {\n                type: ShowType.On, onValue: 0\n            }\n        },\n        tickInterval: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 5\n            }\n        },\n        // tickMethod: {\n        //     displayConfig: {\n        //         type: ShowType.Off, onValue: {\n        //             displayConfig: { type: ShowType.Select },\n        //             selector: tickMethods,\n        //             value: 'cat',\n        //         }\n        //     }\n        // },\n    },\n    color: _.cloneDeep(DEFAULT_COLOR),\n    interactions: DEFAULT_INTERACTIONS,\n})","pinCode":false,"dname":"868b7446-8d3a-4d32-9d08-a2fcdd8c0c55","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"multiLineDefault = _.merge(_.cloneDeep(lineDefault), {\n    title: {\n        text: \"multi line chart\"\n    },\n    description: {\n        text: \"a simple multi line chart\"\n    },\n    legend: {\n        displayConfig: { type: ShowType.On },\n    },\n    // tooltip: {\n    //     shared: true,\n    // },\n    color: DEFAULT_MULTI_COLOR\n});","pinCode":false,"dname":"bddbc220-293e-4179-b4a2-2a6d6ac590ab","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"transposeMultiLineDefault = _.merge(_.cloneDeep(multiLineDefault), {\n    title: {\n        text: \"transpose multi line chart\"\n    },\n    description: {\n        text: \"a simple transpose multi line chart\"\n    },\n})","pinCode":false,"dname":"bf4317df-bcb1-461c-9714-f0f044b96249","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"areaDefault = _.merge(_.cloneDeep(lineDefault), {\n    title: _.assign({\n        text: \"area chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple area chart\"\n    },\n    interactions: DEFAULT_INTERACTIONS,\n});","pinCode":false,"dname":"ab8fdfa7-3cc4-4923-8533-a0a541d27b98","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"multiAreaDefault = _.merge(_.cloneDeep(areaDefault), {\n    title: {\n        text: \"multi area chart\"\n    },\n    description: {\n        text: \"a simple multi area chart\"\n    },\n    legend: {\n        displayConfig: { type: ShowType.On },\n    },\n    isStack: false,\n    isPercent: false,\n    startOnZero: true,\n    color: DEFAULT_MULTI_COLOR\n});","pinCode":false,"dname":"ec51c9ba-99e9-48e2-992a-31f769c7bd48","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"transposeMultiAreaDefault = _.merge(_.cloneDeep(multiAreaDefault), {\n    title: {\n        text: \"transpose multi area chart\"\n    },\n    description: {\n        text: \"a simple transpose multi area chart\"\n    },\n})","pinCode":false,"dname":"580887b3-fa45-4a8c-a058-2095fd0bc52c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"stackAreaDefault = _.merge(_.cloneDeep(multiAreaDefault), {\n    title: {\n        text: \"stack area chart\"\n    },\n    description: {\n        text: \"a simple stack area chart\"\n    },\n    isStack: true,\n});","pinCode":false,"dname":"dc4e8f7a-e39b-4da5-a10d-81f3e8b78e59","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"transposeStackAreaDefault = _.merge(_.cloneDeep(stackAreaDefault), {\n    title: {\n        text: \"transpose stack area chart\"\n    },\n    description: {\n        text: \"a simple transpose stack area chart\"\n    },\n})","pinCode":false,"dname":"7beba4c7-f251-4d52-9493-defd7c12d32d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"percentageStackAreaDefault = _.merge(_.cloneDeep(multiAreaDefault), {\n    title: {\n        text: \"percentage stack area chart\"\n    },\n    description: {\n        text: \"a simple percentage stack area chart\"\n    },\n    label: {\n        displayConfig: { type: ShowType.Off },\n        offset: 10,//entire offset\n        offsetX: 0,\n        offsetY: 0,\n        style: _.cloneDeep(LableStyleConfig),\n        content: {\n            displayConfig: { type: ShowType.JsText },\n            value: `(item) => {\n                return item.{yField}.toFixed(2)+\"%\";\n            }`\n        },\n    },\n    isStack: true,\n    isPercent: true,\n});","pinCode":false,"dname":"eefdc280-2842-40e6-8f92-c30d56617963","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"transposePercentageStackAreaDefault = _.merge(_.cloneDeep(percentageStackAreaDefault), {\n    title: {\n        text: \"transpose percentage stack area chart\"\n    },\n    description: {\n        text: \"a simple transpose percentage stack area chart\"\n    },\n})","pinCode":false,"dname":"bbb6f64f-7ac8-477e-9710-883c8403ecef","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"barDefault = ({\n    xField: 'year',\n    yField: 'value',\n    title: _.assign({\n        text: \"bar chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple bar chart\"\n    },\n    padding: {\n        displayConfig: { type: ShowType.Padding },\n        value: 'auto',\n    },\n    autoFit: true,\n    renderer: {\n        displayConfig: { type: ShowType.Select },\n        selector: RENDERERS,\n        value: RENDERERS[0]\n    },\n    barWidthRatio: {\n        displayConfig: { type: ShowType.Number },\n        minV: 0.1,\n        maxV: 1.0,\n        step: 0.1,\n        value: 0.5,\n    },\n    // marginRatio: {\n    //     displayConfig: { type: ShowType.Remove },\n    //     minV: 0.1,\n    //     maxV: 1.0,\n    //     step: 0.1,\n    //     value: 0.5,\n    // },\n    legend: {\n        displayConfig: { type: ShowType.Remove },\n        position: {\n            displayConfig: { type: ShowType.Select },\n            selector: legendPositions,\n            value: 'top-left',\n        },\n        flipPage: true,\n        offsetX: 0,\n        offsetY: 0,\n    },\n    label: {\n        displayConfig: { type: ShowType.Off },\n        position: {\n            displayConfig: { type: ShowType.Select },\n            selector: columnLabelPositions,\n            value: 'right',\n        },\n        offset: 0,//entire offset\n        offsetX: 0,\n        offsetY: 0,\n        style: _.cloneDeep(LableStyleConfig),\n    },\n    point: {\n        displayConfig: { type: ShowType.Off },\n        size: 5,\n        shape: {\n            displayConfig: { type: ShowType.Select },\n            selector: ShapeType,\n            value: 'circle',\n        }\n    },\n    xAxis: {\n        title: {\n            displayConfig: { type: ShowType.Off },\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: false,\n            autoHide: true,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            displayConfig: { type: ShowType.Off },\n            length: 5\n        },\n        grid: ON_GRID_CONFIG,\n        min: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 0\n            }\n        },\n        tickInterval: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 5\n            }\n        },\n    },\n    yAxis: {\n        title: {\n            displayConfig: { type: ShowType.Off },\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: false,\n            autoHide: true,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            displayConfig: { type: ShowType.Off },\n            length: 5\n        },\n        grid: OFF_GRID_CONFIG,\n        min: {\n            displayConfig: {\n                type: ShowType.On, onValue: 0\n            }\n        },\n        tickInterval: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 5\n            }\n        },\n    },\n    color: _.cloneDeep(DEFAULT_COLOR),\n    interactions: DEFAULT_INTERACTIONS,\n})","pinCode":false,"dname":"20842dd0-f14c-4c4e-891a-a92fbfa03030","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"multiBarDefault = _.merge(_.cloneDeep(barDefault), {\n    title: {\n        text: \"multi bar chart\"\n    },\n    description: {\n        text: \"a simple multi bar chart\"\n    },\n    // marginRatio: {\n    //     displayConfig: { type: ShowType.Off },\n    // },\n    legend: {\n        displayConfig: { type: ShowType.Off },\n    },\n    isStack: false,\n    isGroup: true,\n    isRange: false,\n    isPercent: false,\n    color: DEFAULT_MULTI_COLOR\n});","pinCode":false,"dname":"025bb705-460d-4f25-8143-d526b4042942","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"transposeMultiBarDefault = _.merge(_.cloneDeep(multiBarDefault), {\n    title: {\n        text: \"transpose multi bar chart\"\n    },\n    description: {\n        text: \"a simple transpose multi bar chart\"\n    },\n})","pinCode":false,"dname":"b9791d19-cd5e-4ff2-a0d5-b7fad7fd71f5","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"percentageStackBarDefault = _.merge(_.cloneDeep(barDefault), {\n    title: {\n        text: \"a percentage stack bar chart\"\n    },\n    description: {\n        text: \"a percentage stack bar chart\"\n    },\n    // marginRatio: {\n    //     displayConfig: { type: ShowType.Off },\n    // },\n    legend: {\n        displayConfig: { type: ShowType.Off },\n    },\n    label: {\n        displayConfig: { type: ShowType.On },\n        position: {\n            displayConfig: { type: ShowType.Select },\n            selector: columnLabelPositions,\n            value: 'right',\n        },\n        offset: 0,//entire offset\n        offsetX: 0,\n        offsetY: 0,\n        style: _.cloneDeep(LableStyleConfig),\n        content: {\n            displayConfig: { type: ShowType.JsText },\n            value: `(item) => {\n                return item.{xField}.toFixed(2)+\"%\";\n            }`\n        },\n    },\n    isStack: true,\n    isGroup: false,\n    isRange: false,\n    isPercent: true,\n    color: DEFAULT_MULTI_COLOR\n});","pinCode":false,"dname":"f78161fc-815c-49c0-82ae-1b37f6ff047e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"transposePercentageStackBarDefault = _.merge(_.cloneDeep(percentageStackBarDefault), {\n    title: {\n        text: \"transpose percentage stack bar chart\"\n    },\n    description: {\n        text: \"a simple transpose percentage stack bar chart\"\n    },\n})","pinCode":false,"dname":"c2f89e7a-e8a7-4793-86b8-05018db23132","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"columnDefault = ({\n    xField: 'year',\n    yField: 'value',\n    title: _.assign({\n        text: \"column chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple column chart\"\n    },\n    padding: {\n        displayConfig: { type: ShowType.Padding },\n        value: 'auto',\n    },\n    autoFit: true,\n    renderer: {\n        displayConfig: { type: ShowType.Select },\n        selector: RENDERERS,\n        value: RENDERERS[0]\n    },\n    columnWidthRatio: {\n        displayConfig: { type: ShowType.Number },\n        minV: 0.1,\n        maxV: 1.0,\n        step: 0.1,\n        value: 0.5,\n    },\n    // marginRatio: {\n    //     displayConfig: { type: ShowType.Remove },\n    //     minV: 0.1,\n    //     maxV: 1.0,\n    //     step: 0.1,\n    //     value: 0.5,\n    // },\n    legend: {\n        displayConfig: { type: ShowType.Remove },\n        position: {\n            displayConfig: { type: ShowType.Select },\n            selector: legendPositions,\n            value: 'top-left',\n        },\n        flipPage: true,\n        offsetX: 0,\n        offsetY: 0,\n    },\n    label: {\n        displayConfig: { type: ShowType.Off },\n        position: {\n            displayConfig: { type: ShowType.Select },\n            selector: columnLabelPositions,\n            value: 'top',\n        },\n        offset: 0,//entire offset\n        offsetX: 0,\n        offsetY: 0,\n        style: _.cloneDeep(LableStyleConfig),\n    },\n    // point: {\n    //     displayConfig: { type: ShowType.Off },\n    //     size: 5,\n    //     shape: {\n    //         displayConfig: { type: ShowType.Select },\n    //         selector: ShapeType,\n    //         value: 'circle',\n    //     }\n    // },\n    xAxis: {\n        title: {\n            displayConfig: { type: ShowType.Off },\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: false,\n            autoHide: true,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            displayConfig: { type: ShowType.Off },\n            length: 5\n        },\n        grid: OFF_GRID_CONFIG,\n        min: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 0\n            }\n        },\n        tickInterval: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 5\n            }\n        },\n    },\n    yAxis: {\n        title: {\n            displayConfig: { type: ShowType.Off },\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: false,\n            autoHide: true,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            displayConfig: { type: ShowType.Off },\n            length: 5\n        },\n        grid: ON_GRID_CONFIG,\n        min: {\n            displayConfig: {\n                type: ShowType.On, onValue: 0\n            }\n        },\n        tickInterval: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 5\n            }\n        },\n    },\n    color: _.cloneDeep(DEFAULT_COLOR),\n    interactions: DEFAULT_INTERACTIONS,\n})","pinCode":false,"dname":"e4463d92-3e1e-4fcd-be03-b3e684210e0a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"multiColumnDefault = _.merge(_.cloneDeep(columnDefault), {\n    title: {\n        text: \"multi column chart\"\n    },\n    description: {\n        text: \"a simple multi column chart\"\n    },\n    // marginRatio: {\n    //     displayConfig: { type: ShowType.Off },\n    // },\n    legend: {\n        displayConfig: { type: ShowType.On },\n    },\n    isStack: false,\n    isGroup: true,\n    isRange: false,\n    isPercent: false,\n    color: DEFAULT_MULTI_COLOR\n});\n","pinCode":false,"dname":"579d3c85-dd6e-4716-89f3-86db47a92405","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"transposeMultiColumnDefault = _.merge(_.cloneDeep(multiColumnDefault), {\n    title: {\n        text: \"transpose multi column chart\"\n    },\n    description: {\n        text: \"a simple transpose multi column chart\"\n    },\n})","pinCode":false,"dname":"45bca419-b284-4a15-9fe3-cce8f17dde60","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"percentageStackColumnDefault = _.merge(_.cloneDeep(columnDefault), {\n    title: {\n        text: \"a percentage stack column chart\"\n    },\n    description: {\n        text: \"a percentage stack column chart\"\n    },\n    legend: {\n        displayConfig: { type: ShowType.On },\n    },\n    label: {\n        displayConfig: { type: ShowType.Off },\n        position: {\n            displayConfig: { type: ShowType.Select },\n            selector: columnLabelPositions,\n            value: 'top',\n        },\n        offset: 0,//entire offset\n        offsetX: 0,\n        offsetY: 0,\n        content: {\n            displayConfig: { type: ShowType.JsText },\n            value: `(item) => {\n                return item.{yField}.toFixed(2)+\"%\";\n            }`\n        },\n        style: _.cloneDeep(LableStyleConfig),\n    },\n    isStack: true,\n    isGroup: false,\n    isRange: false,\n    isPercent: true,\n    color: DEFAULT_MULTI_COLOR\n});","pinCode":false,"dname":"fc76f3a6-49a3-4b54-81e0-ca61f812783c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"transposePercentageStackColumnDefault = _.merge(_.cloneDeep(percentageStackColumnDefault), {\n    title: {\n        text: \"transpose percentage stack column chart\"\n    },\n    description: {\n        text: \"a simple transpose percentage stack column chart\"\n    },\n})","pinCode":false,"dname":"aa22a6b4-7aa5-45c3-949c-e1575e0913f0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"waterfallDefault = ({\n    xField: 'year',\n    yField: 'value',\n    title: _.assign({\n        text: \"waterfall chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple waterfall chart\"\n    },\n    padding: {\n        displayConfig: { type: ShowType.Padding },\n        value: 'auto',\n    },\n    autoFit: true,\n    renderer: {\n        displayConfig: { type: ShowType.Select },\n        selector: RENDERERS,\n        value: RENDERERS[0]\n    },\n    risingFill: {\n        displayConfig: { type: ShowType.Color },\n        value: \"#f4664a\"\n    },\n    fallingFill: {\n        displayConfig: { type: ShowType.Color },\n        value: \"#30bf78\"\n    },\n    total: {\n        displayConfig: { type: ShowType.On },\n        style: {\n            label: \"Total\",\n            fill: {\n                displayConfig: { type: ShowType.Color },\n                value: \"#AAA\"\n            }\n        }\n    },\n    label: {\n        displayConfig: { type: ShowType.On },\n        position: {\n            displayConfig: { type: ShowType.Select },\n            selector: columnLabelPositions,\n            value: 'top',\n        },\n        offset: 0,//entire offset\n        offsetX: 0,\n        offsetY: 0,\n        style: _.cloneDeep(LableStyleConfig),\n    },\n    leaderLine: {\n        displayConfig: { type: ShowType.Off },\n        style: {\n            stroke: {\n                displayConfig: { type: ShowType.Color },\n                value: \"#8c8c8c\"\n            },\n            lineWidth: 1,\n            lineDash: {\n                displayConfig: {\n                    type: ShowType.Off, onValue: [4, 2]\n                },\n            },\n        }\n    },\n    xAxis: {\n        title: {\n            displayConfig: { type: ShowType.Off },\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: false,\n            autoHide: true,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            displayConfig: { type: ShowType.Off },\n            length: 5\n        },\n        grid: OFF_GRID_CONFIG,\n        min: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 0\n            }\n        },\n        tickInterval: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 5\n            }\n        },\n    },\n    yAxis: {\n        title: {\n            displayConfig: { type: ShowType.Off },\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: false,\n            autoHide: true,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            displayConfig: { type: ShowType.Off },\n            length: 5\n        },\n        grid: ON_GRID_CONFIG,\n        min: {\n            displayConfig: {\n                type: ShowType.On, onValue: 0\n            }\n        },\n        tickInterval: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 5\n            }\n        },\n    }\n})","pinCode":false,"dname":"3fdf7638-2118-4efa-ad39-977955606468","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"histogramDefault = ({\n    binField: 'value',\n    binWidth: {\n        displayConfig: { type: ShowType.Off, onValue: 3 },\n    },\n    title: _.assign({\n        text: \"histogram chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple histogram chart\"\n    },\n    padding: {\n        displayConfig: { type: ShowType.Padding },\n        value: 'auto',\n    },\n    autoFit: true,\n    renderer: {\n        displayConfig: { type: ShowType.Select },\n        selector: RENDERERS,\n        value: RENDERERS[0]\n    },\n    label: {\n        displayConfig: { type: ShowType.Off },\n        position: {\n            displayConfig: { type: ShowType.Select },\n            selector: columnLabelPositions,\n            value: 'top',\n        },\n        offset: 0,//entire offset\n        offsetX: 0,\n        offsetY: 0,\n        style: _.cloneDeep(LableStyleConfig),\n    },\n    xAxis: {\n        title: {\n            displayConfig: { type: ShowType.Off },\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: false,\n            autoHide: true,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            displayConfig: { type: ShowType.Off },\n            length: 5\n        },\n        grid: OFF_GRID_CONFIG,\n        min: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 0\n            }\n        },\n        tickInterval: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 5\n            }\n        },\n    },\n    yAxis: {\n        title: {\n            displayConfig: { type: ShowType.Off },\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: false,\n            autoHide: true,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            displayConfig: { type: ShowType.Off },\n            length: 5\n        },\n        grid: ON_GRID_CONFIG,\n        min: {\n            displayConfig: {\n                type: ShowType.On, onValue: 0\n            }\n        },\n        tickInterval: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 5\n            }\n        },\n    },\n    interactions: DEFAULT_INTERACTIONS,\n})","pinCode":false,"dname":"dee25d6d-8fd6-4f14-9e04-3c8ddad67542","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"stackHistogramDefault = _.merge(_.cloneDeep(histogramDefault), { stackField: \"y\" })","pinCode":false,"dname":"c72397c5-45f6-4ecd-8451-756ec803cff6","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"pieDefault = ({\n    padding: {\n        displayConfig: { type: ShowType.Padding },\n        value: 'auto',\n    },\n    angleField: 'value',\n    colorField: 'type',\n    title: _.assign({\n        text: \"pie chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple pie chart\"\n    },\n    autoFit: true,\n    renderer: {\n        displayConfig: { type: ShowType.Select },\n        selector: RENDERERS,\n        value: RENDERERS[0]\n    },\n    radius: {\n        displayConfig: { type: ShowType.Number },\n        minV: 0.1,\n        maxV: 1.0,\n        step: 0.1,\n        value: 1.0,\n    },\n    innerRadius: {\n        displayConfig: {\n            type: ShowType.Off, onValue: {\n                displayConfig: { type: ShowType.Number },\n                minV: 0.1,\n                maxV: 1.0,\n                step: 0.1,\n                value: 0.3,\n            }\n        }\n    },\n    startAngle: {\n        displayConfig: {\n            type: ShowType.Off, onValue: {\n                displayConfig: { type: ShowType.Number },\n                minV: 0.00,\n                maxV: Math.PI * 2,\n                step: 0.01,\n                value: 0.0,\n            }\n        }\n    },\n    endAngle: {\n        displayConfig: {\n            type: ShowType.Off, onValue: {\n                displayConfig: { type: ShowType.Number },\n                minV: 0.00,\n                maxV: Math.PI * 2,\n                step: 0.01,\n                value: Math.PI * 1,\n            }\n        }\n    },\n    label: {\n        type: {\n            displayConfig: { type: ShowType.Select },\n            selector: pieLableTypes,\n            value: 'inner'\n        },\n        content: { displayConfig: { type: ShowType.Off, onValue: '{name}\\t{percentage}' } },\n        style: {\n            fontSize: 14,\n            textAlign: {\n                displayConfig: { type: ShowType.Select },\n                selector: fontAlignTypes,\n                value: 'center'\n            },\n            style: _.cloneDeep(LableStyleConfig),\n        },\n    },\n    legend: {\n        displayConfig: { type: ShowType.On },\n        layout: {\n            displayConfig: { type: ShowType.Select },\n            selector: ['horizontal', 'vertical'],\n            value: undefined,\n            props: { allowClear: true },\n        },\n        position: {\n            displayConfig: { type: ShowType.Select },\n            selector: ['top', 'top-left', 'top-right', 'left', 'left-top', 'left-bottom', 'right', 'right-top', 'right-bottom', 'bottom', 'bottom-left', 'bottom-right'],\n            value: 'right',\n            props: { allowClear: true },\n        },\n    },\n    color: DEFAULT_MULTI_COLOR,\n    interactions: DEFAULT_INTERACTIONS,\n})","pinCode":false,"dname":"3c56bd38-413d-4939-8273-3a8f5afbfb93","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"roseDefault = ({\n    xField: 'year',\n    yField: 'value',\n    title: _.assign({\n        text: \"rose chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple rose chart\"\n    },\n    label: {\n        displayConfig: { type: ShowType.Off },\n        position: {\n            displayConfig: { type: ShowType.Select },\n            selector: columnLabelPositions,\n            value: 'top',\n        },\n        offset: 0,//entire offset\n        offsetX: 0,\n        offsetY: 0,\n        style: _.cloneDeep(LableStyleConfig),\n    },\n    radius: {\n        displayConfig: { type: ShowType.Number },\n        minV: 0.1,\n        maxV: 1.0,\n        step: 0.1,\n        value: 1.0,\n    },\n    autoFit: true,\n    padding: {\n        displayConfig: { type: ShowType.Padding },\n        value: 'auto',\n    },\n    renderer: {\n        displayConfig: { type: ShowType.Select },\n        selector: RENDERERS,\n        value: 'canvas'\n    },\n    // tooltip: {\n    //     displayConfig: { type: ShowType.On },\n    //     showContent: true,\n    // },\n    color: _.cloneDeep(DEFAULT_COLOR),\n    interactions: DEFAULT_INTERACTIONS,\n})","pinCode":false,"dname":"06cf8aad-3d0f-454d-8658-6732d7fb2e49","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"multiRoseDefault = _.merge(_.cloneDeep(roseDefault), {\n    title: {\n        text: \"multi rose chart\"\n    },\n    description: {\n        text: \"a simple multi rose chart\"\n    },\n    legend: {\n        displayConfig: { type: ShowType.On },\n    },\n    isGroup: true,\n    isStack: false,\n    color: DEFAULT_MULTI_COLOR\n})","pinCode":false,"dname":"49b29ded-0eae-4677-8c09-d0c12a5af38d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"transposeMultiRoseDefault = _.merge(_.cloneDeep(multiRoseDefault), {\n    title: {\n        text: \"transpose multi rose chart\"\n    },\n    description: {\n        text: \"a simple transpose multi rose chart\"\n    },\n})","pinCode":false,"dname":"f0220b03-5998-42d6-b42a-906155597a11","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"scatterDefault = ({\n    xField: 'year',\n    yField: 'value',\n    title: _.assign({\n        text: \"scatter chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple scatter chart\"\n    },\n    padding: {\n        displayConfig: { type: ShowType.Padding },\n        value: 'auto',\n    },\n    autoFit: true,\n    smooth: false,\n    label: {\n        displayConfig: { type: ShowType.Off },\n        offset: 10,//entire offset\n        offsetX: 0,\n        offsetY: 0,\n        style: _.cloneDeep(LableStyleConfig),\n    },\n    // point: {\n    //     displayConfig: { type: ShowType.Off },\n    //     size: 3,\n    //     shape: {\n    //         displayConfig: { type: ShowType.Select },\n    //         selector: BubbleShapeType,\n    //         value: 'circle'\n    //     }\n    // },\n    size: 3,\n    shape: {\n        displayConfig: { type: ShowType.Select },\n        selector: BubbleShapeType,\n        value: 'circle'\n    },\n    // tooltip: {\n    //     displayConfig: { type: ShowType.On },\n    //     showContent: true,\n    // },\n    xAxis: {\n        title: {\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: false,\n            autoHide: true,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            displayConfig: { type: ShowType.Off },\n            length: 5\n        },\n        grid: OFF_GRID_CONFIG,\n        min: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 0\n            }\n        },\n        tickInterval: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 5\n            }\n        },\n    },\n    yAxis: {\n        title: {\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: false,\n            autoHide: true,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            displayConfig: { type: ShowType.Off },\n            length: 5\n        },\n        grid: ON_GRID_CONFIG,\n        min: {\n            displayConfig: {\n                type: ShowType.On, onValue: 0\n            }\n        },\n        tickInterval: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 5\n            }\n        },\n    },\n    regressionLine: {\n        displayConfig: { type: ShowType.Off },\n        type: {\n            displayConfig: { type: ShowType.Select },\n            selector: \"linear, exp, loess, log, poly, pow, quad\".split(\", \"),\n            value: 'linear'\n        },\n        style: {\n            displayConfig: { type: ShowType.Off },\n            fill: {\n                displayConfig: {\n                    type: ShowType.Off, onValue: {\n                        displayConfig: { type: ShowType.Color },\n                        value: \"red\"\n                    }\n                }\n            },\n            fillOpacity: {\n                displayConfig: {\n                    type: ShowType.Off, onValue: {\n                        displayConfig: { type: ShowType.Number },\n                        minV: 0.0,\n                        maxV: 1.0,\n                        step: 0.1,\n                        value: 0.5,\n                    }\n                }\n            },\n            stroke: {\n                displayConfig: { type: ShowType.Color },\n                value: \"black\"\n            },\n            lineWidth: 1,\n            lineDash: {\n                displayConfig: {\n                    type: ShowType.Off, onValue: [4, 5]\n                },\n            },\n            strokeOpacity: {\n                displayConfig: { type: ShowType.Number },\n                minV: 0.0,\n                maxV: 1.0,\n                step: 0.1,\n                value: 0.7,\n            },\n            shadowColor: {\n                displayConfig: {\n                    type: ShowType.Off, onValue: {\n                        displayConfig: { type: ShowType.Color },\n                        value: \"black\"\n                    }\n                }\n            },\n            shadowBlur: {\n                displayConfig: {\n                    type: ShowType.Off, onValue: 10\n                }\n            },\n            shadowOffsetX: {\n                displayConfig: {\n                    type: ShowType.Off, onValue: 5\n                }\n            },\n            shadowOffsetY: {\n                displayConfig: {\n                    type: ShowType.Off, onValue: 5\n                }\n            },\n            // cursor: 'pointer'\n        }\n    },\n    size: 4,\n    color: _.cloneDeep(DEFAULT_COLOR),\n    interactions: DEFAULT_INTERACTIONS,\n})","pinCode":false,"dname":"eab8fc94-f89a-4b36-a602-fa6f9b2528eb","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"multiScatterDefault = _.merge(_.cloneDeep(scatterDefault), {\n    title: {\n        text: \"multi scatter chart\"\n    },\n    description: {\n        text: \"a simple multi scatter chart\"\n    },\n    legend: {\n        displayConfig: { type: ShowType.On },\n    },\n    color: DEFAULT_MULTI_COLOR,\n});","pinCode":false,"dname":"c73b2a54-4221-48a5-9096-24cfaad3be3b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"transposeMultiScatterDefault = _.merge(_.cloneDeep(multiScatterDefault), {\n    title: {\n        text: \"transpose multi scatter chart\"\n    },\n    description: {\n        text: \"a simple transpose multi scatter chart\"\n    },\n})","pinCode":false,"dname":"7250f1bc-efdc-4369-a0dc-408bc8c89470","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"bubbleDefault = _.merge(_.cloneDeep(scatterDefault), {\n    title: _.assign({\n        text: \"bubble chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple bubble chart\"\n    },\n    size: [12, 30],\n    shape: {\n        displayConfig: { type: ShowType.Select },\n        selector: BubbleShapeType,\n        value: 'circle'\n    },\n    color: _.cloneDeep(DEFAULT_COLOR),\n    interactions: DEFAULT_INTERACTIONS,\n});","pinCode":false,"dname":"9e70c8a0-e32d-488c-a904-c2506cdb1546","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"multiBubbleDefault = _.merge(_.cloneDeep(bubbleDefault), {\n    title: {\n        text: \"multi bubble chart\"\n    },\n    description: {\n        text: \"a simple multi bubble chart\"\n    },\n    legend: {\n        displayConfig: { type: ShowType.On },\n    },\n    // tooltip: {\n    //     shared: true,\n    // },\n    color: DEFAULT_MULTI_COLOR,\n});","pinCode":false,"dname":"81489efd-fac9-403c-9061-2ba6a290f50c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"wordCloudDefault = ({\n    wordField: 'year',\n    weightField: 'value',\n    colorField: undefined,\n    title: _.assign({\n        text: \"word cloud chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple word cloud chart\"\n    },\n    autoFit: true,\n    padding: {\n        displayConfig: { type: ShowType.Padding },\n        value: 'auto',\n    },\n    renderer: {\n        displayConfig: { type: ShowType.Select },\n        selector: RENDERERS,\n        value: RENDERERS[0]\n    },\n    wordStyle: {\n        fontFamily: 'Verdana',\n        fontSize: [8, 32],\n    },\n    // 设置交互类型\n    interactions: [{ type: 'element-active' }],\n    state: {\n        active: {\n            // 这里可以设置 active 时的样式\n            style: {\n                lineWidth: 3,\n            },\n        },\n    },\n    imageMask: {\n        displayConfig: {\n            type: ShowType.Off, onValue: 'https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*07tdTIOmvlYAAAAAAAAAAABkARQnAQ'\n        },\n    },\n    color: _.cloneDeep(DEFAULT_COLOR),\n    interactions: DEFAULT_INTERACTIONS,\n})","pinCode":false,"dname":"c7da05eb-5ab7-4543-a9ff-6c4bd834b7a0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"multiWordCloudDefault = _.merge(_.cloneDeep(wordCloudDefault), {\n    title: {\n        text: \"multi word cloud chart\"\n    },\n    description: {\n        text: \"a simple multi word cloud chart\"\n    },\n    color: DEFAULT_MULTI_COLOR,\n});","pinCode":false,"dname":"2354e7b0-c5c2-4d77-99d9-60cfdc4d363b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"transposeMultiBubbleDefault = _.merge(_.cloneDeep(multiBubbleDefault), {\n    title: {\n        text: \"transpose multi bubble chart\"\n    },\n    description: {\n        text: \"a simple transpose multi bubble chart\"\n    },\n})","pinCode":false,"dname":"a2b28130-ddea-4fac-8dc1-1074edb26bef","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"continuousHeatmapDefault = ({\n    xField: 'year',\n    yField: 'value',\n    colorField: undefined,\n    sizeField: undefined,\n    title: _.assign({\n        text: \"continuous heatmap chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a continuous heatmap chart\"\n    },\n    padding: {\n        displayConfig: { type: ShowType.Padding },\n        value: 'auto',\n    },\n    legend: {\n        displayConfig: { type: ShowType.Off },\n        position: {\n            displayConfig: { type: ShowType.Select },\n            selector: legendPositions,\n            value: 'top-left',\n        },\n        offsetX: 0,\n        offsetY: 0,\n    },\n    autoFit: true,\n    // padding: 0,\n    renderer: {\n        displayConfig: { type: ShowType.Select },\n        selector: RENDERERS,\n        value: RENDERERS[0]\n    },\n    type: {\n        displayConfig: { type: ShowType.Select },\n        selector: HEAT_MAP_TYPES,\n        value: HEAT_MAP_TYPES[1]\n    },\n    color: {\n        displayConfig: {\n            type: ShowType.Off, onValue: [{\n                displayConfig: { type: ShowType.Color },\n                value: \"#d62728\"\n            },\n            {\n                displayConfig: { type: ShowType.Color },\n                value: \"#2ca02c\"\n            },\n            {\n                displayConfig: { type: ShowType.Color },\n                value: \"#000000\"\n            }]\n        },\n    },\n    xAxis: {\n        title: {\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,//entire offset\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: true,\n            autoHide: false,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            length: 5\n        },\n        grid: OFF_GRID_CONFIG,\n        min: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 0\n            }\n        },\n        tickInterval: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 5\n            }\n        },\n    },\n    yAxis: {\n        title: {\n            text: \"\",\n            autoRotate: true,\n        },\n        label: {\n            offset: 10,//entire offset\n            offsetX: 0,\n            offsetY: 0,\n            rotate: ROTATE_CONFIG,\n            autoRotate: true,\n            autoHide: false,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        tickLine: {\n            length: 5\n        },\n        grid: ON_GRID_CONFIG,\n        min: {\n            displayConfig: {\n                type: ShowType.On, onValue: 0\n            }\n        },\n        tickInterval: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 5\n            }\n        },\n    },\n    interactions: DEFAULT_INTERACTIONS,\n})","pinCode":false,"dname":"95c9a370-e2f6-4ce3-976e-badd27967236","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"heatmapDefault = _.merge(_.cloneDeep(continuousHeatmapDefault), {\n    title: _.assign({\n        text: \"heatmap chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a heatmap chart\"\n    },\n    label: {\n        displayConfig: { type: ShowType.Off },\n        offset: 10,//entire offset\n        offsetX: 0,\n        offsetY: 0,\n        style: _.cloneDeep(LableStyleConfig),\n    },\n    type: {\n        displayConfig: { type: ShowType.Select },\n        selector: HEAT_MAP_TYPES,\n        value: HEAT_MAP_TYPES[0]\n    },\n    shape: {\n        displayConfig: { type: ShowType.Select },\n        selector: HeatmapShapeType,\n        value: HeatmapShapeType[0]\n    },\n});","pinCode":false,"dname":"bacc2f3c-b6ea-4663-a95f-8dfef3a66b5b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"unevenHeatmapDefault = _.merge(_.cloneDeep(continuousHeatmapDefault), {\n    title: _.assign({\n        text: \"uneven heatmap chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a uneven heatmap chart\"\n    },\n    label: {\n        displayConfig: { type: ShowType.Off },\n        offset: 10,//entire offset\n        offsetX: 0,\n        offsetY: 0,\n        style: _.cloneDeep(LableStyleConfig),\n    },\n    type: {\n        displayConfig: { type: ShowType.Select },\n        selector: HEAT_MAP_TYPES,\n        value: HEAT_MAP_TYPES[0]\n    },\n    shape: {\n        displayConfig: { type: ShowType.Select },\n        selector: HeatmapShapeType,\n        value: HeatmapShapeType[0]\n    },\n});","pinCode":false,"dname":"a5b7f0bf-e674-4ab9-8c54-fd199eb62deb","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"radarDefault =( {\n    xField: 'year',\n    yField: 'value',\n    title: _.assign({\n        text: \"radar chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple radar chart\"\n    },\n    padding: {\n        displayConfig: { type: ShowType.Padding },\n        value: 'auto',\n    },\n    radius: {\n        displayConfig: { type: ShowType.Number },\n        minV: 0.1,\n        maxV: 1.0,\n        step: 0.1,\n        value: 1.0,\n    },\n    autoFit: true,\n    smooth: false,\n    area: {\n        displayConfig: {\n            type: ShowType.Off, onValue: {\n                smooth: false,\n                color: {\n                    displayConfig: {\n                        type: ShowType.Off, onValue: {\n                            displayConfig: { type: ShowType.JsText },\n                            value: `(series) => {\n        return series === 'a' ? 'red' : 'yellow'\n    }`}\n                    },\n                },\n                style: {\n                    displayConfig: {\n                        type: ShowType.Off, onValue: {\n                            displayConfig: { type: ShowType.JsText },\n                            value: `(series) => {\n        return {\n            fill: series === 'a' ? 'red' : 'yellow'\n        }\n    }`}\n                    },\n                },\n            }\n        },\n    },\n    point: {\n        displayConfig: { type: ShowType.Off },\n        size: 3,\n        shape: {\n            displayConfig: { type: ShowType.Select },\n            selector: ShapeType,\n            value: 'circle'\n        }\n    },\n    // tooltip: {\n    //     displayConfig: { type: ShowType.On },\n    //     showContent: true,\n    // },\n    xAxis: {\n        tickLine: {\n            displayConfig: { type: ShowType.Off },\n            length: 5\n        },\n        label: {\n            offset: 10,//entire offset\n            offsetX: 0,\n            offsetY: 0,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n    },\n    yAxis: {\n        title: {\n            text: \"\",\n            autoRotate: true,\n        },\n        tickLine: {\n            displayConfig: { type: ShowType.Off },\n            length: 5\n        },\n        label: {\n            offset: 10,//entire offset\n            offsetX: 0,\n            offsetY: 0,\n            style: _.cloneDeep(LableStyleConfig),\n        },\n        min: {\n            displayConfig: {\n                type: ShowType.On, onValue: 0\n            }\n        },\n        tickInterval: {\n            displayConfig: {\n                type: ShowType.Off, onValue: 5\n            }\n        },\n    },\n    color: _.cloneDeep(DEFAULT_COLOR),\n    interactions: DEFAULT_INTERACTIONS,\n})","pinCode":false,"dname":"357cebdf-5ca9-485f-b8a9-9bb4ed16b99c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"transposeMultiRadarDefault = _.merge(_.cloneDeep(multiRadarDefault), {\n    title: {\n        text: \"transpose multi radar chart\"\n    },\n    description: {\n        text: \"a simple transpose multi radar chart\"\n    },\n})","pinCode":false,"dname":"0c588f12-a1bd-4c11-9acc-f1b7a73ff87d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"multiRadarDefault = _.merge(_.cloneDeep(radarDefault), {\n    title: {\n        text: \"multi radar chart\"\n    },\n    description: {\n        text: \"a simple multi radar chart\"\n    },\n    legend: {\n        displayConfig: { type: ShowType.On },\n    },\n    // tooltip: {\n    //     shared: true,\n    // },\n    color: DEFAULT_MULTI_COLOR\n});","pinCode":false,"dname":"6f4a3e22-f6cb-4dd9-9dfb-6fb1d25e1b54","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"liquidDefault = ({\n    percent: 0.25,\n    title: _.assign({\n        text: \"liquid chart\"\n    }, _.cloneDeep(TitleConfig)),\n    description: {\n        text: \"a simple liquid chart\"\n    },\n    padding: {\n        displayConfig: { type: ShowType.Padding },\n        value: 'auto',\n    },\n    autoFit: true,\n    renderer: {\n        displayConfig: { type: ShowType.Select },\n        selector: RENDERERS,\n        value: RENDERERS[0]\n    },\n    outline: {\n        border: {\n            displayConfig: { type: ShowType.Number },\n            minV: 0,\n            maxV: 100,\n            step: 1,\n            value: 4,\n        },\n        distance: {\n            displayConfig: { type: ShowType.Number },\n            minV: 0,\n            maxV: 100,\n            step: 1,\n            value: 8,\n        },\n    },\n    wave: {\n        length: {\n            displayConfig: { type: ShowType.Number },\n            minV: 1,\n            maxV: 1000,\n            step: 1,\n            value: 128,\n        },\n    },\n    color: _.cloneDeep(DEFAULT_COLOR),\n})","pinCode":false,"dname":"8c868b63-1368-4b50-8115-8d5e0e16c92b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"## Methods","pinCode":false,"dname":"86683583-8a9a-4ec5-b10a-84bc96ba9b7e","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"FIELDS = ({\n    startField: null,\n    endField: null,\n    contentField: null,\n    groupField: null,\n    xField: null,\n    yField: null,\n    seriesField: null,\n    angleField: null,\n    colorField: null,\n    sizeField: null,\n    wordField: null,\n    weightField: null,\n    binField: null,\n    stackField: null,\n    transposeFields: [],\n})","pinCode":false,"dname":"4efed102-8983-4ec9-9b0a-5d563c8d3347","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"chartOptionsDefault = _.assign({}, FIELDS, _.cloneDeep(lineDefault));","pinCode":false,"dname":"1eea2389-45a1-4a69-a375-7bee4a04aab1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"  getDefaultOptionsByType = function (type) {\n    if (optionsByType[type]) {\n        return optionsByType[type];\n    }\n    let options;\n    switch (type) {\n        case ChartTypes['Base Timeline']:\n            options = timelineDefault;\n            break;\n        case ChartTypes['Base Range Timeline']:\n            options = rangeTimelineDefault;\n            break;\n        case ChartTypes['Groups Timeline']:\n            options = groupsTimelineDefault;\n            break;\n        case ChartTypes['Groups Range Timeline']:\n            options = groupsRangeTimelineDefault;\n            break;\n        case ChartTypes['SubGroups Timeline']:\n            options = subGroupsTimelineDefault;\n            break;\n        case ChartTypes['SubGroups Range Timeline']:\n            options = subGroupsRangeTimelineDefault;\n            break;\n        case ChartTypes['Basic Line']:\n            options = lineDefault;\n            break;\n        case ChartTypes['Multi Line']:\n            options = multiLineDefault;\n            break;\n        case ChartTypes['Transpose Multi Line']:\n            options = transposeMultiLineDefault;\n            break;\n        case ChartTypes['Basic Column']:\n            options = columnDefault;\n            break;\n        case ChartTypes['Multi Column']:\n            options = multiColumnDefault;\n            break;\n        case ChartTypes['Transpose Multi Column']:\n            options = transposeMultiColumnDefault;\n            break;\n        case ChartTypes['Percentage Stack Column']:\n            options = percentageStackColumnDefault;\n            break;\n        case ChartTypes['Transpose Percentage Stack Column']:\n            options = transposePercentageStackColumnDefault;\n            break;\n        case ChartTypes['Waterfall']:\n            options = waterfallDefault;\n            break;\n        case ChartTypes['Histogram']:\n            options = histogramDefault;\n            break;\n        case ChartTypes['Stack Histogram']:\n            options = stackHistogramDefault;\n            break;\n        case ChartTypes['Basic Area']:\n            options = areaDefault;\n            break;\n        case ChartTypes['Multi Area']:\n            options = multiAreaDefault;\n            break;\n        case ChartTypes['Transpose Multi Area']:\n            options = transposeMultiAreaDefault;\n            break;\n        case ChartTypes['Stack Area']:\n            options = stackAreaDefault;\n            break;\n        case ChartTypes['Transpose Stack Area']:\n            options = transposeStackAreaDefault;\n            break;\n        case ChartTypes['Percentage Stack Area']:\n            options = percentageStackAreaDefault;\n            break;\n        case ChartTypes['Transpose Percentage Stack Area']:\n            options = transposePercentageStackAreaDefault;\n            break;\n        case ChartTypes['Basic Bar']:\n            options = barDefault;\n            break;\n        case ChartTypes['Multi Bar']:\n            options = multiBarDefault;\n            break;\n        case ChartTypes['Transpose Multi Bar']:\n            options = transposeMultiBarDefault;\n            break;\n        case ChartTypes['Percentage Stack Bar']:\n            options = percentageStackBarDefault;\n            break;\n        case ChartTypes['Transpose Percentage Stack Bar']:\n            options = transposePercentageStackBarDefault;\n            break;\n        case ChartTypes['Basic Scatter']:\n            options = scatterDefault;\n            break;\n        case ChartTypes['Multi Scatter']:\n            options = multiScatterDefault;\n            break;\n        case ChartTypes['Transpose Multi Scatter']:\n            options = transposeMultiScatterDefault;\n            break;\n        case ChartTypes['Basic Bubble']:\n            options = bubbleDefault;\n            break;\n        case ChartTypes['Basic Word Cloud']:\n            options = wordCloudDefault;\n            break;\n        case ChartTypes['Word Cloud']:\n            options = multiWordCloudDefault;\n            break;\n        case ChartTypes['Multi Bubble']:\n            options = multiBubbleDefault;\n            break;\n        case ChartTypes['Transpose Multi Bubble']:\n            options = transposeMultiBubbleDefault;\n            break;\n        case ChartTypes['Continuous Heatmap']:\n            options = continuousHeatmapDefault;\n            break;\n        case ChartTypes['Heatmap']:\n            options = heatmapDefault;\n            break;\n        case ChartTypes['Uneven Heatmap']:\n            options = unevenHeatmapDefault;\n            break;\n        case ChartTypes['Basic Radar']:\n            options = radarDefault;\n            break;\n        case ChartTypes['Multi Radar']:\n            options = multiRadarDefault;\n            break;\n        case ChartTypes['Transpose Multi Radar']:\n            options = transposeMultiRadarDefault;\n            break;\n        case ChartTypes['Basic Rose']:\n            options = roseDefault;\n            break;\n        case ChartTypes['Multi Rose']:\n            options = multiRoseDefault;\n            break;\n        case ChartTypes['Transpose Multi Rose']:\n            options = transposeMultiRoseDefault;\n            break;\n        case ChartTypes['Basic Pie']:\n            options = pieDefault;\n            break;\n        case ChartTypes['Liquid']:\n            options = liquidDefault;\n            break;\n        default:\n            options = chartOptionsDefault;\n            break;\n    }\n    if (!isTimelineType(type)) {\n        optionsByType[type] = _.assign(options, NoTimeLineAddOptions, AddOption);\n    } else {\n        optionsByType[type] = _.assign(options, AddOption);\n    }\n    return optionsByType[type];\n}","pinCode":false,"dname":"3b272399-e446-4777-bb4c-9dd6e5f96f7f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"Default_Display_Config = ({ type: ShowType.On });","pinCode":false,"dname":"b1521135-8919-42f5-930d-2b081a75e89a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"needSortByField = (data = [], chartType, options) => {\n    const { xField, yField } = options;\n    let field;\n    if (!xField || !yField) {\n        return;\n    }\n    if (~[\n        ChartTypes['Basic Line'], ChartTypes['Multi Line'], ChartTypes['Transpose Multi Line'],\n\n        ChartTypes['Waterfall'], ChartTypes['Histogram'], ChartTypes['Stack Histogram'],\n\n        ChartTypes['Basic Column'], ChartTypes['Multi Column'], ChartTypes['Transpose Multi Column'], ChartTypes['Percentage Stack Column'], ChartTypes['Transpose Percentage Stack Column'],\n\n        ChartTypes['Basic Scatter'], ChartTypes['Multi Scatter'], ChartTypes['Transpose Multi Scatter'], ChartTypes['Basic Bubble'], ChartTypes['Multi Bubble'], ChartTypes['Transpose Multi Bubble'],\n\n        ChartTypes['Basic Area'], ChartTypes['Multi Area'], ChartTypes['Transpose Multi Area'], ChartTypes['Stack Area'], ChartTypes['Transpose Stack Area'], ChartTypes['Percentage Stack Area'], ChartTypes['Transpose Percentage Stack Area'], ChartTypes['Transpose Multi Radar'], ChartTypes['Transpose Multi Rose']\n\n    ].indexOf(chartType)) {\n        field = xField;\n    } else if (~[\n        ChartTypes['Basic Bar'], ChartTypes['Multi Bar'], ChartTypes['Transpose Multi Bar'], ChartTypes['Percentage Stack Bar'], ChartTypes['Transpose Percentage Stack Bar'],\n\n    ].indexOf(chartType)) {\n        field = yField;\n    } else {\n        return;\n    }\n    let types = calcAutoType(data, true, false, [field])\n    if (types && types[field]?.type === 'date') {\n        data.sort((a, b) => { return new Date(a.date) < new Date(b.date) ? -1 : 1 })\n    }\n}","pinCode":false,"dname":"4bc827c2-4a61-4cf8-8d45-5ad3d41da35e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"extOps = function(options,params){\n  const extractOptions = function (options, params) {\n      if (typeof options !== 'object') {\n          return _.cloneDeep(options);\n      }\n      const extractOption = function (option, params) {\n        if (typeof option === 'object' && null !== option) {\n            let displayConfig = option.displayConfig || Default_Display_Config\n            if (displayConfig.type === ShowType.Off) {\n                if (_.has(displayConfig, \"offValue\")) {\n                    return extractOption(displayConfig.offValue, params);\n                } else {\n                    return;\n                }\n            }\n            if (displayConfig.type === ShowType.On) {\n                if (_.has(displayConfig, \"onValue\")) {\n                    return extractOption(displayConfig.onValue, params);\n                }\n            }\n            if (displayConfig.type === ShowType.JsText) {\n                let func;\n                try {\n                    let vv = extractOptions(option.value, params)\n                    params && _.each(_.keys(FIELDS), (FIELD) => {\n                        vv = vv.replaceAll(`{${FIELD}}`, params[FIELD])\n                    })\n                    func = eval(vv);\n                } catch (e) {\n                    console.error(e);\n                    func = null;\n                }\n                return func;\n            }\n            if (displayConfig.type === ShowType.Text) {\n                return extractOptions(option.value, params);\n            }\n            if (displayConfig.type === ShowType.Boolean) {\n                return extractOptions(option.value, params);\n            }\n            if (displayConfig.type === ShowType.Select) {\n                return extractOptions(option.value, params);\n            }\n            if (displayConfig.type === ShowType.Color) {\n                return extractOptions(option.value, params);\n            }\n            if (displayConfig.type === ShowType.Number) {\n                return extractOptions(option.value, params);\n            }\n            if (displayConfig.type === ShowType.Padding || displayConfig.type === ShowType.AppendPadding) {\n                return extractOptions(option.value, params);\n            }\n            if (displayConfig.type === ShowType.Remove) {\n                return;\n            }\n            option = extractOptions(option, params);\n            if (_.isEmpty(option) && !(option instanceof Array || window.opener && option instanceof window.opener.Array)) {\n                return;\n            }\n        }\n        return option;\n    }\n      let copyOptions = _.cloneDeep(options);\n      if (copyOptions instanceof Array || window.opener && copyOptions instanceof window.opener.Array) {\n          let ret = _.reduce(copyOptions, (prev, option, key) => {\n              option = extractOption(option, params);\n              if (undefined !== option) {\n                  prev.push(option);\n              }\n              return prev;\n          }, []);\n          return ret;\n      }\n      /** reduce BUG,need check object is contains property \"length\" */\n      if (_.has(options, 'length') && typeof options.length === 'number') {\n          delete copyOptions.length;\n      }\n      let ret = _.reduce(copyOptions, (prev, option, key) => {\n          if (key === \"displayConfig\" || key === \"LABEL\") {\n              return prev;\n          }\n          option = extractOption(option, params);\n          if (undefined !== option) {\n              prev[key] = option;\n          }\n          return prev;\n      }, {});\n      if (_.has(options, 'length') && typeof options.length === 'number') {///reduce bug,need check object is contains length\n          ret.length = options.length;\n      }\n      return ret;\n  }\n  return extractOptions(options,params)\n}","pinCode":false,"dname":"3f3b7d32-187b-45c9-bf73-1556951c5035","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"transposeData = function (chartType, exOptions) {\n    const { data, transposeFields } = exOptions;\n    switch (chartType) {\n        case ChartTypes['Transpose Multi Line']:\n        case ChartTypes['Transpose Multi Column']:\n        case ChartTypes['Transpose Percentage Stack Column']:\n        case ChartTypes['Transpose Multi Scatter']:\n        case ChartTypes['Transpose Multi Bubble']:\n        case ChartTypes['Transpose Multi Area']:\n        case ChartTypes['Transpose Stack Area']:\n        case ChartTypes['Transpose Percentage Stack Area']:\n        case ChartTypes['Transpose Multi Radar']:\n        case ChartTypes['Transpose Multi Rose']:\n            exOptions.yField = \"value\";\n            exOptions.seriesField = \"series\";\n            exOptions.data = _.reduce(data, (p, o) => {\n                _.each(transposeFields, (field) => {\n                    p.push({\n                        [exOptions.xField]: o[exOptions.xField],\n                        value: o[field],\n                        series: field\n                    })\n                })\n                return p;\n            }, [])\n            break;\n        case ChartTypes['Transpose Multi Bar']:\n        case ChartTypes['Transpose Percentage Stack Bar']:\n            exOptions.xField = \"value\";\n            exOptions.seriesField = \"series\";\n            exOptions.data = _.reduce(data, (p, o) => {\n                _.each(transposeFields, (field) => {\n                    p.push({\n                        [exOptions.yField]: o[exOptions.yField],\n                        value: o[field],\n                        series: field\n                    })\n                })\n                return p;\n            }, [])\n            break;\n    }\n}","pinCode":false,"dname":"f82d8cae-b657-4668-af8a-f23468e94104","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"getChartConstructor = function (type) {\n  \tconst { Area, Bar, Column, Histogram, Heatmap, Line, Pie, Radar, Rose, Scatter, WordCloud, Waterfall, Liquid } = g2plot;\n    let constructorFunc;\n    switch (type) {\n        case ChartTypes['Base Timeline']:\n        case ChartTypes['Base Range Timeline']:\n//             constructorFunc = TimelineConstruct;\n            break;\n        case ChartTypes['Groups Timeline']:\n        case ChartTypes['Groups Range Timeline']:\n//             constructorFunc = GroupsTimelineConstruct;\n            break;\n        case ChartTypes['SubGroups Timeline']:\n        case ChartTypes['SubGroups Range Timeline']:\n//             constructorFunc = SubGroupsTimelineConstruct;\n            break;\n        case ChartTypes['Basic Line']:\n        case ChartTypes['Multi Line']:\n        case ChartTypes['Transpose Multi Line']:\n            constructorFunc = Line;\n            break;\n        case ChartTypes['Basic Column']:\n        case ChartTypes['Multi Column']:\n        case ChartTypes['Transpose Multi Column']:\n        case ChartTypes['Percentage Stack Column']:\n        case ChartTypes['Transpose Percentage Stack Column']:\n            constructorFunc = Column;\n            break;\n        case ChartTypes['Waterfall']:\n            constructorFunc = Waterfall;\n            break;\n        case ChartTypes['Histogram']:\n        case ChartTypes['Stack Histogram']:\n            constructorFunc = Histogram;\n            break;\n        case ChartTypes['Basic Area']:\n        case ChartTypes['Multi Area']:\n        case ChartTypes['Transpose Multi Area']:\n        case ChartTypes['Stack Area']:\n        case ChartTypes['Transpose Stack Area']:\n        case ChartTypes['Percentage Stack Area']:\n        case ChartTypes['Transpose Percentage Stack Area']:\n            constructorFunc = Area;\n            break;\n        case ChartTypes['Basic Bar']:\n        case ChartTypes['Multi Bar']:\n        case ChartTypes['Transpose Multi Bar']:\n        case ChartTypes['Percentage Stack Bar']:\n        case ChartTypes['Transpose Percentage Stack Bar']:\n            constructorFunc = Bar;\n            break;\n        case ChartTypes['Basic Scatter']:\n        case ChartTypes['Multi Scatter']:\n        case ChartTypes['Transpose Multi Scatter']:\n        case ChartTypes['Basic Bubble']:\n        case ChartTypes['Multi Bubble']:\n        case ChartTypes['Transpose Multi Bubble']:\n            constructorFunc = Scatter;\n            break;\n        case ChartTypes['Heatmap']:\n        case ChartTypes['Continuous Heatmap']:\n        case ChartTypes['Uneven Heatmap']:\n            constructorFunc = Heatmap;\n            break;\n        case ChartTypes['Basic Word Cloud']:\n        case ChartTypes['Word Cloud']:\n            constructorFunc = WordCloud;\n            break;\n        case ChartTypes['Basic Radar']:\n        case ChartTypes['Multi Radar']:\n        case ChartTypes['Transpose Multi Radar']:\n            constructorFunc = Radar;\n            break;\n        case ChartTypes['Basic Rose']:\n        case ChartTypes['Multi Rose']:\n        case ChartTypes['Transpose Multi Rose']:\n            constructorFunc = Rose;\n            break;\n        case ChartTypes['Basic Pie']:\n            constructorFunc = Pie;\n            break;\n        case ChartTypes['Liquid']:\n            constructorFunc = Liquid;\n            break;\n        default:\n            constructorFunc = undefined;\n            break;\n    }\n    return constructorFunc;\n}","pinCode":true,"dname":"716d56bb-f821-4718-bfd8-c266337d2adc","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"getChartConfig = function (chartType) {\n    const { type, config } = chartType;\n    /**@type {chartOptionsDefault} */\n    let options;\n    let constructorFunc = getChartConstructor(type);\n    switch (type) {\n        case ChartTypes['Basic Line']:\n        case ChartTypes['Multi Line']:\n        case ChartTypes['Basic Column']:\n        case ChartTypes['Multi Column']:\n        case ChartTypes['Percentage Stack Column']:\n        case ChartTypes['Waterfall']:\n        case ChartTypes['Basic Area']:\n        case ChartTypes['Multi Area']:\n        case ChartTypes['Stack Area']:\n        case ChartTypes['Percentage Stack Area']:\n        case ChartTypes['Basic Bar']:\n        case ChartTypes['Multi Bar']:\n        case ChartTypes['Percentage Stack Bar']:\n        case ChartTypes['Basic Scatter']:\n        case ChartTypes['Multi Scatter']:\n        case ChartTypes['Basic Bubble']:\n        case ChartTypes['Multi Bubble']:\n        case ChartTypes['Continuous Heatmap']:\n        case ChartTypes['Heatmap']:\n        case ChartTypes['Uneven Heatmap']:\n            let otherOptions = {\n                xAxis: {\n                    title: {\n                        text: config.xField\n                    }\n                },\n                yAxis: {\n                    title: {\n                        text: config.yField\n                    }\n                }\n            };\n            options = _.merge(_.cloneDeep(getDefaultOptionsByType(type)), config, otherOptions);\n            break;\n        case ChartTypes['Basic Radar']:\n        case ChartTypes['Multi Radar']:\n        case ChartTypes['Basic Rose']:\n        case ChartTypes['Multi Rose']:\n        case ChartTypes['Basic Word Cloud']:\n        case ChartTypes['Word Cloud']:\n        case ChartTypes['Basic Pie']:\n        case ChartTypes['Histogram']:\n        case ChartTypes['Stack Histogram']:\n        case ChartTypes['Liquid']:\n            options = _.merge(_.cloneDeep(getDefaultOptionsByType(type)), config);\n            break;\n        case ChartTypes['Base Timeline']:\n        case ChartTypes['Groups Timeline']:\n        case ChartTypes['Base Range Timeline']:\n        case ChartTypes['Groups Range Timeline']:\n        case ChartTypes['SubGroups Timeline']:\n        case ChartTypes['SubGroups Range Timeline']:\n            options = _.merge(_.cloneDeep(getDefaultOptionsByType(type)), config);\n            break;\n        default:\n            options = _.merge(_.cloneDeep(getDefaultOptionsByType(type)), config);\n            break;\n    }\n    return {\n        options,\n        constructorFunc,\n        type,\n    }\n}","pinCode":true,"dname":"de601127-7b33-4cca-9b1f-15db80d42fe2","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"## descriptions","pinCode":false,"dname":"512a4f9c-86b9-43e5-8db1-6d647a101f87","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"ChartTypesDesc = ({\n    [ChartTypes['Base Timeline']]: {\n        Alias: \"Timeline\",\n        Definition: \"A base timeline chart\",\n        Family: \"Statistic - TimelineCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison, Distribution, Rank\",\n        DataPrepare: `1「Nominal」 Field\n            \n            1 ~ 2「Date」 Field`,\n    },\n    [ChartTypes['Groups Timeline']]: {\n        Alias: \"Groups Timeline\",\n        Definition: \"A groups timeline chart\",\n        Family: \"Statistic - TimelineCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison, Distribution, Rank\",\n        DataPrepare: `2「Nominal」 Field\n            \n            1 ~ 2「Date」 Field`,\n    },\n    [ChartTypes['SubGroups Timeline']]: {\n        Alias: \"SubGroups Timeline\",\n        Definition: \"A subgroups timeline chart\",\n        Family: \"Statistic - TimelineCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison, Distribution, Rank\",\n        DataPrepare: `2「Nominal」 Field\n            \n            1 ~ 2「Date」 Field`,\n    },\n\n    [ChartTypes[\"Basic Line\"]]: {\n        Alias: \"Lines\",\n        Definition: \"A line chart uses lines with segments to show changes in data in a ordinal dimension.\",\n        Family: \"Statistic - LineCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison, Distribution, Rank\",\n        DataPrepare: `1「Time」or「Ordinal」 Field\n    \n            0 ~ 1「Nominal」 Field\n            \n            1「Interval」 Field`,\n    },\n    [ChartTypes[\"Multi Line\"]]: {\n        Alias: \"Lines\",\n        Definition: \"A line chart uses lines with segments to show changes in data in a ordinal dimension.\",\n        Family: \"Statistic - LineCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison, Distribution, Rank\",\n        DataPrepare: `1「Time」or「Ordinal」 Field\n    \n            0 ~ 1「Nominal」 Field\n            \n            1「Interval」 Field`,\n    },\n\n    [ChartTypes[\"Basic Column\"]]: {\n        Alias: \"Columns\",\n        Definition: \"A column chart uses series of columns to display the value of the dimension. The horizontal axis shows the classification dimension and the vertical axis shows the corresponding value.\",\n        Family: \"Statistic - ColumnCharts\",\n        Channel: \"Position, Color\",\n        Purposes: \"Comparison, Distribution, Rank\",\n        DataPrepare: `1 ~ 2「Nominal」 Fields\n    \n            1「Interval」 Field`,\n    },\n    [ChartTypes[\"Multi Column\"]]: {\n        Alias: \"Grouped Column\",\n        Definition: \"A grouped column chart uses columns of different colors to form a group to display the values ​​of dimensions. The horizontal axis indicates the grouping of categories, the color indicates the categories, and the vertical axis shows the corresponding value.\",\n        Family: \"Statistic - ColumnCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison, Distribution, Rank\",\n        DataPrepare: `1 ~ 2「Nominal」 Fields\n    \n            1「Interval」 Field`,\n    },\n    [ChartTypes[\"Percentage Stack Column\"]]: {\n        Alias: \"Percent Stacked Column, % Stacked Column, 100% Stacked Column\",\n        Definition: \"A percent stacked column chart uses stacked bars of different colors to display the values ​​for each dimension. The horizontal axis indicates the first classification dimension, the color indicates the second classification dimension, and the vertical axis shows the percentage of the corresponding classification.\",\n        Family: \"Statistic - ColumnCharts\",\n        Channel: \"Color, Length\",\n        Purposes: \"Comparison, Composition, Distribution, Proportion\",\n        DataPrepare: `2「Nominal」 Fields\n\n1「Interval」 Field`,\n    },\n\n    [ChartTypes[\"Waterfall\"]]: {\n        Alias: \"Flying Bricks Chart, Mario Chart, Bridge Chart, Cascade Chart\",\n        Definition: \"A waterfall chart is used to portray how an initial value is affected by a series of intermediate positive or negative values\",\n        Family: \"Statistic - ColumnCharts\",\n        Channel: \"Color, Length, Position\",\n        Purposes: \"Comparison, Trend\",\n        DataPrepare: `1「Ordinal」or「Time」or「Nominal」 Field\n    \n            1「Interval」 Field`,\n    },\n    [ChartTypes[\"Histogram\"]]: {\n        Alias: \"Frequency Distribution Chart\",\n        Definition: \"A histogram is an accurate representation of the distribution of numerical data.\",\n        Family: \"Statistic - ColumnCharts\",\n        Channel: \"Position\",\n        Purposes: \"Distribution\",\n        DataPrepare: `1「Interval」 Field`,\n    },\n    [ChartTypes[\"Stack Histogram\"]]: {\n        Alias: \"Stacked Histogram\",\n        Definition: \"A stacked histogram is a histogram with multiple layers of data.\",\n        Family: \"Statistic - ColumnCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison, Composition, Distribution\",\n        DataPrepare: `1「Interval」 Field\n\n1「Nominal」 Field`,\n    },\n\n    [ChartTypes[\"Basic Area\"]]: {\n        Alias: \"Area Chart\",\n        Definition: \"An area chart uses series of line segments with overlapped areas to show the change in data in a ordinal dimension.\",\n        Family: \"Statistic - AreaCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison, Trend\",\n        DataPrepare: `1「Time」or「Ordinal」 Field\n    \n            1「Interval」 Field\n            \n            0 ~ 1「Nominal」 Field`,\n    },\n    [ChartTypes[\"Multi Area\"]]: {\n        Alias: \"Area Chart\",\n        Definition: \"An area chart uses series of line segments with overlapped areas to show the change in data in a ordinal dimension.\",\n        Family: \"Statistic - AreaCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison, Trend\",\n        DataPrepare: `1「Time」or「Ordinal」 Field\n    \n            1「Interval」 Field\n            \n            0 ~ 1「Nominal」 Field`,\n    },\n    [ChartTypes[\"Stack Area\"]]: {\n        Alias: \"Stacked Area Chart\",\n        Definition: \"A stacked area chart uses layered line segments with different styles of padding regions to display how multiple sets of data change in the same ordinal dimension, and the endpoint heights of the segments on the same dimension tick are accumulated by value.\",\n        Family: \"Statistic - AreaCharts\",\n        Channel: \"Color, Length\",\n        Purposes: \"Comparison, Composition, Trend\",\n        DataPrepare: `1「Time」or「Ordinal」 Field\n    \n            1「Interval」 Field\n            \n            1「Nominal」 Field`,\n    },\n    [ChartTypes[\"Percentage Stack Area\"]]: {\n        Alias: \"Percent Stacked Area, % Stacked Area, 100% Stacked Area\",\n        Definition: \"A percent stacked area chart is an extented stacked area chart in which the height of the endpoints of the line segment on the same dimension tick is the accumulated proportion of the ratio, which is 100% of the total.\",\n        Family: \"Statistic - AreaCharts\",\n        Channel: \"Color, Length\",\n        Purposes: \"Comparison, Composition, Proportion, Trend\",\n        DataPrepare: `1「Time」or「Ordinal」 Field\n\n1「Interval」 Field\n\n1「Nominal」 Field`,\n    },\n\n    [ChartTypes[\"Basic Bar\"]]: {\n        Alias: \"Bars\",\n        Definition: \"A bar chart uses series of bars to display the value of the dimension. The vertical axis shows the classification dimension and the horizontal axis shows the corresponding value.\",\n        Family: \"Statistic - BarCharts\",\n        Channel: \"Position, Color\",\n        Purposes: \"Comparison, Distribution, Rank\",\n        DataPrepare: `1 ~ 2「Nominal」 Fields\n    \n            1「Interval」 Field`,\n    },\n    [ChartTypes[\"Multi Bar\"]]: {\n        Alias: \"Grouped Bar\",\n        Definition: \"A grouped bar chart uses bars of different colors to form a group to display the values of the dimensions. The vertical axis indicates the grouping of categories, the color indicates the categories, and the horizontal axis shows the corresponding value.\",\n        Family: \"Statistic - BarCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison, Distribution, Rank\",\n        DataPrepare: `2「Nominal」 Fields\n    \n            1「Interval」 Field`,\n    },\n    [ChartTypes[\"Percentage Stack Bar\"]]: {\n        Alias: \"Percent Stacked Bar, % Stacked Bar, 100% Stacked Bar\",\n        Definition: \"A percent stacked column chart uses stacked bars of different colors to display the values ​​for each dimension. The vertical axis indicates the first classification dimension, the color indicates the second classification dimension, and the horizontal axis shows the percentage of the corresponding classification.\",\n        Family: \"Statistic - BarCharts\",\n        Channel: \"Color, Length\",\n        Purposes: \"Comparison, Composition, Distribution, Proportion\",\n        DataPrepare: `2「Nominal」 Fields\n\n1「Interval」 Field`,\n    },\n\n    [ChartTypes[\"Basic Pie\"]]: {\n        Alias: \"Circle Chart, Pie\",\n        Definition: \"A pie chart is a chart that the classification and proportion of data are represented by the color and arc length (angle, area) of the sector.\",\n        Family: \"Statistic - PieCharts\",\n        Channel: \"Angle, Area, Color\",\n        Purposes: \"Comparison, Composition, Proportion\",\n        DataPrepare: `1「Nominal」 Field\n    \n            1「Interval」 Field`,\n    },\n\n    [ChartTypes[\"Basic Scatter\"]]: {\n        Alias: \"Scatter Chart, Scatterplot\",\n        Definition: \"A scatter plot is a type of plot or mathematical diagram using Cartesian coordinates to display values for typically two variables for series of data.\",\n        Family: \"Statistic - ScatterCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison, Distribution\",\n        DataPrepare: `2「Interval」 Fields\n    \n            0 ~ 1「Nominal」 Field`,\n    },\n    [ChartTypes[\"Multi Scatter\"]]: {\n        Alias: \"Scatter Chart, Scatterplot\",\n        Definition: \"A scatter plot is a type of plot or mathematical diagram using Cartesian coordinates to display values for typically two variables for series of data.\",\n        Family: \"Statistic - ScatterCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison, Distribution\",\n        DataPrepare: `2「Interval」 Fields\n    \n            0 ~ 1「Nominal」 Field`,\n    },\n\n    [ChartTypes[\"Basic Bubble\"]]: {\n        Alias: \"Bubble Chart\",\n        Definition: \"A bubble chart is a type of chart that displays four dimensions of data with x, y positions, circle size and circle color.\",\n        Family: \"Statistic - ScatterCharts\",\n        Channel: \"Color, Position, Size\",\n        Purposes: \"Comparison, Distribution\",\n        DataPrepare: `3「Interval」 Fields\n    \n            0 ~ 1「Nominal」 Field`,\n    },\n    [ChartTypes[\"Multi Bubble\"]]: {\n        Alias: \"Bubble Chart\",\n        Definition: \"A bubble chart is a type of chart that displays four dimensions of data with x, y positions, circle size and circle color.\",\n        Family: \"Statistic - ScatterCharts\",\n        Channel: \"Color, Position, Size\",\n        Purposes: \"Comparison, Distribution\",\n        DataPrepare: `3「Interval」 Fields\n    \n            0 ~ 1「Nominal」 Field`,\n    },\n\n    [ChartTypes[\"Basic Radar\"]]: {\n        Alias: \"Web Chart, Spider Chart, Star Chart, Cobweb Chart, Irregular Polygon, Kiviat diagram\",\n        Definition: \"A radar chart maps series of data volume of multiple dimensions onto the axes. Starting at the same center point, usually ending at the edge of the circle, connecting the same set of points using lines.\",\n        Family: \"Statistic - RadarCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison\",\n        DataPrepare: `1 ~ 2「Nominal」 Fields\n    \n            1「Interval」 Field`,\n    },\n    [ChartTypes[\"Multi Radar\"]]: {\n        Alias: \"Web Chart, Spider Chart, Star Chart, Cobweb Chart, Irregular Polygon, Kiviat diagram\",\n        Definition: \"A radar chart maps series of data volume of multiple dimensions onto the axes. Starting at the same center point, usually ending at the edge of the circle, connecting the same set of points using lines.\",\n        Family: \"Statistic - RadarCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison\",\n        DataPrepare: `1 ~ 2「Nominal」 Fields\n    \n            1「Interval」 Field`,\n    },\n\n    [ChartTypes[\"Basic Rose\"]]: {\n        Alias: \"Rose Chart, Polar Area Chart\",\n        Definition: \"A rose chart is a type of chart that displays data in a polar coordinate system.\",\n        Family: \"Statistic - RadarCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison\",\n        DataPrepare: `1「Nominal」 Field\n\n1「Interval」 Field`,\n    },\n    [ChartTypes[\"Multi Rose\"]]: {\n        Alias: \"Rose Chart, Polar Area Chart\",\n        Definition: \"A rose chart is a type of chart that displays data in a polar coordinate system.\",\n        Family: \"Statistic - RadarCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Comparison\",\n        DataPrepare: `1「Nominal」 Field\n        \n1「Interval」 Field`,\n    },\n\n    [ChartTypes[\"Continuous Heatmap\"]]: {\n        Alias: \"Heatmap, Heat map\",\n        Definition: \"A continuous heatmap is a type of heatmap that based on a map.\",\n        Family: \"Statistic - HeatmapCharts\",\n        Channel: \"Position, Color\",\n        Purposes: \"Distribution\",\n        DataPrepare: `3「Interval」 Fields`,\n    },\n    [ChartTypes[\"Heatmap\"]]: {\n        Definition: \"A heatmap is a graphical representation of data where the individual values contained in a matrix are represented as colors.\",\n        Family: \"Statistic - HeatmapCharts\",\n        Channel: \"Color, Position\",\n        Purposes: \"Distribution\",\n        DataPrepare: `2「Nominal」or「Ordinal」 Fields\n    \n            1「Interval」 Field`,\n    },\n    [ChartTypes[\"Uneven Heatmap\"]]: {\n        Definition: \"An uneven heatmap is a heatmap with size channel.\",\n        Family: \"Statistic - HeatmapCharts\",\n        Channel: \"Position, Color, Size\",\n        Purposes: \"Distribution\",\n        DataPrepare: `2「Nominal」or「Ordinal」 Fields\n    \n            2「Interval」 Fields`,\n    },\n\n    [ChartTypes[\"Basic Word Cloud\"]]: {\n        Definition: \"A Word cloud chart lets you visualize text data. Text values are displayed with their size based on a measure value. The measure can be anything you want to measure against, for example: times used, alphabetically, by importance, or by context. You can customize your chart with different shapes, fonts, layouts, and color schemes. It is included in the Visualization bundle.\",\n        Family: \"Statistic - WordCharts\",\n        Channel: \"Size\",\n        Purposes: \"Comparison, Trend\",\n        DataPrepare: `1「Nominal」 Field\n    \n            1「Interval」 Field`,\n    },\n    [ChartTypes[\"Word Cloud\"]]: {\n        Definition: \"A Word cloud chart lets you visualize text data. Text values are displayed with their size based on a measure value. The measure can be anything you want to measure against, for example: times used, alphabetically, by importance, or by context. You can customize your chart with different shapes, fonts, layouts, and color schemes. It is included in the Visualization bundle.\",\n        Family: \"Statistic - WordCharts\",\n        Channel: \"Color, Size\",\n        Purposes: \"Comparison, Trend\",\n        DataPrepare: `1 ~ 2「Nominal」 Field\n    \n            1「Interval」 Field`,\n    },\n\n    [ChartTypes[\"Liquid\"]]: {\n        Alias: \"Liquid Chart\",\n        Definition: \"A liquid diagram is a infographic for presenting progress.\",\n        Family: \"Diagram - Others\",\n        Channel: \"Position\",\n        Purposes: \"Comparison\",\n        DataPrepare: `1「Interval」 Field`,\n    },\n})","pinCode":false,"dname":"91efa14b-c08a-49d0-ad48-b2394b09d71f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"## Dependencies","pinCode":false,"dname":"32ca62cc-a023-4301-96f8-998543af603a","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"import { ChartTypes, isTimelineType, groupSeparators, ShowType } from './chartUtil'","pinCode":false,"dname":"5b3fe16f-9c0b-403b-b90e-eb70d6c48ee5","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import { calcAutoType } from './helper'","pinCode":false,"dname":"4fbcd7f9-ff13-4737-a7c0-4fbeeadf6680","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"g2plot = require('@antv/g2plot@2.4.32/dist/g2plot.min.js')","pinCode":false,"dname":"ac108876-415d-446c-ad81-0770c2fd5166","codeMode":"javascript2"}}}],"version":"2.19.1"}