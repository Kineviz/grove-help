{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"import {Pack} from \"charts/pack/pack\"","pinCode":true,"dname":"fac8b8d1-71f8-485b-add2-dd2e0ab2cef0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"render_4 = render(({ useSetter }) => {\n  const [a,setA] = useState(123)\n    const { Space } = Antd;\n    return <Space key='a89e7e64-5079-47a4-92a3-cae800c9d535' direction=\"vertical\">\n      text <Space>wwewew</Space>\n      <Antd.Button>dsdsdsd</Antd.Button>\n      <Space>323232</Space>\n    </Space>;\n})","pinCode":true,"dname":"4408507f-ef02-4d82-b16d-469d5238a7de","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"tqq = {\n  let transform = babel.transform;\n  let value = qq;\n  let rArr = value.match(/\\s*viewof\\s+/gm);\n  return (rArr\n    ? rArr[0] +\n        transform(value.substring(rArr[0].length), { presets: [\"react\"] }).code\n    : transform(value, { presets: [\"react\"] }).code).replaceAll(\"/*#__PURE__*/\", \"\");\n}","pinCode":false,"dname":"a431267b-b2c3-4e2c-9a90-57e165bd5e1c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"mutable qq =\"123\"","pinCode":false,"dname":"9aec0684-0181-419a-83f0-f1cbf9087144","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button = render(({ useSetter }) => {\n    const { Button } = Antd;\n    return jsx`<${Button} key='d9442ee0-488c-451d-bde4-b2327d475d8e' onClick=${(d) => {\n    \tcopyContent(qq);\n    }}  >Copy qq</${Button}>\n    <${Button} key='d9442ee0-488c-451d-bde4-b2327d475d8e' onClick=${(d) => {\n    \tcopyContent(tqq);\n    }}  >Copy tqq</${Button}>`;\n})","pinCode":false,"dname":"4d608fcc-341d-4059-bbf1-219bfb9c21b2","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof select_1 = render(({\n  useSetter\n}) => {\n  const {\n    Select\n  } = Antd;\n  const handleChange = value => {\n    console.log(`selected ${value}`);\n  };\n  useSetter({});\n  return <Select key='7c5ad036-df85-437c-932d-f1b75ba9c0fb'\n        defaultValue=\"lucy\"\n        style={{\n    width: 120\n  }}\n        onChange={handleChange}\n        options={[{\n    value: \"jack\",\n    label: \"Jack\"\n  }, {\n    value: \"lucy\",\n    label: \"Lucy\"\n  }, {\n    value: \"disabled\",\n    disabled: true,\n    label: \"Disabled\"\n  }, {\n    value: \"Yiminghe\",\n    label: \"yiminghe\"\n  }]}\n    />;\n})","pinCode":false,"dname":"3b307881-19e4-4f91-8b43-c71ff79f82df","codeMode":"jsx","pos":184,"loc":{"line":11,"column":9},"raisedAt":185}}},{"type":"codeTool","data":{"codeData":{"value":"Pack(flare, {\n    path: (d) => d.name.replaceAll(\".\", \"/\"), // e.g. flare/animate/Easing\n    label: (d) => d.name.split(\".\").pop(), // display text\n    value: (d) => d?.size, // area of each circle\n    title: (d, n) => [n.id, n.value.toLocaleString()].join(\"\\n\"), // hover text\n    width,\n    height: 720\n})","pinCode":true,"dname":"8f5fd0d0-5cce-4aea-becb-a5d74a4bf08e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_1 = render(({ useSetter }) => {\n    const { Space, Button, Switch, Affix } = Antd;\n    const [step_number, setStep_number] = useState(1);\n    const update_step_number = (d) => setStep_number(step_number+1);\n    useSetter({ step_number });\n  \t \n    return <Sp className <Button key='056fec1b-a286-41dc-93db-e7798ff59ee2' onClick={update_step_number}  >Click Me</Button> ;\n})","pinCode":true,"dname":"4c0c120e-a789-43cb-ad58-1ef84c236930","codeMode":"jsx"}}},{"type":"header","data":{"text":"Target","level":2}},{"type":"codeTool","data":{"codeData":{"value":"displaySite = function (text, url) {\n  let key = uuidv4();\n  let Comp = component(({}) => {\n    const {\n      Space,\n      Button,\n      message\n    } = Antd;\n    const {\n      CloseOutlined,\n      MinusOutlined,\n      ExpandOutlined\n    } = AntdIcons;\n    const [narrow, setNarrow] = useState(false);\n    return jsx`<${Space} direction=\"vertical\" size=\"small\">\n <div className=\"d-flex justify-content-end\">\n   <${Button} type=\"primary\" shape=\"circle\" icon=${narrow ? jsx`<${ExpandOutlined}>\n</${ExpandOutlined}>` : jsx`<${MinusOutlined}>\n</${MinusOutlined}>`} onClick=${() => {\n        setNarrow(!narrow);\n      }}>\n  </${Button}>\n   <${Button} type=\"primary\" shape=\"circle\" icon=${jsx`<${CloseOutlined}>\n</${CloseOutlined}>`} onClick=${() => message.destroy(key)}>\n  </${Button}>\n </div>\n <div>\n  open it in a single window: \n   <a href=${url} target=\"_blank\">  ${text}\n  </a>\n </div>\n${!url || !(url.startsWith(\"http://\") || url.startsWith(\"https://\")) ? jsx`<p style=${{\n        margin: \"15px\"\n      }}>\nInvalid iFrame URL. Make sure your url starts with \n <code> http://\n </code>\n or \n <code> https://\n </code>\n.\n</p>` : jsx`<iframe className=${`iframe-{narrow ? \"narrow\" : \"normal\"}`} src=${url}>\n</iframe>`}\n</${Space}>`;\n  });\n  showToast( React.createElement(Comp, null), \"success\", 0, {\n    key\n  });\n}","pinCode":true,"dname":"f1a0b5bf-0849-4c5b-a77b-235af745cdd1","codeMode":"javascript2","pos":169,"loc":{"line":11,"column":20},"raisedAt":170}}},{"type":"codeTool","data":{"codeData":{"value":"aaa","pinCode":false,"dname":"7b200626-60ce-45f2-b05b-3487ef3a8b4d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":" viewof aaa = render(({ useSetter }) => {\n  const { Button } = Antd;\n  const [step_number, setStep_number] = useState(1);\n  const update_step_number = (d) => {\n    let ele = document\n      .querySelector(\"#code-f1a0b5bf-0849-4c5b-a77b-235af745cdd1\")\n      .closest(\".code-edit\");\n    let v = ele.state.value;\n    let mode = ele.state.codeMode;\n    if(mode === \"javascript2\"){\n      setStep_number(parseCell(v));\n    }else{\n      let transform = babel.transform;\n      let value = v;\n      let rArr = value.match(/\\s*viewof\\s+/gm);\n      let code =  (rArr\n        ? rArr[0] +\n            transform(value.substring(rArr[0].length), { presets: [\"react\"] }).code\n        : transform(value, { presets: [\"react\"] }).code).replaceAll(\"/*#__PURE__*/\", \"\");\n      setStep_number(parseCell(code));\n    }\n  };\n  useSetter(step_number);\n  return jsx`<${Button} key='63b43848-a6aa-4a3a-ac2e-648f8a29a2a6' onClick=${update_step_number}  >Get</${Button}> `;\n})","pinCode":false,"dname":"6213fe95-91fe-4ba2-aba2-8b020e7bc8b6","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":" function transformJsxToReact(v, c, reactToJsx) {\n  const CallFunc = function (v, c, wrapper) {\n    if (reactToJsx && c.callee.type === \"MemberExpression\" && c.callee.object.name === \"React\" && c.callee.property.name === \"createElement\") {\n      let tag = c.arguments[0].name || c.arguments[0].value || v.substring(c.arguments[0].start, c.arguments[0].end);\n      tag = isHtmlTag(tag) ? tag : `\\${${tag}}`\n      return `${wrapper ? \"\" : `jsx\\``}<${tag} ${_.reduce(c.arguments[1].properties, (p, c, i) => {\n        switch (c.value.type) {\n          case \"CallExpression\":\n            p += ` ${c.key.name}=\\${${CallFunc(v, c.value)}}`;\n            break;\n          case \"Literal\":\n            p += ` ${c.key.name}=${c.value.raw}`;\n            break;\n          default:\n            p += ` ${c.key.name}=\\${${v.substring(c.value.start, c.value.end)}} `;\n            break;\n        }\n        return p;\n      }, \"\")}>\n        ${_.reduce(c.arguments.slice(2), (p, c, i) => {\n        switch (c.type) {\n          case \"CallExpression\":\n            p += \" \" + CallFunc(v, c, true) + \"\\n\";\n            break;\n          case \"Literal\":\n            p += \" \" + c.value + \"\\n\";\n            break;\n          default:\n            p += \" \" + `\\${${c.value.name}}` + \"\\n\";\n            break;\n        }\n        return p;\n      }, \"\")} </${tag}>${wrapper ? \"\" : `\\``}`\n    }\n    let ret = v.substring(c.start, c.callee.start);\n    ret = _.reduce(\n      [c.callee],\n      (p, q, i) => {\n        switch (q.type) {\n          case \"ArrowFunctionExpression\":\n            p += ArrowFunc(v, q);\n            break;\n          default:\n            p += v.substring(q.start, q.end);\n            break;\n        }\n        return p;\n      },\n      ret\n    )\n    return (reactToJsx ? `\\${` : \"\") + _.reduce(\n      c.arguments,\n      (p, q, i) => {\n        if (i != 0) {\n          p += v.substring(c.arguments[i - 1].end, c.arguments[i].start)\n        }\n        switch (q.type) {\n          case \"TaggedTemplateExpression\":\n            p += TagFunc(v, q);\n            break;\n          case \"CallExpression\":\n            p += CallFunc(v, q);\n            break;\n          case \"ArrowFunctionExpression\":\n            p += ArrowFunc(v, q);\n            break;\n          case \"VariableDeclaration\":\n            p += VariFunc(v, q);\n            break;\n          default:\n            p += v.substring(q.start, q.end);\n            break;\n        }\n        return p;\n      },\n      ret + \"(\"\n    ) + \")\" + (reactToJsx ? `}` : \"\")\n  }\n  const ArrFunc = function (v, arr) {\n    let elements = arr.elements;\n    let ret = v.substring(arr.start, elements[0].start);\n    return _.reduce(\n      elements,\n      (p, q, i) => {\n        if (i != 0) {\n          p += v.substring(elements[i - 1].end, elements[i].start)\n        }\n        switch (q.type) {\n          case \"TaggedTemplateExpression\":\n            p += TagFunc(v, q);\n            break;\n          case \"CallExpression\":\n            p += CallFunc(v, q);\n            break;\n          case \"ArrowFunctionExpression\":\n            p += ArrowFunc(v, q);\n            break;\n          case \"ArrayExpression\":\n            p += ArrFunc(v, q);\n            break;\n          case \"ObjectExpression\":\n            p += ObjFunc(v, q);\n            break;\n          default:\n            p += v.substring(q.start, q.end);\n            break;\n        }\n        return p;\n      }, ret) + v.substring(elements[elements.length - 1].end, arr.end);\n  }\n  const ObjFunc = function (v, obj) {\n    let properties = obj.properties;\n    let ret = v.substring(obj.start, properties[0].start);\n    return _.reduce(\n      properties,\n      (p, q, i) => {\n        if (i != 0) {\n          p += v.substring(properties[i - 1].end, properties[i].start)\n        }\n        if (q.value) {\n          switch (q.value.type) {\n            case \"TaggedTemplateExpression\":\n              p += v.substring(q.start, q.value.start) + TagFunc(v, q.value) + v.substring(q.value.end, q.end);\n              break;\n            case \"CallExpression\":\n              p += v.substring(q.start, q.value.start) + CallFunc(v, q.value) + v.substring(q.value.end, q.end);\n              break;\n            case \"ArrowFunctionExpression\":\n              p += v.substring(q.start, q.value.start) + ArrowFunc(v, q.value) + v.substring(q.value.end, q.end);\n              break;\n            case \"ArrayExpression\":\n              p += v.substring(q.start, q.value.start) + ArrFunc(v, q.value) + v.substring(q.value.end, q.end);\n              break;\n            case \"ObjectExpression\":\n              p += v.substring(q.start, q.value.start) + ObjFunc(v, q.value) + v.substring(q.value.end, q.end);\n              break;\n            default:\n              p += v.substring(q.start, q.end);\n              break;\n          }\n        } else {\n          p += v.substring(q.start, q.end);\n        }\n        return p;\n      }, ret) + v.substring(properties[properties.length - 1].end, obj.end);\n  }\n  const VariFunc = function (v, va) {\n    let declarations = va.declarations;\n    let ret = v.substring(va.start, declarations[0].start);\n    return _.reduce(\n      declarations,\n      (p, q, i) => {\n        if (i != 0) {\n          p += v.substring(declarations[i - 1].end, declarations[i].start)\n        }\n        if (q.init) {\n          switch (q.init.type) {\n            case \"TaggedTemplateExpression\":\n              p += v.substring(q.start, q.init.start) + TagFunc(v, q.init) + v.substring(q.init.end, q.end);\n              break;\n            case \"CallExpression\":\n              p += v.substring(q.start, q.init.start) + CallFunc(v, q.init) + v.substring(q.init.end, q.end);\n              break;\n            case \"ArrowFunctionExpression\":\n              p += v.substring(q.start, q.init.start) + ArrowFunc(v, q.init) + v.substring(q.init.end, q.end);\n              break;\n            case \"ArrayExpression\":\n              p += v.substring(q.start, q.init.start) + ArrFunc(v, q.init) + v.substring(q.init.end, q.end);\n              break;\n            case \"ObjectExpression\":\n              p += v.substring(q.start, q.init.start) + ObjFunc(v, q.init) + v.substring(q.init.end, q.end);\n              break;\n            default:\n              p += v.substring(q.start, q.end);\n              break;\n          }\n        } else {\n          p += v.substring(q.start, q.end);\n        }\n        return p;\n      }, ret) + v.substring(declarations[declarations.length - 1].end, va.end);\n  }\n  const RetFunc = function (v, r) {\n    let q = r.argument;\n    let p = v.substring(r.start, q.start);\n    switch (q.type) {\n      case \"TaggedTemplateExpression\":\n        p += TagFunc(v, q);\n        break;\n      case \"CallExpression\":\n        p += CallFunc(v, q);\n        break;\n      case \"ArrowFunctionExpression\":\n        p += ArrowFunc(v, q);\n        break;\n      default:\n        p += v.substring(q.start, q.end);\n        break;\n    }\n    return p += v.substring(q.end, r.end);\n  }\n  const ArrowFunc = function (v, c) {\n    let ret = v.substring(c.start, c.body.start);\n    if (c.body.type === \"BlockStatement\" || c.body.type === \"TaggedTemplateExpression\" || c.body.type === \"CallExpression\" || c.body.type === \"ArrowFunctionExpression\") {\n      let body = c.body.type === \"BlockStatement\" ? c.body.body : [c.body];\n      return _.reduce(\n        body,\n        (p, q, i) => {\n          if (i != 0) {\n            p += v.substring(body[i - 1].end, body[i].start)\n          }\n          switch (q.type) {\n            case \"TaggedTemplateExpression\":\n              p += TagFunc(v, q);\n              break;\n            case \"CallExpression\":\n              p += CallFunc(v, q);\n              break;\n            case \"ArrowFunctionExpression\":\n              p += ArrowFunc(v, q);\n              break;\n            case \"VariableDeclaration\":\n              p += VariFunc(v, q);\n              break;\n            case \"ReturnStatement\":\n              p += RetFunc(v, q);\n              break;\n            default:\n              p += v.substring(q.start, q.end);\n              break;\n          }\n          return p;\n        },\n        ret += v.substring(c.body.start, body[0].start)\n      ) + v.substring(body[body.length - 1].end, c.end)\n    } else {\n      ret += v.substring(c.body.start, c.end);\n      return ret;\n    }\n  }\n  const TagFunc = function (v, tag) {\n    let jsx = tag.tag.name === \"jsx\";\n    let quasi = tag && tag.quasi;\n    if (!quasi) {\n      return \"\"\n    }\n    let ret = jsx ? \"\" : v.substring(tag.start, quasi.quasis[0].start);\n    ret = _.reduce(\n      quasi.expressions,\n      (p, q, i) => {\n        switch (q.type) {\n          case \"Identifier\":\n          case \"MemberExpression\":\n            if (quasi.quasis[i].value.raw.match(/<|<\\/$/)) {\n              p += quasi.quasis[i].value.raw + v.substring(q.start, q.end);\n            } else {\n              p += `${quasi.quasis[i].value.raw}{${v.substring(q.start, q.end)}}`;\n            }\n            break;\n          case \"TaggedTemplateExpression\":\n            p += `${quasi.quasis[i].value.raw}{${TagFunc(v, q)}}`;\n            break;\n          case \"CallExpression\":\n            p += `${quasi.quasis[i].value.raw}{${CallFunc(v, q)}}`;\n            break;\n          case \"ArrowFunctionExpression\":\n            p += `${quasi.quasis[i].value.raw}{${ArrowFunc(v, q)}}`;\n            break;\n          default:\n            p += `${quasi.quasis[i].value.raw}{${v.substring(q.start, q.end)}}`;\n            break;\n        }\n        return p;\n      },\n      ret\n    );\n    ret += quasi.quasis[quasi.quasis.length - 1].value.raw\n    !jsx && (ret += v.substring(quasi.quasis[quasi.quasis.length - 1].end, tag.end))\n    return ret;\n  }\n\n  return (function () {\n    let ret = \"\";\n    if (c.id) {\n      ret += v.substring(c.id.start, c.body.start);\n    }\n    switch (c.body.type) {\n      case \"CallExpression\":\n        ret += CallFunc(v, c.body);\n        break;\n      case \"ArrowFunctionExpression\":\n        ret += ArrowFunc(v, c.body);\n        break;\n      case \"TaggedTemplateExpression\":\n        ret += TagFunc(v, c.body);\n        break;\n      default:\n        ret += v.substring(c.body.start, c.body.end);\n    }\n    return ret;\n  })();\n}","pinCode":false,"dname":"5a663246-dcc6-4560-b4e9-25c60ad9ba08","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function showToast(content, type = \"success\", duration = 3, config = {}) {\n  const { message } = Antd;\n  message[type](\n    _.assign({ content, duration, style: { zIndex: 1005 } }, config)\n  );\n}","pinCode":true,"dname":"0fc75903-429f-4f0b-8c04-f0f0758138e7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function isHtmlTag(str) {\n  // Create a temporary DOM element\n  const tempDiv = document.createElement('div');\n\n  // Try setting the innerHTML to the input string\n  tempDiv.innerHTML = `<${str.trim()}>`;\n\n  // Check if the browser interpreted the input as a tag (has child nodes)\n  return tempDiv.children.length > 0;\n}","pinCode":false,"dname":"2f0db603-f85e-4d42-a65b-10373fd165cf","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof vvv = render(({ useSetter }) => {\n  const { Button, Affix, Space } = Antd;\n  const [value,setValue] = useState(null);\n  useSetter(value);\n  return jsx`<${Affix} key='6f07940b-8821-4b46-a5ae-dde98607d7cf'  offsetTop=${100} offsetBottom=${100}>\n    <${Space}>\n    <${Button} onClick=${() => {\n    let v = document\n      .querySelector(\"#code-f1a0b5bf-0849-4c5b-a77b-235af745cdd1\")\n      .closest(\".code-edit\").state.value;\n    let c = parseCell(v);\n    setValue(c)\n    mutable qq = transformJsxToReact(v, c);\n  }}>Refresh<//>\n    <span title=\"Jump to the cell\" className=\"icon fas fa-crosshairs clicker\" onClick=${(\n    e\n  ) => {\n    e.currentTarget\n      .closest(\".code-edit-result\")\n      .scrollIntoView({ behavior: \"auto\", block: \"center\", inline: \"nearest\" });\n  }}></span>\n  </${Space}>\n    </${Affix}>`;\n})","pinCode":false,"dname":"5ce123ae-1c87-4fce-82eb-14214ff25e68","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"parseCell(`()=>jsx\\`<Abc>DDD \\${_.map([1,2,3],(o)=>jsx\\`<div>\\${o}</div>\\`)}</Abc>\\``)","pinCode":false,"dname":"8756cf37-ea9c-4cd0-ac1f-62c254719e23","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":" parseCell(\"html`<div></div>`\")","pinCode":false,"dname":"0d3d509e-a7cf-4fdf-8e09-8e0e8c5f1d0e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"parseCell(`(()=>jsx\\`<Abc>DDD \\${_.map([1,2,3],(o)=>jsx\\`<div>\\${o}</div>\\`)}</Abc>\\`)()`)","pinCode":false,"dname":"d126debb-71df-49b9-9118-625d386248f5","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"parseCell(`()=>jsx\\`abvc\\``)","pinCode":false,"dname":"aae27262-f47f-4fdb-97a4-44b045e63db8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"parseCell(`()=>{return jsx\\`abvc\\`}`)","pinCode":false,"dname":"02d06099-f309-4e90-b7dd-92d88629cde4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"parseCell(`jsx\\`abvc\\``)","pinCode":false,"dname":"cc7c7b58-d8cb-452b-bcc5-9df5e68e5ffc","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof render_3 = render(({ useSetter }) => {\n    const { Space } = Antd;\n    return <Space key='59f93662-ec42-487b-b736-cb2383ba6ac2' direction=\"vertical\">\n    </Space>;\n})","pinCode":true,"dname":"800de8e8-8b02-48fd-8624-17460471e4f6","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"// function tranform(whole) {\n//   if (!whole) {\n//     return whole;\n//   }\n//   let str = \"\";\n//   if (whole) {\n//     if (~whole.indexOf(\"${\")) {\n//       let index = whole.indexOf(\"${\");\n//       if (index > 0 && whole.charAt(index - 1) == \"<\") {\n//         let sub = whole.substring(index + 2);\n//         str += whole.substring(0, index) + sub.substring(0, sub.indexOf(\"}\"));\n//         str += tranform(sub.substring(sub.indexOf(\"}\") + 1));\n//       } else {\n//         /{|}/gms.exec(whole.substring(index + 2));\n//       }\n//     }\n//   }\n//   return str;\n// }","pinCode":false,"dname":"67cd4480-efcf-47cb-aae5-bbe04c3d72aa","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"parseCell(\"jsx(ab)\")","pinCode":false,"dname":"dccd5be1-98be-4605-8417-d6b975b6cb18","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"// w = /\\s+jsx(.*)`$/gms.exec(v)[0];","pinCode":false,"dname":"4ce905e2-45a7-461b-bdf2-55d574f1667f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"// w.indexOf(\"${\");","pinCode":true,"dname":"54c8bc3b-1e7c-4733-95dd-6e4726ac8b2a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"///jsx`/g.exec(v)","pinCode":true,"dname":"36f97580-9980-49ce-aee9-6ad2e6a0f6ef","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof render_2 = render(({ useSetter }) => {\n    const { Space } = Antd;\n  \t\tuseSetter(123)\n    return <Space key='c9ac8554-7e16-44d2-ac41-653a55b1a0ee' direction=\"vertical\">ABC\n    </Space>;\n})","pinCode":false,"dname":"8ca3c2f5-fdd5-4d20-a85e-844399e10c96","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":" render_2","pinCode":false,"dname":"68fd9a74-1c0d-43f9-9e5b-fe9b0fd21753","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof render_1 = render(({ useSetter }) => {\n    const { Space } = Antd;\n  useSetter(124)\n    return <Space key='2784bd71-38f6-41a6-8e13-0fd2af849dc9' direction=\"vertical\">ac\n    </Space>;\n})","pinCode":false,"dname":"98c31c85-b293-4e80-8e42-7d2d292a3faf","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"render_1","pinCode":false,"dname":"8c816837-1690-453c-9e5d-090240f030d7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"a = 100","pinCode":false,"dname":"488994ac-1fe8-4a82-bed8-2f104128922f","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n  const { Breadcrumb, Button, Input } =Antd;\n  const App = () => (\n    <Breadcrumb>\n      <Breadcrumb.Item>Home</Breadcrumb.Item>\n      <Breadcrumb.Item>\n        <a href=\"\">Application Center\n        </a>\n      </Breadcrumb.Item>\n      <Breadcrumb.Item>\n        <a href=\"\">Application List</a>\n      </Breadcrumb.Item>\n      <Breadcrumb.Item>An Application</Breadcrumb.Item>\n    </Breadcrumb>\n  );\n  return <App key='310fd9ac-d6a2-4a08-ba63-10e371b83905' direction=\"vertical\">\n  </App>;\n})","pinCode":false,"dname":"2205d63f-afbe-4117-853b-d0635c165e17","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n    const { Space } = Antd;\n    return <Space key='57e9fb3e-b22e-4ca5-b6bd-828cb2ca121a' direction=\"vertical\">\n    </Space>;\n})","pinCode":false,"dname":"682855db-6867-4898-bf0d-82edca1a0c2c","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n    const { Breadcrumb, Button, Input } =Antd;\nconst App = () => (\n  <Breadcrumb>\n    <Breadcrumb.Item>Home</Breadcrumb.Item>\n    <Breadcrumb.Item>\n      <a href=\"\">Application Center\n      </a>\n    </Breadcrumb.Item>\n    <Breadcrumb.Item>\n      <a href=\"\">Application List</a>\n    </Breadcrumb.Item>\n    <Breadcrumb.Item>An Application</Breadcrumb.Item>\n  </Breadcrumb>\n);\n    return <App key='52b21416-74f0-428b-b923-ddf0f0a00fa1' direction=\"vertical\">\n    </App>;\n})\n\n","pinCode":false,"dname":"0656a132-6857-4ae2-9f26-802bc2d81ecb","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n    const { Breadcrumb } =Antd;\nconst App = () => ( <Breadcrumb>\n    <Breadcrumb.Item>Home</Breadcrumb.Item>\n    <Breadcrumb.Item>\n      <a href=\"\">Application Center</a>\n    </Breadcrumb.Item>\n    <Breadcrumb.Item>\n      <a href=\"\">Application List</a>\n    </Breadcrumb.Item>\n    <Breadcrumb.Item>An Application</Breadcrumb.Item>\n  </Breadcrumb>\n);\n    return <App key='52b21416-74f0-428b-b923-ddf0f0a00fa1' direction=\"vertical\">\n    </App>;\n})\n\n","pinCode":false,"dname":"6cf86b15-b78d-4e92-afbb-6712ff40cda5","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"data","pinCode":false,"dname":"abd3be75-3828-4578-8275-06fbbab54713","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof data = render(({ useSetter }) => {\n  const { Button, Checkbox, Form, Input } = Antd;\n  const [ data, setData] = useState({\n        remember: true,\n      });\n  const onFinish = (values) => {\n    console.log('Success:', values);\n    setData(values)\n  };\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n  useSetter(data)\n  return (\n    <Form\n      name=\"basic\"\n      labelCol={{\n        span: 8,\n      }}\n      wrapperCol={{\n        span: 16,\n      }}\n      initialValues={data}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      autoComplete=\"off\"\n      >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your username!',\n          },\n        ]}\n        >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n        >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"remember\"\n        valuePropName=\"checked\"\n        wrapperCol={{\n          offset: 8,\n            span: 16,\n        }}\n        >\n        <Checkbox>Remember me</Checkbox>\n      </Form.Item>\n\n      <Form.Item\n        wrapperCol={{\n          offset: 8,\n            span: 16,\n        }}\n        >\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n})","pinCode":false,"dname":"59b8f5b2-9a20-404e-9b87-0194863ab80c","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n    const { Space } = Antd;\n    return <Space key='52b21416-74f0-428b-b923-ddf0f0a00fa1' direction=\"vertical\">\n    </Space>;\n})","pinCode":false,"dname":"4d6fe655-6c8b-446a-838b-a05300c037c3","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n    const { Space, Button, } = Antd;\n  \n    return <Space key='52b21416-74f0-428b-b923-ddf0f0a00fa1' direction=\"vertical\">\n      \n    </Space>;\n})","pinCode":false,"dname":"f5306cbc-2b91-45c9-afbc-878de4eef09c","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n    const { Space, } = Antd;\n    return <Space key='52b21416-74f0-428b-b923-ddf0f0a00fa1' direction=\"vertical\">\n      \n    </Space>;\n})","pinCode":false,"dname":"1a818642-1e6f-4c46-9395-87901eae2105","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"window.console.warn()","pinCode":false,"dname":"ca6974dc-29a5-4ef1-96f1-a665ba63224b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"component(({ }) => {\n    const { Space } = Antd;\n    return <Space key='52b21416-74f0-428b-b923-ddf0f0a00fa0' direction=\"vertical\">\n    </Space>;\n})","pinCode":false,"dname":"0390bfac-d125-431a-8918-e01934ae4b83","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"","pinCode":false,"dname":"c261f27e-e34d-42d1-baa2-a9ac4ea0207b","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n    return  <ShoppingList name=\"Mark\" />;\n})","pinCode":false,"dname":"566a5b1e-7d9c-478c-99e0-ec168a43c858","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"Antd","pinCode":false,"dname":"e95ccece-74cd-4178-9ba0-ab6c40f4f2c1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n    return  <ShoppingList key=\"223\"  name=\"Mark\" />;\n})","pinCode":false,"dname":"c8366d15-0be7-4ba9-96b5-2659753c8075","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"class ShoppingList extends React.Component {\n  render() {\n    return (\n      <div className=\"shopping-list\">\n        <h1>Shopping List for {this.props.name}</h1>\n        <ul>\n          <li>Instagram</li>\n          <li>WhatsApp</li>\n          <li>Oculus</li>\n        </ul>\n      </div>\n    );\n  }\n}","pinCode":false,"dname":"529922de-5442-4b0e-a5a7-5c6d428ff842","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"dd = <div key=\"abc\" dd=\"\">\n  abc\n  </div>","pinCode":false,"dname":"1fe57979-8c52-483a-aef0-70b9fc0c5cfd","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"babel = require('@babel/standalone@7.25.6/babel.js')","pinCode":false,"dname":"d9a4fed2-c5e0-4b1f-9cc7-8d4b8f806392","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"babel.transform(\"<DatePicker onChange={onChange} />\", { presets: ['react'] }).code","pinCode":false,"dname":"fa8a6709-0594-4a1d-8e4b-9837bb683eed","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof table_1 = Inputs.table(cars)","pinCode":false,"dname":"4bb4a2b7-59b9-4b38-90dd-6e009b119279","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"babel.transform(\n  `render(({ useSetter }) => {\n  const { DatePicker, Space } = Antd;\n  const { RangePicker } = DatePicker;\n  const onChange = (date, dateString) => {\n        console.log(date, dateString);\n    };\n  return <Space  key=\"bfb75d10-04fb-449c-a02e-7f07f8f6d150\" >\n    <DatePicker onChange={onChange} picker=\"week\" />\n    <Ccc />\n  </Space>\n})`,\n  { presets: [\"react\"] }\n).code","pinCode":false,"dname":"f7a182e6-e96c-4cce-ad49-af5591ed8f62","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function Abc(){\n\tconst { DatePicker, Space } = Antd;\n  const { RangePicker } = DatePicker;\n  const onChange = (date, dateString) => {\n    console.log(date, dateString);\n  };\n  \n  return <Space key=\"b007ae8d-fd9b-4932-b84a-d5b592cf6087\" >\n    <DatePicker onChange={onChange} picker=\"week\" />\n    \n  </Space>\n}","pinCode":false,"dname":"2ff54704-1be4-4183-8bbd-3d860bf7acb3","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n  const { DatePicker, Space } = Antd;\n  const { RangePicker } = DatePicker;\n  const onChange = (date, dateString) => {\n        console.log(date, dateString);\n    };\n  return <Space  key=\"bfb75d10-04fb-449c-a02e-7f07f8f6d150\" >\n    <DatePicker onChange={onChange} picker=\"week\" />\n    <Ccc />\n  </Space>\n})","pinCode":false,"dname":"d1c57f46-c835-4420-8650-446ad1e1cf1c","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n  const { DatePicker, Space } = Antd;\n\treturn <Space>\n      <Abc />\n      <Ccc />\n      </Space>\n})","pinCode":false,"dname":"fa64949c-1b65-4bca-9c62-5d60618dbba3","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n  const {Button} = Antd;\n  const App = () => (\n    <React.Fragment key=\"550736a8-d627-435d-9541-dfede5b7d397\">\n      <Button type=\"primary\">Primary Button</Button>\n      <Button>Default Button</Button>\n      <Button type=\"dashed\">Dashed Button</Button>\n      <br />\n      <Button type=\"text\">Text Button</Button>\n      <Button type=\"link\">Link Button</Button>\n    </React.Fragment>\n  );\n return <App />;\n})","pinCode":false,"dname":"5ea20be9-6630-47ac-a9af-3e8c07a7adad","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n  const {Button} = Antd;\n  const App = () => (\n  <React.Fragment key=\"83943674-7652-4c28-820c-b01fe81c0805\">\n    <Button type=\"primary\">Primary Button</Button>\n    <Button>Default Button</Button>\n    <Button type=\"dashed\">Dashed Button</Button>\n    <br />\n    <Button type=\"text\">Text Button</Button>\n    <Button type=\"link\">Link Button</Button>\n  </React.Fragment>\n);\nreturn <App />;\n})","pinCode":false,"dname":"2dbab2a9-2b70-40c2-a10c-5c183b6fcd53","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n  const { DatePicker, Space } = Antd;\n\treturn <Space key=\"15fa3dde-533f-42eb-bf07-d8193aea0c25\">\n      <Abc />\n      <Ccc />\n      </Space>\n})","pinCode":false,"dname":"29d1596a-d60a-448b-8507-df2e73a18320","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"Ccc = component(({})=>{\n\tconst { DatePicker, Space } = Antd;\n    const { RangePicker } = DatePicker;\n    const onChange = (date, dateString) => {\n        console.log(date, dateString);\n    };\n    const App = () => (\n        jsx`<${Space} key='66251520-a25d-4fa3-abaa-bed4b8f84024' direction=\"vertical\">\n        ${Abc()}\n        \n        <${DatePicker} onChange=${onChange} picker=\"week\" />\n        <${DatePicker} onChange=${onChange} picker=\"month\" />\n        <${DatePicker} onChange=${onChange} picker=\"quarter\" />\n        <${DatePicker} onChange=${onChange} picker=\"year\" />\n        <${RangePicker} onChange=${onChange} />\n        ${dd}\n        <//>`\n    );\n    return jsx`<${App} />`\n})","pinCode":false,"dname":"698658f4-a99b-4f15-9f03-63cbd196d955","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof datePicker = render(({ useSetter }) => {\n    const { DatePicker, Space } = Antd;\n    const { RangePicker } = DatePicker;\n    const onChange = (date, dateString) => {\n        console.log(date, dateString);\n    };\n    const App = () => (\n        jsx`<${Space} key='66251520-a25d-4fa3-abaa-bed4b8f84024' direction=\"vertical\">\n        ${\n        _.map([1,2,3],(t)=>{\n      \t   return jsx`<div>${t}</div>`\n         })\n      \t  }\n        ${Abc()}\n        <${DatePicker} onChange=${onChange} picker=\"week\" />\n        <${DatePicker} onChange=${onChange} picker=\"week\" />\n        <${DatePicker} onChange=${onChange} picker=\"month\" />\n        <${DatePicker} onChange=${onChange} picker=\"quarter\" />\n        <${DatePicker} onChange=${onChange} picker=\"year\" />\n        <${RangePicker} onChange=${onChange} />\n        ${dd}\n        <//>`\n    );\n    return jsx`<${App} />`\n});","pinCode":false,"dname":"03dd2a47-0297-4fca-b70a-05acb86fb9cc","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof table = Inputs.table(cars)","pinCode":false,"dname":"05ae7705-9b2b-49c3-9588-fe6414e16dc8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof form = Inputs.form({\n            option1: Inputs.checkbox([\"A\", \"B\"], {label: \"Select some\"}),\n            option2: Inputs.range([0, 100], {label: \"Amount\", step: 1}),\n            option3: Inputs.radio([\"A\", \"B\"], {label: \"Select one\"}),\n            option4: Inputs.select([\"A\", \"B\"], {label: \"Select one\"})\n          })","pinCode":false,"dname":"437f0e14-cba5-41d7-a054-997fe90270c8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof text_1 = Inputs.text({label: \"Name\"})","pinCode":false,"dname":"c0cec6ab-1f0b-4599-85b1-4f794452bc8d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof text = Inputs.text({label: \"Name\"})","pinCode":false,"dname":"b209b011-fad2-484c-9bba-5d852bf5bfe5","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof autoComplete = render(({ useSetter }) => {\n    const { AutoComplete } = Antd;\n    const mockVal = (str, repeat = 1) => ({\n      value: str.repeat(repeat),\n    });\n    const [value, setValue] = useState('');\n    const [options, setOptions] = useState([]);\n    const onSearch = (searchText) => {\n      setOptions(\n        !searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)],\n      );\n    };\n    const onSelect = (data) => {\n      console.log('onSelect', data);\n    };\n    const onChange = (data) => {\n      setValue(data);\n    };\n    useSetter({value});\n    return jsx`<${Fragment} key='6ab33172-91d3-4901-8fbd-f3803efaaf75'>\n          <${AutoComplete}\n            options=${options}\n            style=${{\n              width: 200,\n            }}\n            onSelect=${onSelect}\n            onSearch=${onSearch}\n            placeholder=\"input here\"\n          />\n          <br />\n          <br />\n          <${AutoComplete}\n            value=${value}\n            options=${options}\n            style=${{\n              width: 200,\n            }}\n            onSelect=${onSelect}\n            onSearch=${onSearch}\n            onChange=${onChange}\n            placeholder=\"control mode\"\n          />\n    <//>`\n})","pinCode":false,"dname":"f929afbc-571f-4ab1-93fe-b9085a569097","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import {jsx, render, useState, component, useEffect, Fragment } from \"https://grove-help.graphxr.com/react/react\"","pinCode":false,"dname":"dc87f457-21e5-44b8-8c50-b35f89569801","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"<!--<style>\n  .global-style .darkmode{\n  input:-webkit-autofill,\n  input:-webkit-autofill:hover,\n  input:-webkit-autofill:focus {\n      border: 1px solid #b1b1b1;\n      -webkit-text-fill-color: white;\n      -webkit-box-shadow: 0 0 0px 1000px #000 inset;\n      transition: background-color 5000s ease-in-out 0s;\n  }\n    }\n</style>-->","pinCode":false,"dname":"84513335-2f59-494a-9262-1c74d234ca9a","codeMode":"htmlmixed"}}}],"version":"2.19.1"}