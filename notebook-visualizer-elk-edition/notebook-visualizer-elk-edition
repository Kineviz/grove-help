{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# Notebook visualizer _Elk edition_\n\n_ðŸŒ¶ Like the [notebook visualizer](https://observablehq.com/@observablehq/notebook-visualizer), but using [elkjs](https://github.com/OpenKieler/elkjs) and [my tiny rendering notebook](https://observablehq.com/@tmcw/elk) for a beautiful orthogonal layout._\n\nTo use, paste the URL of a public or shared notebook below, or type and click submit. For more on what this graph means, see [How Observable Runs](/@observablehq/how-observable-runs). Use the cell menu <svg viewBox=\"0 0 8 14\" fill=\"currentColor\" stroke=\"none\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" width=\"8\" height=\"14\"><circle r=\"1.5\" cx=\"4\" cy=\"2\"></circle><circle r=\"1.5\" cx=\"4\" cy=\"7\"></circle><circle r=\"1.5\" cx=\"4\" cy=\"12\"></circle></svg> below to save your graph as PNG or SVG if desired.\n\nTo share a link to your dependency graph, [click here](?id=${id}).`","pinCode":false,"dname":"73506b7a-e89b-4c8a-8807-d80f32601d85","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof id = {\n  const {text} = submit({\n    value: new URLSearchParams(html`<a href>`.search).get(\"id\") || \"@mbostock/liquidfun\"\n  });\n  text.addEventListener(\"input\", () => {\n    let v = text.value, m;\n    if (m = /\\.js(\\?|$)/i.exec(v)) v = v.slice(0, m.index);\n    if (m = /^[0-9a-f]{16}$/i.test(v)) v = `d/${v}`;\n    if (m = /^https:\\/\\/(api\\.|beta\\.|)observablehq\\.com\\//i.exec(v)) v = v.slice(m[0].length);\n    if (v !== text.value) text.value = v;\n  });\n  text.addEventListener(\"paste\", () => {\n    Promises.delay(50).then(() => {\n      text.form.dispatchEvent(new CustomEvent(\"submit\", {cancelable: true}));\n    });\n  });\n  return text.form;\n}","pinCode":false,"dname":"4f7d4643-283f-487b-a38c-b760ede82eca","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof orient = (html`<select>\n<option value=LEFT selected>left-to-right\n<option value=RIGHT>right-to-left\n<option value=DOWN>top-to-bottom\n<option value=UP>bottom-to-top\n</select>`)","pinCode":false,"dname":"0f400263-b2d5-4631-ba47-3983475a8fc1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof show = {\n  const form = html`<form>\n  <div><label><input name=anon type=checkbox> Include anonymous cells</label></div>\n  <div><label><input name=builtin type=checkbox checked> Include builtins</label></div>\n</form>`;\n  form.value = {anon: false, builtin: true};\n  form.anon.onclick = form.builtin.onclick = event => {\n    form.value = {...form.value, [event.currentTarget.name]: event.currentTarget.checked};\n    form.dispatchEvent(new CustomEvent(\"input\"));\n  };\n  return form;\n}","pinCode":false,"dname":"06088a4d-2092-4f5a-8cf3-0a6b5be06411","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof graph = {\n  let children = [];\n  let edges = [];\n  let eId = 0;\n  for (let v of variables) {\n    children.push({\n      label: v._name || `#${v._id}`,\n      id: v._name || `#${v._id}`,\n      fill: v._module === main._runtime._builtin ? 'blue' : '#000'\n    });\n    for (let i of v._inputs) {\n      edges.push({\n        id: `e${eId++}`,\n        targets: [v._name || `#${v._id}`],\n        sources: [i._name || `#${i.w_id}`]\n      });\n    }\n  }\n  let graph = {\n    id: 'root',\n    layoutOptions: { algorithm: 'layered', favorStraightEdges: true , 'elk.direction': orient},\n    children,\n    edges\n  };\n  let g = await elky(graph);\n  g.value = graph;\n  g.dispatchEvent(new CustomEvent('input'));\n  return g;\n}","pinCode":false,"dname":"021dfc99-55bf-4c73-9bfd-e7eadf045edc","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`---`","pinCode":false,"dname":"46eb8ee5-16be-4aca-83a5-071d94074caf","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"main = (import(`https://api.observablehq.com/${id}.js?v=3`)\n  .then(async ({default: define}) => {\n    const runtime = new Runtime();\n    const main = runtime.module(define, name => show.anon || name);\n    await runtime._compute();\n    runtime.dispose();\n    return main;\n  }))","pinCode":false,"dname":"7d601cf8-9aac-4d52-a4e2-da3b7b9e2a17","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"variables = (Array.from(main._runtime._variables, (v, i) => (v._id = i, v))\n  .filter(v => !isimport(v) && v._reachable)\n  .filter(v => show.anon || v._name !== null)\n  .filter(v => show.builtin || v._module !== main._runtime._builtin)\n  .map(v => ({\n    _module: v._module,\n    _name: v._name,\n    _id: v._id,\n    _inputs: v._inputs\n      .map(i => isimport(i) ? i._inputs[0] : i)\n      .filter(i => show.builtin || i._module !== main._runtime._builtin)\n  })))","pinCode":false,"dname":"64f29bef-04d1-48be-91ee-cc1dbe33814a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"isimport = (v => v._inputs.length === 1 && v._module !== v._inputs[0]._module)","pinCode":false,"dname":"1eb2cd16-cad5-4b86-9d17-64d073594824","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"Runtime = ((await require(\"@observablehq/runtime@4\")).Runtime)","pinCode":false,"dname":"5137ff28-3d2b-4e14-87ab-83ef29530ad7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import { submit }  from 'notebook-visualizer-elk-edition/more-deliberate-inputs'","pinCode":false,"dname":"61e53e0d-9c35-4fa6-bd2d-960752757ecc","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import { elky }  from 'notebook-visualizer-elk-edition/elk'","pinCode":false,"dname":"4de5d1f3-ccfb-4f20-b38f-80ec4207aa63","codeMode":"javascript2"}}}],"version":"2.19.1"}