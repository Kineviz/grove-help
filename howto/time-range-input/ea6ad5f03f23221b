{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# Date and Offset Sliders\n\nLets you slide over a range of values.\n\n*In response to [this forum post](https://talk.observablehq.com/t/how-to-modify-existing-inputs/7454).*\n\nUsage:\n~~~js\nimport {offsetInterval} from \"@mootari/offset-slider\"\n~~~\n\n~~~js\nviewof range = offsetInterval(values)\n~~~`","pinCode":false,"dname":"6c6c8e73-06c8-471d-acbc-89c26b74869e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`---\n## Example\n\n*For the full list of options see the [\\`interval()\\` documentation](https://observablehq.com/@mootari/range-slider#doc_interval). Note that the options \\`min\\`, \\`max\\` and \\`step\\` are ignored.*`","pinCode":false,"dname":"032d7b8c-0986-4f26-97bb-660c523cc416","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"dates = (d3.utcDays(d3.utcDay.offset(d3.utcDay(), -30), d3.utcDay()))","pinCode":false,"dname":"3097a4ad-564a-45ed-be49-a37d5ac2b67a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof range = (offsetInterval(dates, {\n  label: \"Date range\",\n  formatValue: date => date.toISOString().slice(0, 10),\n  value: [ dates[2], dates[5] ]\n}))","pinCode":false,"dname":"3be77c0c-ef9b-4d5d-ab73-0e268d03ff22","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"range","pinCode":false,"dname":"2402f7c0-9dd4-4a78-b8c5-d2efafab2aa5","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof range2 = (offsetInterval([\"extra small\", \"small\", \"medium\", \"large\", \"extra large\"], {\n  label: \"Sizes\",\n}))","pinCode":false,"dname":"a1452d1f-24ec-4aa2-958f-44ae3bf57443","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"range2","pinCode":false,"dname":"e6198161-e8d6-4ccf-8055-82131f8adf1c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`To have full control over the value display specify a \\`format\\` callback. Note that the callback receives the raw unformatted values:`","pinCode":false,"dname":"9d6c5988-71f6-4705-ab8f-a596cfdfdfff","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"offsetInterval(dates, {\n  value: [ dates[10], dates[20] ],\n  format: ([a, b]) => htl.html`<span ${{\n    style: \"display: flex; justify-content: space-between\"\n  }}>\n    <span>${a.toISOString().slice(0, 10)}</span>\n    <span>${b.toISOString().slice(0, 10)}</span>\n  </span>`\n})","pinCode":false,"dname":"54b543a5-1037-4e04-9ba1-1bb6f51c3a9d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`---\n## Implementation`","pinCode":false,"dname":"ff8a0f59-3d27-432d-ad96-cdd3002ae2fa","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"offsetInterval = (function offsetInterval(values, {\n  value = [values[0], values[values.length - 1]],\n  formatValue = v => v,\n  format = ([a, b]) => `${formatValue(a)} â€¦ ${formatValue(b)}`,\n  ...options\n} = {}) {\n  if(new Set(values).size < values.length) throw Error(\"All values have to be unique.\");\n  const valueof = i => values[i];\n  const indexof = v => values.indexOf(v);\n  const _format = i => formatValue(valueof(i));\n  const input = interval([0, values.length - 1], {\n    ...options,\n    step: 1,\n    value: value.map(indexof),\n    format: v => format(v.map(valueof)),\n  });\n  return mapInputValue(input, indices => indices.map(valueof), dates => dates.map(indexof));\n})","pinCode":false,"dname":"826a4382-182d-4cf8-a71f-9f7dfd2fb28b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"mapInputValue = (function mapInputValue(input, from, to) {\n  return Object.defineProperty(htl.html`<div>${input}`, 'value', {\n    get: () => from(input.value),\n    set: value => input.value = to(value)\n  });\n})","pinCode":false,"dname":"7a84faac-f7fd-4367-8729-ee64c24da9e6","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import { interval }  from 'https://grove-help.graphxr.com/time-range-input/b2bbebd2f186ed03'","pinCode":false,"dname":"9ff27172-5f3d-4139-813a-639fd174b046","codeMode":"javascript2"}}}],"version":"2.19.1"}