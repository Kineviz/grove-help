{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# Module require debugger\n\n${!importSupport ? `**Note:** your browser doesn't support [dynamic import()](https://caniuse.com/#feat=es6-module), so this debugger will never recommend that option.` : ''}\n\nLoading modules is tricky! Because modules are tricky. Let's try to make them a little easier. Enter a module into the moduleName field below, click Go, and see which module-loading strategies will work.\n`","pinCode":false,"dname":"0687aee0-78b9-4691-8d54-dabae02167e9","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof moduleName = (text({\n  placeholder: \"module-name\",\n  description:\n    \"Enter the module‚Äôs name, as it is on npm. For example, try wcag-contrast.\",\n  submit: \"Go\",\n  value: params.get(\"module\") || null\n}))","pinCode":false,"dname":"f6d969da-b5b3-4e68-81ae-61219da34d84","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof ss = moduleName ? html`\n${[basicRequire, dynamicImport, skypackImport, bundleRun, scavengingForLinks, globalLeaksPattern]\n  .filter(Boolean)\n  .filter(a => a.type == success).length > 0 ? '' :\npkg instanceof Error ?\n  html`<p style='color:darkred'>This module doesn‚Äôt seem to be published on NPM. Perhaps the module name is incorrect or mistyped, or the module‚Äôs author hasn‚Äôt published it yet?</p>` :\n  html`<p style='color:darkred'>üò≠ Okay, so: nothing worked. We tried UMD, we tried bundling, we tried searching for random files that might be loadable. Unfortunately, no üé≤. This doesn‚Äôt mean nothing can work - this is an automated tool and doesn‚Äôt have human intuition. You might want to <a href=\"https://unpkg.com/${moduleName}/\">browse the files this module exposes on unpkg</a> to see if any of them look viable. Or you might want to ask the module‚Äôs author whether there‚Äôs a file that people can use with browsers. Where there‚Äôs a will there‚Äôs a way: good luck. (This also means that all of the grayed-out solutions below won‚Äôt work.)</p><br />`}\n\n<div>\n<p style='font-style:italic;margin-bottom:2rem;'>Below are multiple strategies for loading this library. Those with a thumbs-up work, those with a frowny face don‚Äôt, and the ones with a shrug work, but have caveats.</p>\n\n<style>\n.copiable {\n  cursor:pointer;\n  font-size:18px;\n  max-width:100%;\n}\n.copiable:hover {\n  background: yellow;\n}\n.copiable:hover::after {\n  content: 'click to copy';\n  padding-left: 2rem;\n  background: #fff;\n}\n.copiable.copied:hover::after {\n  content: 'copied!';\n}\n</style>\n\n\n\n${d3.sort(\n  [basicRequire, dynamicImport, skypackImport, bundleRun, scavengingForLinks, globalLeaksPattern].filter(Boolean),\n  d => d.type != success\n )\n  .map(({code, type, description}) => html`\n  <div style='font-size:20px;${type == failure ? 'opacity:0.5' : ''};padding-bottom:3rem;'>\n    ${emojis[type]} <code class='copiable'>${code}</code>\n    <p style='opacity:0.8'>${md`${description}`}</p>\n  </div>\n`)}\n\n</div>` : html`<strong>Enter a module name above and click Go to get started</strong>`","pinCode":false,"dname":"11c13c3b-5afd-453b-bf8e-4d4acc53adf1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`## Analysis\n\nOkay, what kind of entry points do we have here! ‚ÄúEntry point‚Äù is a fancy term for a property in package.json that points to a file that can be initially included as the module‚Äôs starting point. That entry point might require other files, but it‚Äôs the key starting point.`","pinCode":false,"dname":"0a39b051-7e25-417d-9f43-87fc7b328349","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"pkg && html`\n<style>\n#entries tr td {\n  vertical-align: top;\n}\n#entries tr td:first-child {\n  padding-right:3rem;\n}\n#entries tr td:nth-child(2) {\n  font-family: monospace;\n  padding-right:3rem;\n}\n</style>\n\n<div>\n<table id='entries'>\n  <thead>\n    <tr>\n      <th></th>\n      <th>entry point</th>\n      <th>description</th>\n    </tr>\n  </thead>\n  <tr>\n    <td>${!!pkg.main ? `‚úì` : ''}</td>\n    <td>main</td>\n    <td>The original one: this was the first kind of entry point invented, and for a long time it was almost always code that would run in the Node.js environment.</td>\n  </tr>\n  <tr>\n    <td>${!!pkg.unpkg ? `‚úì` : ''}</td>\n    <td>unpkg</td>\n    <td>An entry point invented by <a href='https://unpkg.com/'>unpkg</a>, the web-friendly npm content delivery system. It‚Äôs usually a really good sign if we see one of these, because they‚Äôre supposed to be <a href='https://github.com/umdjs/umd'>UMD</a> files, which are very web-friendly.</td>\n  </tr>\n  <tr>\n    <td>${!!pkg.module ? `‚úì` : ''}</td>\n    <td>module</td>\n    <td>The entry point of the future! In this one should lie a ES Module - a new module syntax for JavaScript that‚Äôs built into the language itself. It‚Äôs great if we find one of these, but not a guaranteed win, because support and interoperability of this module type is pretty scarce.</td>\n  </tr>\n</table>\n\n<p>Sometimes a package.json won‚Äôt have any of these, and that's fine. In that case, we are left to assume that the entry point is <code>index.js</code></p>\n</div>`","pinCode":false,"dname":"76a92914-26bd-4c82-9dfb-8bcb95307f94","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"basicRequire = {\n  yield undefined;\n  if (!moduleName) return;\n  const permaurl = (await fetch(`https://unpkg.com/${moduleName}`)).url.replace('https://unpkg.com/', '');\n  const res = {\n    code: `require('${permaurl}')`,\n    description: `This is the default, simplest method to require a module. It uses [d3-require](https://github.com/d3/d3-require) behind the scenes, pulls from JsDelivr by default, and supports UMD and AMD modules.`\n  };\n  try {\n    await require(permaurl);\n    yield {\n      type: success,\n      ...res\n    }\n  } catch (e) {\n    yield {\n      type: failure,\n      ...res\n    };\n  }\n}","pinCode":false,"dname":"502a0d3d-eae5-4097-bd07-4eb431ad03d1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"importSupport = { try { eval(`import('test')`); return true; } catch (e) { return false; } }","pinCode":false,"dname":"e7e2410f-d20b-48c9-8452-92affec9c703","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"dynamicImport = {\n  yield undefined;\n  if (!moduleName || !importSupport) return;\n  const permaurl = (await fetch(`https://unpkg.com/${moduleName}?module`)).url;\n  const res = {\n    code: `import('${permaurl}')`,\n    description: `This is the way of the future: it‚Äôs the only technique in the list that actually has your browser deal with importing modules, instead of bundling them all into one file. Advantage is that it‚Äôs super cool, and excellent for debugging - no need for sourcemaps, the files are more or less verbatim. The disadvantage is that browser support is [super slim](https://caniuse.com/#feat=es6-module).`\n  };\n  try {\n    await eval(`import('${permaurl}')`);\n    yield {\n      type: success,\n      ...res\n    }\n  } catch (e) {\n    yield {\n      type: failure,\n      ...res\n    };\n  }\n}","pinCode":false,"dname":"0d13f58c-cef4-46b2-b6fc-7972781838b1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"skypackImport = {\n  yield undefined;\n  if (!moduleName || !importSupport) return;\n  const permaurl = `https://cdn.skypack.dev/${pkg.name}@${pkg.version}?min`;\n  const res = {\n    code: `import('${permaurl}')`,\n    description: `Some modules are not importable directly, but [Skypack](https://www.skypack.dev) is able to prepare them. Bonus: it saves an optimized version for each browser in a cacheable URL. Remove \\`?min\\` to get the full source.`\n  };\n  try {\n    await eval(`import('${permaurl}')`);\n    yield {\n      type: success,\n      ...res\n    }\n  } catch (e) {\n    yield {\n      type: failure,\n      ...res\n    };\n  }\n}","pinCode":false,"dname":"d3fbf648-18aa-4b66-a222-bb22889f33d1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"bundleRun = {\n  yield undefined;\n  if (!moduleName || !pkg.version) return;\n  const res = {\n    code: `require('https://bundle.run/${pkg.name}@${pkg.version}')`,\n    description: `[bundle.run](https://bundle.run/) is an online version of [packd](https://github.com/Rich-Harris/packd), which serves one purpose: to bundle modules. It runs [rollup](https://rollupjs.org/) and [browserify](http://browserify.org/) on the fly to combine multiple JavaScript files into one bundle that‚Äôs easily consumed by web browsers. The advantage is that it often works on stubborn modules that the author never expected to be run in a browser environment. The disadvantage is that it isn‚Äôt guaranteed to be as fast as unpkg.`\n  };\n  try {\n    await require(`https://bundle.run/${moduleName}@${pkg.version}`);\n    yield {\n      type: success,\n      ...res\n    }\n  } catch (e) {\n    yield {\n      type: failure,\n      ...res\n    };\n  }\n}","pinCode":false,"dname":"a875e379-d89b-48b4-beed-dc443da8028e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"scavengingForLinks = {\n  yield undefined;\n  if (!moduleName || !pkg.version) return;\n  const meta = await (await fetch(`https://unpkg.com/${moduleName}/?meta`)).json();\n  function collectPaths(root) {\n    let list = [];\n    function collect(node) {\n      node.files.forEach(f => {\n        if (f.type == 'file') list.push(f.path);\n        else collect(f);\n      });\n    }\n    collect(root);\n    return list;\n  }\n  let candidates = collectPaths(meta).filter(p => p.match(/(umd|amd|dist)/) && p.match(/js$/));\n  for (let candidate of candidates) {\n    try {\n      await require(`${moduleName}@${pkg.version}${candidate}`);\n      yield {\n        type: success,\n        code: `require('${moduleName}@${pkg.version}${candidate}')`,\n        description: `This is _scavenging for dists_ mode: we looked through the files in this module and found one that mentioned dist, amd, or umd, and that worked.`\n      }\n    } catch (e) {}\n  }\n}","pinCode":false,"dname":"15ec06df-79a9-4d39-8878-9909bc71fc0b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"globalLeaksPattern = {\n  yield undefined;\n  if (!moduleName || !pkg.version) return;\n  const permaurl = (await fetch(`https://unpkg.com/${moduleName}`)).url;\n  let iframe = document.createElement(\"iframe\");\n  document.body.appendChild(iframe);\n  iframe.style.display=\"none\";\n  try {\n    let beforeKeys = new Set(Object.keys(iframe.contentWindow));\n    iframe.contentWindow.document.open();\n    let script = iframe.contentWindow.document.appendChild(\n      iframe.contentWindow.document.createElement(\"script\")\n    );\n    script.src = permaurl;\n    await new Promise((resolve, reject) => {\n      script.addEventListener(\"load\", resolve);\n      script.addEventListener(\"error\", reject);\n    });\n    let newKeys = Object.keys(iframe.contentWindow)\n      .filter(k => !beforeKeys.has(k))\n      .filter(k => ![\"ENV\", \"require\"].includes(k));\n    iframe.contentWindow.document.close();\n    if (newKeys.length) {\n      yield {\n        type: success,\n        code: `require('${permaurl.replace(\n          \"https://unpkg.com/\",\n          \"\"\n        )}').catch(() => window[${JSON.stringify(newKeys[0])}])`,\n        description: md`The ‚Äòglobal leak‚Äô pattern. It‚Äôs a doozy. Essentially a module that works in node, and works as a script tag, but doesn‚Äôt work with any specific loader. So we use \\`require()\\`, expect it to fail, and then grab the global that it adds to the window. There may be multiple variables attached to the window that way, so for completeness, here are all of them: ${newKeys.map((k, i) => html`${i === 0 ? '' : ', '}<code>${DOM.text(k)}</code>`)}.`\n      };\n      \n    }\n  } catch(e) {}\n}","pinCode":false,"dname":"a4593ae8-41dd-4590-b83b-b8140ecf7da3","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"pkg = {\n  if (!moduleName) return undefined;\n  try {\n    return await (await fetch(`https://unpkg.com/${moduleName}/package.json`)).json();\n  } catch (e) {\n    return new Error('This package is not published on npm');\n  }\n}","pinCode":false,"dname":"8ab57298-099f-4825-9d8d-0793f0310526","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"document.addEventListener('click', e => {\n  if (e.target.className === 'copiable') {\n    copy(e.target.textContent);\n    e.target.classList.add('copied');\n    setTimeout(() => e.target.classList.remove('copied'), 500);\n  }\n})","pinCode":false,"dname":"d7f36a3a-312c-48da-a1ae-38f93a412eb9","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"emojis = ({\n  [failure]: '‚òπÔ∏è',\n  [success]: 'üëç',\n  [maybe]: 'ü§∑‚Äç'\n})","pinCode":false,"dname":"e01a8ce9-7767-4cf3-9a0a-9922330e88bf","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import { text }  from 'module-require-debugger/e93997d5089d7165'","pinCode":false,"dname":"2b51b28f-d32c-4372-9a5c-be886254b33d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"success = (Symbol('success'))","pinCode":false,"dname":"545adf46-1f28-407f-87ac-b0fe912b30b4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"failure = (Symbol('failure'))","pinCode":false,"dname":"35f1a703-de5b-4a34-8652-6afa5030ddee","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"maybe = (Symbol('maybe'))","pinCode":false,"dname":"c737c4ac-703b-4e75-98b3-113835d2cec6","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"omit = (Symbol('omit'))","pinCode":false,"dname":"faae307b-c690-4462-8022-f6fd112d3931","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"copy = (function copy(text) {\n  var fakeElem = document.body.appendChild(document.createElement('textarea'));\n  fakeElem.style.position = 'absolute';\n  fakeElem.style.left = '-9999px';\n  fakeElem.setAttribute('readonly', '');\n  fakeElem.value = text;\n  fakeElem.select();\n  try {\n    return document.execCommand('copy');\n  } catch (err) {\n    return false;\n  } finally {\n    fakeElem.parentNode.removeChild(fakeElem);\n  }\n})","pinCode":false,"dname":"91e878b6-ee9e-4c77-98a6-662d015619cf","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"params = (new URL(document.baseURI).searchParams)","pinCode":false,"dname":"bfd5bddb-9eb8-4318-b3bd-491d38e67c66","codeMode":"javascript2"}}}],"version":"2.19.1"}