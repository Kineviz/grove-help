{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"_drawing = window.opener._drawing;","pinCode":false,"dname":"192c3a18-c372-43bd-8254-d35203896836","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"_graph = _drawing.graph;","pinCode":false,"dname":"b156df4f-e080-4498-a641-c382866c31d7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"getMainColumnsData = function (selectedCategory, date = false) {\n  let columnsData = { properties: [], columns: [], data: [] };\n  let nodes = getNodesByLabel(selectedCategory);\n  columnsData.properties = extractNodeDataAllKeys(nodes);\n  columnsData.columns = _.reduce(\n    columnsData.properties,\n    (prev, property, index) => {\n      prev.push({ key: property, title: property, dataIndex: property });\n      return prev;\n    },\n    []\n  );\n  //store nodes's id,maybe used for timeline\n  let keysArr = [];\n  columnsData.data = nodes.map((n) => {\n    keysArr[keysArr.length] = n.id;\n    return n.data.detail.data;\n  });\n  columnsData.data.keysArr = keysArr;\n  autoObjectsType(columnsData.data, date);\n  return columnsData;\n}","pinCode":false,"dname":"06eb4b8e-16fb-4ddb-ab80-7a78ce862152","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function getNodesByLabel(label) {\n\treturn _.filter(_graph.nodes, (n) => n.data.detail.type === label);\n}","pinCode":false,"dname":"c247d3d5-6ecc-4187-996d-fe2e8f225aa9","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function extractNodeDataAllKeys(nodes) {\n    let obj = {};\n    _.each(nodes, (n) => {\n        _.each(n.data.detail.data, (value, key) => {\n            if (undefined === obj[key]) {\n                obj[key] = value;\n            }\n        })\n    })\n    return _.keys(obj);\n}","pinCode":false,"dname":"095490ad-7d5e-416c-b92d-828790700bb6","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();","pinCode":false,"dname":"716c739e-c323-48b7-ae12-560329ac0add","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function autoObjectsType(objects, date = false) {\n  let objTypes = calcAutoType(objects, date, false);\n  _.each(objects, (object) => {\n    if (typeof object !== \"object\") {\n      console.error(objects)\n      return;\n    }\n    for (let key in object) {\n      if (typeof object[key] !== 'string') {\n        if (objTypes[key].type === \"date\" && object[key] instanceof Date && !date) {\n          object[key] = object[key].toLocaleString();\n        }\n        continue;\n      }\n      let objType = objTypes[key], value = object[key].trim(), number, m;\n      if (objType.type === \"undefined\" || objType.type === \"null\") {\n        value = undefined;\n      } else if (objType.type === \"boolean\") {\n        if (value === \"true\") {\n          value = true;\n        } else {\n          value = false;\n        }\n      } else if (objType.type === \"number\") {\n        if (value === \"NaN\") {\n          value = NaN;\n        } else if (!isNaN(number = +value)) {\n          value = number;\n        } else {\n          value = NaN;\n        }\n      } else if (date && objType.type === \"date\") {\n        m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/);\n        if (fixtz && !!m[4] && !m[7]) { value = value.replace(/-/g, \"/\").replace(/T/, \" \"); }\n        value = new Date(value);\n      }\n      object[key] = value;\n    }\n  })\n  return objects;\n}\n","pinCode":false,"dname":"f3704282-148c-4fea-a2d3-da9be1f9532e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function calcAutoType(objects, date = false, ignoreBlank = false, transferFuncs) {\n  /**\n   * @type {Object.<string,{type:string}>}\n   */\n  const objTypes = {};\n  if (objects.length === 0) {\n    return objTypes;\n  }\n  /**\n   * \n   * @param {string} key \n   * @param {string} type \n   */\n  function setMaxType(key, type) {\n    if (objTypes[key]) {\n      let oldType = objTypes[key].type;\n      if (oldType === \"string\") {\n        return;\n      }\n      if (type !== oldType) {\n        if (oldType === \"null\" || oldType === \"undefined\") {\n          objTypes[key].type = type;\n        } else if (ignoreBlank && (type === \"null\" || type === \"undefined\")) {\n          objTypes[key].type = oldType;\n        } else {\n          objTypes[key].type = \"string\";\n        }\n      }\n    } else {\n      objTypes[key] = { type };\n    }\n  }\n  _.each(objects, (object, index) => {\n    for (let key in object) {\n      if (undefined === object[key]) {\n        setMaxType(key, \"undefined\");\n        continue;\n      }\n      if (null === object[key]) {\n        setMaxType(key, \"null\");\n        continue;\n      }\n      if (typeof object[key] !== 'string') {\n        setMaxType(key, object[key] instanceof Date ? 'date' : typeof object[key]);\n        continue;\n      }\n      let value = object[key].trim(), number, type, m;\n      if (!value) {\n        type = \"null\";\n      } else if (value === \"true\") {\n        type = \"boolean\";\n      } else if (value === \"false\") {\n        type = \"boolean\";\n      } else if (value === \"NaN\") {\n        type = \"number\";\n      } else if (!isNaN(number = +value)) {\n        type = \"number\";\n      } else if (date && (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/))) {\n        type = \"date\";\n      } else {\n        type = \"string\";\n      }\n      setMaxType(key, type);\n    }\n  })\n  return objTypes;\n}","pinCode":false,"dname":"0e480d11-193e-4fc6-be20-784f2c1774cb","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"getCategories = function () {\n  return _.uniq(_graph.nodes.map((n) => n.data.detail.type));\n}","pinCode":false,"dname":"3a3d9249-1465-473f-9876-e4978dde3cce","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"","pinCode":true,"dname":"9687a138-e1fa-42a4-a0e1-1ba9ccdb1c21","codeMode":"javascript2","syncFile":true,"syncFileKey":"test.csv","variantName":"test","initRead":false}}},{"type":"codeTool","data":{"codeData":{"value":"test.push({a:1,b:2})","pinCode":true,"dname":"e8667813-d66d-42a2-a7e6-6b1d18a969e0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"test.push({a:2323,b:333})","pinCode":true,"dname":"78cdbe5a-fcff-47ac-9796-9e6cb7580bcb","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"test.push({a:555,b:33332222})","pinCode":true,"dname":"6c35c824-09cf-4228-a46f-d70b78770b14","codeMode":"javascript2"}}}],"version":"2.19.1"}