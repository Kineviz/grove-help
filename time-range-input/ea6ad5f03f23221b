{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# Date and Offset Sliders\n\nLets you slide over a range of values.\n\n*In response to [this forum post](https://talk.observablehq.com/t/how-to-modify-existing-inputs/7454).*\n\nUsage:\n~~~js\nimport {offsetInterval} from \"@mootari/offset-slider\"\n~~~\n\n~~~js\nviewof range = offsetInterval(values)\n~~~`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"md`---\n## Example\n\n*For the full list of options see the [\\`interval()\\` documentation](https://observablehq.com/@mootari/range-slider#doc_interval). Note that the options \\`min\\`, \\`max\\` and \\`step\\` are ignored.*`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"dates = (d3.utcDays(d3.utcDay.offset(d3.utcDay(), -30), d3.utcDay()))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"viewof range = (offsetInterval(dates, {\n  label: \"Date range\",\n  formatValue: date => date.toISOString().slice(0, 10),\n  value: [ dates[2], dates[5] ]\n}))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"range","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"viewof range2 = (offsetInterval([\"extra small\", \"small\", \"medium\", \"large\", \"extra large\"], {\n  label: \"Sizes\",\n}))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"range2","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"md`To have full control over the value display specify a \\`format\\` callback. Note that the callback receives the raw unformatted values:`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"offsetInterval(dates, {\n  value: [ dates[10], dates[20] ],\n  format: ([a, b]) => htl.html`<span ${{\n    style: \"display: flex; justify-content: space-between\"\n  }}>\n    <span>${a.toISOString().slice(0, 10)}</span>\n    <span>${b.toISOString().slice(0, 10)}</span>\n  </span>`\n})","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"md`---\n## Implementation`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"offsetInterval = (function offsetInterval(values, {\n  value = [values[0], values[values.length - 1]],\n  formatValue = v => v,\n  format = ([a, b]) => `${formatValue(a)} â€¦ ${formatValue(b)}`,\n  ...options\n} = {}) {\n  if(new Set(values).size < values.length) throw Error(\"All values have to be unique.\");\n  const valueof = i => values[i];\n  const indexof = v => values.indexOf(v);\n  const _format = i => formatValue(valueof(i));\n  const input = interval([0, values.length - 1], {\n    ...options,\n    step: 1,\n    value: value.map(indexof),\n    format: v => format(v.map(valueof)),\n  });\n  return mapInputValue(input, indices => indices.map(valueof), dates => dates.map(indexof));\n})","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"mapInputValue = (function mapInputValue(input, from, to) {\n  return Object.defineProperty(htl.html`<div>${input}`, 'value', {\n    get: () => from(input.value),\n    set: value => input.value = to(value)\n  });\n})","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"import { interval }  from 'time-range-input/b2bbebd2f186ed03'","pinCode":false}}}],"version":"2.19.1"}