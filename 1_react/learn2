{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"# GraphXR API Reference","pinCode":false,"dname":"1fa5c80e-8c35-4404-a880-206910d62ca5","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"The page is some example of Graphxr. If you want check the api you can also visit [GRAPHXR API Reference](https://www.graphxr.dev/graphxr-api/reference)","pinCode":false,"dname":"85776eb0-5b4f-4a5e-a1db-034bcdb08acc","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"CopyComp = component(({ text }) => {\n  const { Button } = Antd;\n  const update_step_number = (d) => {\n    copyContent(text);\n  };\n  return jsx`<span style=${{\n    whiteSpace: \"pre\",\n  }} title=\"Click to Copy the content\" key='ebb25ec6-6935-4887-bbe7-ad2d7da5bdf6' onClick=${update_step_number}  >${\"\\u00A0\\u00A0\\u00A0\"}${text}</span> `;\n})","pinCode":false,"dname":"ae85a424-94dc-49fb-9b6d-373d296bbd07","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n  \tconst {Space , Input, Button } = Antd;\n  \tconst [file2,setFile2] = useState(null);\n    return jsx`<${Space} key='52b21416-74f0-428b-b923-ddf0f0a00fa1' direction=\"vertical\">\n    \t<${Input} type=\"file\" placeholder=\"Basic usage\" file=${file2} label=\"Select a CSV File\" accept=\".csv\" onChange=${(e)=>{\n      \t\tsetFile2(e.target.files[0]);\n    \t}} />\n        ${!!file2 && jsx`<${Button} onClick=${async ()=>{\n    \t\tcsvPlainFile.import(file2, file2.name);\n    \t}}>Click to Import GraphXR</${Button}>`}\n    </${Space}>`;\n})","pinCode":false,"dname":"cbbb7b06-09e8-4edd-a919-deba567e2d42","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"### flyToCenter","pinCode":false,"dname":"8b9dc341-f83b-4132-8a9a-856340364c71","codeMode":"markdown"}}},{"type":"paragraph","data":{"text":"Fly the camera to the center of a slice of nodes, optionally with an offset, optionally with a custom duration or tween function"}},{"type":"codeTool","data":{"codeData":{"value":"viewof flyToCenter_1 = render(({ useSetter }) => {\n  const { Button } = Antd;\n  const update_step_number = (d) => {\n    gxr.flyToCenter();\n  };\n  useSetter({});\n  return jsx`\n    <${Button} key='0b8f1702-e867-42d7-9269-20bb004f559b' onClick=${update_step_number}  >flyToCenter<//>\n   <${CopyComp} text=\"gxr.flyToCenter();\"/> \n     `;\n})","pinCode":false,"dname":"0436671b-12cd-4fc9-8221-f0ab89b7584f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_1 = render(({ useSetter }) => {\n    const { Button } = Antd;\n    const [step_number, setStep_number] = useState(1);\n    const update_step_number = (d) => {\n    \tgxr.flyToCenter(gxr.nodes().slice(0, 10).ids())\n    }\n    useSetter({ step_number });\n    return jsx`\n\n    <${Button} key='7357a159-86db-4354-88dd-9e1f64672d11' onClick=${update_step_number}  >flyToCenter<//> \n<${CopyComp} text=\"gxr.flyToCenter(gxr.nodes().slice(0, 10).ids())\"/>    \n    `;\n})","pinCode":false,"dname":"84c265b0-f84c-4310-b4dc-ec78212aafa8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n    const { Button } = Antd;\n    const [step_number, setStep_number] = useState(1);\n    const update_step_number = (d) => {\n\t\tgxr.flyToCenter(gxr.nodes().slice(0, 10).ids(), { duration: 0, offset: -3 });\n    }\n    useSetter({ step_number });\n    return jsx`\n    <${Button} key='7357a159-86db-4354-88dd-9e1f64672d12' onClick=${update_step_number}  >flyToCenter<//> \n    <${CopyComp} text=\"gxr.flyToCenter(gxr.nodes().slice(0, 10).ids(), { duration: 0, offset: -3 });\"/>`;\n})","pinCode":false,"dname":"1a6da119-d70e-4b33-8702-1a12261d97dc","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"### flyToPosition","pinCode":false,"dname":"9e4367c7-cc8c-4f4d-ab0c-79b27084f5f1","codeMode":"markdown"}}},{"type":"paragraph","data":{"text":"const position = gxr.nodes({name: \"Flo\"}).at(0).position;"}},{"type":"codeTool","data":{"codeData":{"value":"viewof flyToPosition_1 = render(({ useSetter }) => {\n    const { Button } = Antd;\n    const [step_number, setStep_number] = useState(1);\n    const update_step_number = (d) =>{\n    \tconst position = gxr.nodes({name: \"Flo\"}).at(0).position;\n        gxr.flyToPosition(position); // no offset\n    };\n    useSetter({ step_number });\n    return jsx`<${Button} key='987e9f35-eb2f-43df-bdfb-9fa35b08e217' onClick=${update_step_number}  >flyToPosition<//> \n    <${CopyComp} text=\"gxr.flyToPosition(position); // no offset\"/>\n    `;\n})","pinCode":false,"dname":"48589fca-4c2e-4e60-95a2-4b2b5ef34d55","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof flyToPosition_2 = render(({ useSetter }) => {\n    const { Button } = Antd;\n    const [step_number, setStep_number] = useState(1);\n    const update_step_number = (d) =>{\n    \tconst position = gxr.nodes({name: \"Flo\"}).at(0).position;\n        gxr.flyToPosition(position, {offset: -3}); // with an offset\n    };\n    useSetter({ step_number });\n    return jsx`<${Button} key='b0fde511-b5da-42e2-9440-5e02a9191c57' onClick=${update_step_number}  >flyToPosition<//>\n    <${CopyComp} text=\"gxr.flyToPosition(position, {offset: -3}); // with an offset\"/>`;\n})","pinCode":false,"dname":"ad8e1ad2-774d-4e57-a7cb-eb3fc8a5b082","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_2 = render(({ useSetter }) => {\n    const { Button } = Antd;\n    const [step_number, setStep_number] = useState(1);\n    const update_step_number = (d) =>{\n    \tconst position = gxr.nodes({name: \"Flo\"}).at(0).position;\n        gxr.flyToPosition(position, {duration: 0}); // instantly\n    };\n    useSetter({ step_number });\n    return jsx`<${Button} key='54cbfdec-687f-42a2-be23-8782c3d693cd' onClick=${update_step_number}  >flyToPosition<//>\n    <${CopyComp} text=\"gxr.flyToPosition(position, {duration: 0}); // instantly\"/>\n    `;\n})","pinCode":false,"dname":"fa8062bf-b97e-4af4-abf6-438a94973f2d","codeMode":"javascript2"}}},{"type":"header","data":{"text":"flyOut<a href=\"https://www.graphxr.dev/graphxr-api/reference#flyout\"></a>","level":3}},{"type":"paragraph","data":{"text":"Zoom out until all nodes are visible"}},{"type":"codeTool","data":{"codeData":{"value":"viewof flyOut_1 = render(({ useSetter }) => {\n    const { Button } = Antd;\n    const [step_number, setStep_number] = useState(1);\n    const update_step_number = (d) => {\n    \tgxr.flyOut();\n    }\n    useSetter({ step_number });\n    return jsx`<${Button} key='f629a239-cc6f-4c1b-81e8-096e49aa6610' onClick=${update_step_number}  >flyOut<//>\n    <${CopyComp} text=\"gxr.flyOut();\"/>\n    `;\n})\n","pinCode":false,"dname":"acae4c4a-a200-4f7c-87fc-afcf50db06ee","codeMode":"javascript2"}}},{"type":"header","data":{"text":"setCameraOptions","level":3}},{"type":"codeTool","data":{"codeData":{"value":"viewof setCameraOptions_1 = render(({ useSetter }) => {\n    const { Button } = Antd;\n    const [step_number, setStep_number] = useState(1);\n    const update_step_number = (d) => {\n      gxr.setCameraOptions({\n        hideAxes: true,\n        rotating: true,\n        speed: 0.5,\n      });\n    };\n    useSetter({ step_number });\n    return jsx`<${Button} key='a80f9c4b-60b6-4404-8c24-d31e1b34480d' onClick=${update_step_number}  >setCameraOptions<//> \n    <${CopyComp} text=${`gxr.setCameraOptions({\n        hideAxes: true,\n        rotating: true,\n        speed: 0.5,\n      });`}/>\n    `;\n})","pinCode":false,"dname":"70fece96-72fb-40bc-95dd-93366dbe13dc","codeMode":"javascript2"}}},{"type":"header","data":{"text":"setCameraRotating","level":3}},{"type":"codeTool","data":{"codeData":{"value":"viewof switch_1 = render(({ useSetter }) => {\n  const { Switch } = Antd;\n  const onChange = (checked) => {\n    gxr.setCameraRotating(checked);\n  };\n  return jsx`<${Fragment} key='9c07e505-02ee-4ea7-bd8f-4ead631e3d1d'>\n    setCameraRotating<${Switch} defaultChecked onChange=${onChange} />\n    <${CopyComp} text='gxr.setCameraRotating(true);' />\n  <//>`\n})","pinCode":false,"dname":"b6037f47-6c04-4088-8a52-7d5423295570","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Captions","level":2}},{"type":"header","data":{"text":"captionNodesByProperties","level":3}},{"type":"codeTool","data":{"codeData":{"value":"categories = listMainCategories();","pinCode":false,"dname":"a1287764-08c2-4c53-823e-91ac55b75bc2","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"selectCategory","pinCode":false,"dname":"d3bf17c3-4006-4368-8fde-bb5041b01d09","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof selectCategory = render(({ useSetter }) => {\n  const { Select } = Antd;\n  const [category, setCategory] = useState(categories[0]);\n  const [mainDatas, setMainDatas] = useState(selectMainDatas(category));\n  const [properties, setProperties] = useState(mainDatas.properties);\n  const handleChange = (value) => {\n    setCategory(value);\n    let tmp = selectMainDatas(value);\n    setMainDatas(tmp);\n    setProperties(tmp.properties)\n  };\n  useSetter({ category, mainDatas, properties });\n  return jsx`<div className=\"d-flex align-items-center\" key='be5ecb0c-30d5-4ebc-87f1-0a4eaa363c57'>Select Category: <${Select}\n                        value=${category}\n                        style=${{ width: 120 }}\n                        onChange=${handleChange}\n                        options=${_.map(categories, (l) => {\n                          return { label: l, value: l };\n                        })} />\n           Select Properties:  <${Select}\n      mode=\"multiple\"\n      allowClear\n      style=${{ width: \"200px\" }}\n      placeholder=\"Please select\"\n      value=${properties}\n      onChange=${(value) => {\n        setProperties(value);\n      }}\n      options=${_.map(mainDatas.properties, (l) => {\n        return { label: l, value: l };\n      })}\n    /></div>\n           `;\n})","pinCode":false,"dname":"e19522dc-2626-4a63-a7f1-7fbb9d64721f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button = render(({ useSetter }) => {\n    const { Button } = Antd;\n    const [step_number, setStep_number] = useState(1);\n    const update_step_number = (d) => {\n    \tgxr.captionNodesByProperties({category: selectCategory.category, properties: selectCategory.properties});\n    }\n    useSetter({ step_number });\n    return jsx`<${Button} key='9467f027-385e-43ca-9546-14dc667c1655' onClick=${update_step_number}  >captionNodesByProperties<//><${CopyComp} text='gxr.captionNodesByProperties({category: \"${selectCategory.category}\", properties: ${JSON.stringify(selectCategory.properties)}});' /> `;\n})","pinCode":false,"dname":"0356f4fd-68c5-4ec1-8ab7-05e0ad07727d","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Events<a href=\"https://www.graphxr.dev/graphxr-api/reference#events\"></a>","level":2}},{"type":"header","data":{"text":"onGraphDataUpdate","level":3}},{"type":"codeTool","data":{"codeData":{"value":"render(({})=>{\n\treturn jsx`<${CopyComp} text='gxr.onGraphDataUpdate(() => console.log(\"Graph data updated\"));' />`\n})\n","pinCode":false,"dname":"3f7bdea9-5188-41b6-b252-645ac074f714","codeMode":"javascript2"}}},{"type":"header","data":{"text":"onSelect","level":3}},{"type":"codeTool","data":{"codeData":{"value":"render(({})=>{\n\treturn jsx`<${CopyComp} text='gxr.onSelect((event) => console.log(\"Selected nodes/edges\", event));' />`\n})\n","pinCode":false,"dname":"34fd15c8-7e73-4a2e-a836-4f4ff85ffc12","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Graph<a href=\"https://www.graphxr.dev/graphxr-api/reference#graph\"></a>","level":2}},{"type":"header","data":{"text":"add<a href=\"https://www.graphxr.dev/graphxr-api/reference#add\"></a>","level":3}},{"type":"paragraph","data":{"text":"Add nodes and edges to the graph."}},{"type":"codeTool","data":{"codeData":{"value":"viewof add_select = render(({ useSetter }) => {\n  const { Select, Button } = Antd;\n  const [value,setValue] = useState(null);\n  const handleChange = (value) => {\n    setValue(value);\n  };\n  useSetter({});\n  return jsx`<div key='93c87777-89b6-4764-bdd2-cade8d3a2769'> <${Select}\n                        value=${value}\n                        style=${{ width: 300 }}\n                        onChange=${handleChange}\n                        options=${\n_.reduce(`  gxr.add(\"A\") //-> Node with id \"A\"\n  gxr.add(\"A\", \"B\") //-> Edge\n  gxr.add([\"A\", \"B\"]) // -> Node[]\n  gxr.add({ id: \"A\", category: \"Person\", properties: {name: \"Flo\"} }) //-> Node\n  gxr.add([{ id: \"A\", category: \"Person\", properties: {name: \"Flo\"} }, { id: \"B\", category: \"Person\", properties: {name: \"EVE\"} }])// -> Node[]\n  gxr.add({ sourceId: \"A\", targetId: \"B\" }) //-> Edge\n  gxr.add([{ sourceId: \"A\", targetId: \"B\" }]) //-> Edge[]\n  gxr.add([{ source: {...}, edge: {...}, target: {...} }], {...}) //-> Edge[] // mergeRelationships\n  gxr.add({ name: \"Flo\" }, { category: \"Person\" }) //-> Node\n  gxr.add([{ name: \"Flo\" }], { category: \"Person\" }) //-> Node[]\n  gxr.add([{ name: \"Flo\" }]) //-> Node[]\n  gxr.add({ id: \"A\" }, { id: \"B\" }) //-> Edge\n  gxr.add({ id: \"A\" }, { id: \"B\" }, { relationship: \"LINK\" }) //-> Edge with relationship \"LINK\" `.split(\"\\n\"),(p,o,i)=>{p.push({value:o,label:o});return p;},[])\n}\n                      />\n <${CopyComp} text='${value}'/> <${Button} onClick=${()=>{\n  eval(value);\n  }} >RUN</${Button}> </div>`;\n})","pinCode":false,"dname":"39d1ab6c-cc8c-43f1-9353-e90c04322d72","codeMode":"javascript2"}}},{"type":"header","data":{"text":"clear<a href=\"https://www.graphxr.dev/graphxr-api/reference#clear\"></a>","level":3}},{"type":"paragraph","data":{"text":"Clear the graph"}},{"type":"codeTool","data":{"codeData":{"value":"viewof clear_1 = render(({ useSetter }) => {\n    const { Button } = Antd;\n    const [step_number, setStep_number] = useState(1);\n    const update_step_number = (d) => {\n    \tgxr.clear();\n    };\n    useSetter({ step_number });\n    return jsx`Clear the graph <${Button} key='38fc3236-3063-4b1a-9eb5-7258fa9eb90c' onClick=${update_step_number}  >clear<//> `;\n})","pinCode":false,"dname":"e46ab1b4-0fff-4c0d-a194-15a625bd1cca","codeMode":"javascript2"}}},{"type":"header","data":{"text":"edges","level":3}},{"type":"codeTool","data":{"codeData":{"value":"viewof edges_select = render(({ useSetter }) => {\n  const { Select, Button } = Antd;\n  const [value,setValue] = useState(null);\n  const handleChange = (value) => {\n    setValue(value);\n  };\n  useSetter({});\n  return jsx`<div key='93c87777-89b6-4764-bdd2-cade8d3a2762'> <${Select} \n                        value=${value}\n                        style=${{ width: 300 }}\n                        onChange=${handleChange}\n                        options=${\n_.reduce(`gxr.edges().forEach(console.log);\ngxr.edges().property('since', 2023);\ngxr.edges().property('since', () => Math.random() * 3000);\ngxr.edges().style('width', 10)\ngxr.edges({relationship: 'LINKS'}).style('width', 10);\ngxr.edges({properties: {since: 2023}}).style('width', 10);`.split(\"\\n\"),(p,o,i)=>{p.push({value:o,label:o});return p;},[])\n}\n                      />\n <${CopyComp} text='${value}'/> <${Button} onClick=${()=>{\n  eval(value);\n  }} >RUN</${Button}> </div>`;\n})","pinCode":false,"dname":"ea325c33-517d-4660-8eeb-bee5554dc1a6","codeMode":"javascript2"}}},{"type":"header","data":{"text":"getCategoryConfig","level":3}},{"type":"codeTool","data":{"codeData":{"value":"category.categoryConfig","pinCode":false,"dname":"555f80a3-6b88-4e2f-89bc-37506be17f90","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof category = render(({ useSetter }) => {\n  const { Select, Button } = Antd;\n  const [category, setCategory] = useState(categories[0]);\n  const [categoryConfig, setCategoryConfig] = useState(null);\n  const handleChange = (value) => {\n    setCategory(value);\n    setCategoryConfig( value ?gxr.getCategoryConfig(value):null);\n  };\n  useSetter({ category, categoryConfig });\n  return jsx`<div className=\"d-flex align-items-center\" key='f276634f-b618-4863-ae7f-1396603f5c69'>Select Category: <${Select}\n  allowClear\n                        value=${category}\n                        style=${{ width: 120 }}\n                        onChange=${handleChange}\n                        options=${_.map(categories, (l) => {\n                          return { label: l, value: l };\n                        })} />\n                        <${CopyComp} text=\"gxr.getCategoryConfig('${category}');\"/>\n            </div>\n           `;\n})","pinCode":false,"dname":"ab7373fd-6dc3-4acf-9dce-2e8c3b02b6e7","codeMode":"javascript2"}}},{"type":"header","data":{"text":"getNode","level":3}},{"type":"codeTool","data":{"codeData":{"value":"getNode_1.node","pinCode":false,"dname":"1b50f7c6-2b4f-4b77-b5e6-88738d760f6d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof getNode_1 = render(({ useSetter }) => {\n    const { Button, Input, Space } = Antd;\n    const [value, setValue] = useState(gxr.nodes().array[0]?.id);\n  \tconst [node,setNode] = useState(null);\n    const update_step_number = (d) => {\n    \tsetNode(gxr.getNode(value));\n    };\n    useSetter({ node  });\n    return jsx`<${Space} direction=\"horizontal\" key='f8f6ae2e-fa0c-46b1-b122-5284adf05e3a' >\n    <${Button} onClick=${(e)=>{\n      \tlet arr = gxr.nodes().array;\n    \tsetValue(arr[parseInt(Math.random()*arr.length)]?.id)\n    }}  >Get random node ID<//>\n    \n    <${Input} placeholder=\"type node ID\" allowClear value=${value} onChange=${(e)=>{setValue(e.target.value)}} ></${Input}>\n    <${Button} onClick=${update_step_number}  >Get Node<//>\n    <${Button} onClick=${()=>{\n    \tgxr.nodes(value).style(\"selected\", true);\n    }}  >Select the Node<//>\n    \n    \n    \n    </${Space}>`;\n})","pinCode":false,"dname":"1ddb5dda-5179-4fad-a542-f31ad5b4e638","codeMode":"javascript2"}}},{"type":"header","data":{"text":"getRelationshipConfig","level":3}},{"type":"codeTool","data":{"codeData":{"value":"getMainEdges = function () {\n  return _.uniq(_drawing.graph.edges?.map((n) => n.name));\n}","pinCode":false,"dname":"38cfd465-496f-46ee-bc27-9bbafa560e2a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"gxr.getRelationshipConfig(relationshipConfig.value);","pinCode":false,"dname":"da2543a2-4d95-4ce6-a9ea-b929c1183c08","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof relationshipConfig = render(({ useSetter }) => {\n  const { Select, Button } = Antd;\n  const [options, setOptions] = useState(\n    _.reduce(\n      getMainEdges(),\n      (p, e, i) => {\n        p.push({ label: e, value: e });\n        return p;\n      },\n      []\n    )\n  );\n  const [value,setValue] = useState(options[0]?.value);\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setValue(value);\n  };\n  useSetter({value});\n  return jsx`<div key='a0d36072-e8e9-4a5c-96b9-7127a6a97518'>\n  \t\t<${Select} \n        value=${value}\n        style=${{ width: 120 }}\n        onChange=${handleChange}\n        onDropdownVisibleChange=${(open) => {\n          if (!open) {\n            return;\n          }\n    \t  setOptions(_.reduce(\n      getMainEdges(),\n      (p, e, i) => {\n        p.push({ label: e, value: e });\n        return p;\n      },\n      []\n    ))\n        }}\n        options=${options}\n    /> \n    <${CopyComp} text='gxr.getRelationshipConfig(\"${value}\");' />\n    \n    \n    </div>`;\n})","pinCode":false,"dname":"4bc2df2b-778a-4449-9673-c46de3abc9b1","codeMode":"javascript2"}}},{"type":"header","data":{"text":"graph","level":3}},{"type":"codeTool","data":{"codeData":{"value":"viewof graph_1 = render(({ useSetter }) => {\n    const { Button,Input,Space } = Antd;\n    const [value, setValue] = useState(\"A\");\n    useSetter({ value });\n    return jsx`<${Space} direction=\"horizontal\" key='09fa7b69-c9eb-42d4-9e7f-cb0cc25bb4ff' >\n    <${Input} placeholder=\"type node ID\" allowClear value=${value} onChange=${(e)=>{setValue(e.target.value)}} ></${Input}>\n    <${Button}  onClick=${(d) => {\n    \tgxr.graph().add(value);\n    }}  >RUN<//><${CopyComp} text='${`// Add a node with id \"${value}\"\ngxr.graph().add(\"${value}\");`}' />\n    \n    </${Space}>`;\n})","pinCode":false,"dname":"2ba0b0fb-72b1-4756-8ca5-34b4d616dfc0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"graph_2.nodes","pinCode":false,"dname":"d7ce0a81-b669-49b9-be21-5baf323e52c6","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof graph_2 = render(({ useSetter }) => {\n    const { Button, Input, Space } = Antd;\n  \tlet arr = gxr.nodes().array;\n    const [source, setSource] = useState(arr[parseInt(Math.random()*arr.length)]?.id);\n  \tconst [target, setTarget] = useState(arr[parseInt(Math.random()*arr.length)]?.id);\n  \tconst [nodes,setNodes] = useState(null);\n    const update_step_number = (d) => {\n    \t// Select nodes in shortest path from A -> B, including A and B\ngxr.graph().shortestPath(source, target).nodes().select()\n      setNodes(gxr.graph().shortestPath(source, target).nodes())\n    };\n    useSetter({ nodes });\n    return jsx`<${Space} direction=\"horizontal\" key='310ff0af-14be-4cf4-bfae-89f8f503117a' >\n    <${Button} onClick=${(e)=>{\n      \tlet arr = gxr.nodes().array;\n    \tsetSource(arr[parseInt(Math.random()*arr.length)]?.id)\n      \tsetTarget(arr[parseInt(Math.random()*arr.length)]?.id)\n      \tgxr.nodes([source,target]).style(\"selected\", true);;\n    }}  >Get random node ID<//>\n    source:<${Input} placeholder=\"type node ID\" allowClear value=${source} onChange=${(e)=>{setSource(e.target.value)}} ></${Input}>\n    target:<${Input} placeholder=\"type node ID\" allowClear value=${target} onChange=${(e)=>{setTarget(e.target.value)}} ></${Input}>\n    <${Button} onClick=${update_step_number}  >Select Nodes<//>\n    </${Space}>`;\n})","pinCode":false,"dname":"3537639b-c6f8-4f44-b10f-15066a7c404f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof graph_3 = render(({ useSetter }) => {\n    const { Button } = Antd;\n    const update_step_number = (d) => {\n    \t// Generate a random graph, run degree algorithm, and then run ego layout for a duration of 1 second.\ngxr\n  .graph()\n  .clear()\n  .generate()\n  .degree()\n  .ego(\n    {\n      properties: { degree: (value) => value >= 3 },\n      depth: 5,\n      mode: \"tree\",\n      orientation: \"down\",\n      edgeLength: 0.5,\n      sortByProperty: \"degree\",\n    },\n    { duration: 1000 }\n  );\n    };\n    useSetter({ });\n    return jsx`<${Button} key='77ed806f-5964-489d-b946-766c1f74f307' onClick=${update_step_number}  >Generate a random graph<//> `;\n})","pinCode":false,"dname":"4384f955-d039-4051-977f-6c3408ecaf23","codeMode":"javascript2"}}},{"type":"header","data":{"text":"makeGraph","level":3}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_6 = render(({ useSetter }) => {\n    const { Button } = Antd;\n    const [step_number, setStep_number] = useState(1);\n    const update_step_number = (d) => {\n    \tgxr.makeGraph().add(\"A\").add(\"B\").add(\"C\").add(\"A\", \"B\").add(\"B\", \"C\").add(\"C\", \"A\");\n    };\n    useSetter({ step_number });\n    return jsx`<${Button} key='4fd10fcb-0995-488a-b50f-e9c670a016c1' onClick=${update_step_number}  >makeGraph<//> `;\n})","pinCode":false,"dname":"2d01dc66-5851-48a9-8cc2-088ec1e7de29","codeMode":"javascript2"}}},{"type":"header","data":{"text":"nodes","level":3}},{"type":"codeTool","data":{"codeData":{"value":"viewof nodes_1 = render(({ useSetter }) => {\n    const { Button, Space } = Antd;\n    const update_step_number = (d) => {\n    \tgxr.nodes()\n    };\n    useSetter({ });\n    return jsx`<${Space} key='6559a9cf-464a-4418-8be4-6c53668cbd2d'><${Button} onClick=${update_step_number}  >RUN<//><${CopyComp} text=\"gxr.nodes()\" /> </${Space}>`;\n})","pinCode":false,"dname":"1bd5d5e4-660c-400c-ae67-daf528de56ee","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof nodes_2 = render(({ useSetter }) => {\n    const { Button, Space } = Antd;\n    const update_step_number = (d) => {\n    \tgxr.nodes()\n    };\n    useSetter({ });\n    return jsx`<${Space} key='dc592a1d-1a79-41ff-af40-644da1fbbc10'><${Button} onClick=${update_step_number}  >RUN<//><${CopyComp} text=\"gxr.nodes()\" /> </${Space}>`;\n})","pinCode":false,"dname":"ba544575-b42e-445e-a56d-fa06020c5fbc","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof nodes_4 = render(({ useSetter }) => {\n    const { Button, Space,Select,Switch } = Antd;\n  \tconst [select,setSelect] = useState(true);\n  \tconst [category,setCategory] = useState(categories[0])\n    const update_step_number = (d) => {\n    \tgxr.nodes({category: category}).style('selected', select);\n    };\n    useSetter({ });\n    return jsx`<${Space} key='aa7149f4-616b-4dbc-8d49-083280821899'>\n    <${Switch} checked=${select} onChange=${(checked)=>{\n    \tsetSelect(checked);\n    }} />\n    Select Category: <${Select}\n  allowClear\n                        value=${category}\n                        style=${{ width: 120 }}\n                        onChange=${(value)=>{\n    \tsetCategory(value)\n    }}\n                        options=${_.map(categories, (l) => {\n                          return { label: l, value: l };\n                        })} />\n    \n    \n    <${Button} onClick=${update_step_number}  >RUN<//><${CopyComp} text=\"gxr.nodes({category: '${category}'}).style('selected', ${select});\" /> </${Space}>`;\n})","pinCode":false,"dname":"02f28836-e278-4a78-9c1d-00c13519c1b1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"gxr.nodes({category: \"Person\"})","pinCode":true,"dname":"460266c3-939f-4472-b429-b7b710b54796","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"gxr.nodes({properties: {age: 24}})","pinCode":true,"dname":"0df42a9d-7bda-45b6-94ae-4f7162bf8b29","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"gxr.nodes(\"LZ6VYF3GW33JL\")","pinCode":true,"dname":"9a1c8a14-e1ff-4446-9be4-1c4f034aa325","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"gxr.nodes([\"LZ6VYF3GW33JL\"])","pinCode":true,"dname":"f2b45a51-693a-4651-b3b6-9890913588b7","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Settings","level":2}},{"type":"header","data":{"text":"setTipsEnabled","level":3}},{"type":"codeTool","data":{"codeData":{"value":"viewof setTipsEnabled = render(({ useSetter }) => {\n  const { Switch, Space } = Antd;\n  const [step_number, setStep_number] = useState(false);\n  const update_step_number = (checked) => {\n    setStep_number(checked);\n    gxr.setTipsEnabled(checked);\n  };\n  useSetter({ step_number });\n  return jsx`<${Space} key='6905b689-24e4-47ec-9214-51b28fbdcedc'><${Switch} checked=${step_number} onChange=${update_step_number} /> <${CopyComp} text=\"gxr.setTipsEnabled(${step_number});\" /> </${Space}>`;\n})","pinCode":false,"dname":"e3ae1e99-0388-47f5-8e08-589d07596580","codeMode":"javascript2"}}},{"type":"header","data":{"text":"setAutoShowImage","level":3}},{"type":"codeTool","data":{"codeData":{"value":"viewof setAutoShowImage = render(({ useSetter }) => {\n  const { Switch, Space } = Antd;\n  const [step_number, setStep_number] = useState(false);\n  const update_step_number = (checked) => {\n    setStep_number(checked);\n    gxr.setAutoShowImage(checked);\n  };\n  useSetter({ step_number });\n  return jsx`<${Space} key='79786a24-6e1c-454f-ac91-f07bccf4a95b'>\n    <${Switch} checked=${step_number} onChange=${update_step_number} /> \n    <${CopyComp} text=\"gxr.setAutoShowImage(${step_number});\" /> \n  </${Space}>`;\n})","pinCode":false,"dname":"8f0d5eb7-1178-452e-8405-af0925564236","codeMode":"javascript2"}}},{"type":"header","data":{"text":"setEdgeScale","level":3}},{"type":"codeTool","data":{"codeData":{"value":"viewof setEdgeScale = render(({ useSetter }) => {\n  const { Switch, Space, InputNumber, Slider } = Antd;\n  const [step_number, setStep_number] = useState(0.5);\n  useSetter({ step_number });\n  return jsx`<${Space} key='8d96fe37-69fc-4263-8342-fe2081ff1b9d'>\n  <${Slider}\n  style=${{width:200}}\n          min=${0}\n          max=${1}\n          onChange=${(value) => {\n            if (isNaN(value)) {\n              return;\n            }\n            setStep_number(value);\n            gxr.setEdgeScale(value);\n          }}\n          value=${typeof step_number === \"number\" ? step_number : 0}\n          step=${0.01}\n        />\n  <${InputNumber}\n          min=${0}\n          max=${1}\n          style=${{ margin: \"0 16px\" }}\n          step=${0.01}\n          value=${step_number}\n          onChange=${(value) => {\n            if (isNaN(value)) {\n              return;\n            }\n            setStep_number(value);\n            gxr.setEdgeScale(value);\n          }}\n        />\n  <${CopyComp} text=\"gxr.setEdgeScale(${step_number});\" /> </${Space}>`;\n})","pinCode":false,"dname":"6d6f0015-62b1-4801-979d-4e183fc0eb00","codeMode":"javascript2"}}},{"type":"header","data":{"text":"setFullscreen","level":3}},{"type":"codeTool","data":{"codeData":{"value":"viewof setFullscreen_1 = render(({ useSetter }) => {\n  const { Switch, Space } = Antd;\n  const [step_number, setStep_number] = useState(false);\n  const update_step_number = (checked) => {\n    setStep_number(checked);\n    gxr.setFullscreen(checked);\n  };\n  useSetter({ step_number });\n  return jsx`<${Space} key='be085af9-df55-434d-9c90-bac8ff6d2e93'><${Switch} checked=${step_number} onChange=${update_step_number} /> <${CopyComp} text=\"gxr.setFullscreen(${step_number});\" /> </${Space}>`;\n})","pinCode":false,"dname":"055ac2b0-5d23-4679-8ac0-e09e1c1801f8","codeMode":"javascript2"}}},{"type":"header","data":{"text":"setPinIconVisible","level":3}},{"type":"codeTool","data":{"codeData":{"value":"viewof setPinIconVisible = render(({ useSetter }) => {\n  const { Switch, Space } = Antd;\n  const [step_number, setStep_number] = useState(true);\n  const update_step_number = (checked) => {\n    setStep_number(checked);\n    gxr.setPinIconVisible(checked);\n  };\n  useSetter({ step_number });\n  return jsx`<${Space} key='381e22ee-9be6-4976-8b05-bd56bf58e8c8'><${Switch} checked=${step_number} onChange=${update_step_number} /> <${CopyComp} text=\"gxr.setPinIconVisible(${step_number});\" /> </${Space}>`;\n})","pinCode":false,"dname":"680b2d54-346a-4dab-a28f-b1ff254148b1","codeMode":"javascript2"}}},{"type":"header","data":{"text":"setTheme","level":3}},{"type":"codeTool","data":{"codeData":{"value":"viewof setTheme = render(({ useSetter }) => {\n  const { Switch, Space } = Antd;\n  const [step_number, setStep_number] = useState(true);\n  const update_step_number = (checked) => {\n    setStep_number(checked);\n    gxr.setTheme(checked?\"light\":\"dark\");\n  };\n  useSetter({ step_number });\n  return jsx`<${Space} key='ee6bf8e9-4ef3-4889-a7b8-6ee6602d5c7f'><${Switch} checkedChildren=${jsx`<span className=\"icon fas fa-lightbulb\"></span>`} unCheckedChildren=${jsx`<span className=\"icon fas fa-moon\"></span>`} checked=${step_number} onChange=${update_step_number} /> <${CopyComp} text=\"gxr.setTheme('${step_number?\"light\":\"dark\"}');\" /> </${Space}>`;\n})","pinCode":false,"dname":"f7f2f9a8-945e-42d5-b485-183c3cfdf3a7","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Styles","level":2}},{"type":"header","data":{"text":"colorNodesByProperty","level":3}},{"type":"codeTool","data":{"codeData":{"value":"viewof selectCategory_1 = render(({ useSetter }) => {\n  const { Select, Space, Button } = Antd;\n  const [category, setCategory] = useState(categories[0]);\n  const [mainDatas, setMainDatas] = useState(selectMainDatas(category));\n  const [property, setProperty] = useState(mainDatas.properties[0]);\n  const handleChange = (value) => {\n    setCategory(value);\n    let tmp = selectMainDatas(value);\n    setMainDatas(tmp);\n    setProperty(tmp.properties);\n  };\n  const update_step_number = (d) => {\n    gxr.colorNodesByProperty({property: property});\n  };\n  useSetter({ category, mainDatas, property });\n  return jsx`<${Space} className=\"align-items-center\" direction=\"horizonal\" key='99adffba-3f01-4520-ac97-6781636d4039'>Select Category: <${Select}\n                        value=${category}\n                        style=${{ width: 120 }}\n                        onChange=${handleChange}\n                        options=${_.map(categories, (l) => {\n                          return { label: l, value: l };\n                        })} />\n           Select Properties:  <${Select}\n      mode=\"single\"\n      allowClear\n      style=${{ width: \"200px\" }}\n      placeholder=\"Please select\"\n      value=${property}\n      onChange=${(value) => {\n        setProperty(value);\n      }}\n      options=${_.map(mainDatas.properties, (l) => {\n        return { label: l, value: l };\n      })}\n    />\n    <${Button} onClick=${update_step_number}>RUN<//>\n    <${CopyComp} text=\"gxr.colorNodesByProperty({property: '${property}'});\" /> \n    </${Space}>\n           `;\n})","pinCode":false,"dname":"4fe35684-db8f-465b-84ec-bf99e9e6e79c","codeMode":"javascript2"}}},{"type":"header","data":{"text":"getIcons","level":3}},{"type":"paragraph","data":{"text":"Get a list of available icons"}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_3 = render(({ useSetter }) => {\n    const { Button } = Antd;\n    const [step_number, setStep_number] = useState(1);\n    const update_step_number = (d) => setStep_number(step_number+1);\n    useSetter({ step_number });\n    return jsx`<${Button} key='4bca07e9-76bd-4d98-9bc4-4e00614eec74' onClick=${update_step_number}  >Click Me<//> `;\n})","pinCode":true,"dname":"bea6fd7a-9d2c-48d5-bf85-39a8d5445b2d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import {jsx, render, useState, component, useEffect, Fragment } from \"https://grove-help.graphxr.com/react/react\"","pinCode":true,"dname":"81964304-1f9c-4ad1-bea2-323e7a254f2a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import { csvPlainFile } from \"https://grove-help.graphxr.com/1_graphxr/ImportCsvToGraph\"","pinCode":true,"dname":"309bceaa-b689-4ddc-b2d9-a1740e51b46c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import { alert } from \"https://grove-help.graphxr.com/1_react/learn\"","pinCode":true,"dname":"d5255b0f-c0bf-4b3b-9aa5-85a18f5ec594","codeMode":"javascript2"}}}],"version":"2.19.1"}