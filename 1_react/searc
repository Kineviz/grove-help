{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"_.keys(test$csv[0])","pinCode":false,"dname":"67236410-1686-4d06-88a3-8a4e92910ce9","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"search","pinCode":true,"dname":"d1ac3008-2824-4efd-a64f-edb9d9855495","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof search = render(({ useSetter })=>{ \n  const { Radio, Tabs, Space, Button, DatePicker } = Antd;\n  const [ modeId, setModeId ] = useState(_.keys(modes)[1]);\n  const [ period, setPeriod  ] = useState(periods[2]);\n  const [ dateRange, setDateRange ] = useState(getDateRange(period));\n  const [ searchText, setSearchText ] = useState(\"\");\n  const [ advanced, setAdvanced ] = useState({})\n  const { RangePicker } = DatePicker;\n  const onChange = (e) => {\n    setPeriod(e.target.value);\n    setDateRange(getDateRange(e.target.value));\n  };\n  const onChangeDateRange = (dates, dateStrings) => {\n    if (dates) {\n      console.log('From: ', dates[0], ', to: ', dates[1]);\n      console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n      setDateRange(dateStrings)\n    } else {\n      console.log('Clear');\n    }\n  };\n  useSetter({ dateRange, modeId, searchText, advanced })\n  return  jsx`\n  <div className='${ results&&results.length ? \"\" : \"hide\" }'>\n  \t<${ResultsComp} ...${{ period, dateRange, modeId, searchText, advanced }} />\n  </div>\n  <${Space} style=${{width:\"100%\"}} direction=\"vertical\" size=\"middle\" className='${ results&&results.length ? \"hide \" : \"\"}'>\n      <${Radio.Group} onChange=${onChange} value=${period}>\n       ${_.map(periods ,(o,i)=>{\n          return jsx`<${Radio} value=${o}>${o}<//>`\n        }) }\t\n      <//>\n      ${period === periods[periods.length-1] && \n        jsx`<${RangePicker} ranges=${{\n            Today: [moment(), moment()],\n    \t\t'This Week': [moment().startOf('week'), moment().endOf('week')],\n            'This Month': [moment().startOf('month'), moment().endOf('month')],\n    \t\t'This Year': [moment().startOf('year'), moment().endOf('year')],\n          }} value=${[moment(dateRange[0],dateFormat), moment(dateRange[1],dateFormat)]}\n          format=${dateFormat} onChange=${onChangeDateRange} />`\n\t  }\n      <${Tabs}\n        activeKey=${modeId}\n        type=\"card\"\n        size=${'small'}\n        onChange=${(activeKey)=>{\n  \t\t\tsetModeId(activeKey);\n  \t\t}}\n      >\n          <${Tabs.TabPane} tab=\"Basic\" key='basic'>\n            <${BasicComponent} useSetter=${(searchText)=>{ setSearchText(searchText) }} />\n          <//>\n          <${Tabs.TabPane} tab=\"Advanced\" key='advanced'>\n            <${AdvancedComponent}  key='advanced'  setAdvanced=${setAdvanced} advanced=${advanced} />\n          <//>\n          <${Tabs.TabPane} tab=\"Track Trace\" key='trackTrace'>\n            <${TrackTraceComponent} />\n          <//>\n      <//>\n    <//>\n    <div className=\"d-flex justify-content-end\">\n      <${Button} type=\"primary\" onClick=${(e)=>{\n          if(results_origin.length){\n              results.splice(0,results_origin.length);\n          }else{\n              results.push(test$csv[0])\n          }\n          }}>${results.length ? \"Refine Search\" : \"Search\"}\n      </Button>\n \n      <${Button}>Create Alert</Button>\n    </div>`\n})","pinCode":false,"dname":"c1b94993-206b-446e-b33d-03917a0855af","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"ResultsComp = component(({ dateRange, modeId, searchText, advanced }) => {\n    const { Button,Space } = Antd;\n \n    return jsx`\n    <h3 className=\"text-primary\">RESULTS<//>\n    <div className=\"d-flex justify-content-between\">\n      <div>\n          <b>Results: ${results.length} | Page 1 of ${results.length}<//>\n          <div>Search Type: ${modes[modeId].title}</div>\n          ${_.map(advanced,(v,k)=>{\n              return jsx`<div key=${k}>${fileldMap[k]}: ${v}</div>`;\n          })}\n       </div>\n       <${Space} direction=\"vertical\">\n          <div>\n              <a onClick=${(e)=>{\n               }}  >Export as CSV<//>\n           <//>\n           <div>\n            <${Button} type=\"primary\" onClick=${(e)=>{\n            }}  >View Filter<//>\n          <//>\n       </div>\n     </div>\n     `;\n})","pinCode":false,"dname":"d51f8e10-cadc-4664-9a88-46665b455aa9","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"fields =( {\n  \t\"Origin\":\t\t\t\t\t\t { name:\"orgncntr\", help:\"#orgncntrs\",     },\n    \"Description\":\t\t\t\t  { name:\"descr\", help:\"#descrs\",   },\n    \"Loading Port\": \t\t     { name:\"loadport\" },\n    \"Unloading Port\":\t       { name:\"unloadport\" },\n    \"Container Number\":    { name:\"container\" },\n    \"Bill of lading Number\":{ name:\"bol\" },\n    \"Shipper Name\":           { name:\"shippernam\" },\n    \"Shipper Address\":        { name:\"shipperaddress\" },\n    \"Consignee Name\":      { name:\"consignnam\" },\n    \"Consignee Address\":   { name:\"consigneeaddress\" },\n    \"Notify Name\":             { name:\"notifynam\" },\n    \"Notify Address\":          { name:\"notifyaddress\" },\n    \"Cargo Description\":    { name:\"descr2\", help:\"#cargos\",  },\n    \"Seal Number\":            { name:\"sn\"},\n    \"Weight / # of Packages\":{ name:\"weight\", per:true },\n    \"Vessel Name\":           { name:\"vesselname\" },\n  })","pinCode":false,"dname":"09fb254c-a984-4af6-a60e-43f286159ea9","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"fileldMap = _.reduce(fields,(p,v,k)=>{\n  p[v.name] = k;\n  return p;\n},{})","pinCode":false,"dname":"095742b3-0047-43f3-b8d6-a129f4c856eb","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"AdvancedComponent = component(({ key, advanced, setAdvanced }) => {\n  const { Input, Space, Button, Row, Col, Form } = Antd;\n  const spans = { md:{ span: 24  }, lg:{  span: 12  }};\n  const formSpans = { labelCol:{ span: 8, },wrapperCol:{ span: 16, } }\n  const rows = _.reduce(_.keys(fields), (p, fieldKey, i, fieldKeys) =>{\n    if( i%2==0 && fieldKeys[i+1] ) {\n      p.push([\n        _.assign({label:fieldKey}, fields[fieldKey]),\n        _.assign({label:fieldKeys[i+1]}, fields[fieldKeys[i+1]])\n      ]);\n    }\n    return p;\n  },[]);\n  const Comp = component(({help,per,name,label})=>{\n   return jsx`<${Col} ...${spans}>\n     <${Form.Item} label=\"${label}\" name=\"${name || label}\" colon=${false}>\n       ${\n          help ?\n           jsx`<${Input} value=${ advanced[ name || label ] } onChange=${(e)=>{\n     \t\t\t\tsetAdvanced(_.assign({}, advanced, {[name || label ] : e.target.value }))\n   \t\t\t\t}} style=${{width:\"80%\"}}  /> <a href='${help}'>?</a>`  :  \n   \t\t  (per ?\n             jsx`<div class=\"d-flex\"><${Input}  value=${ advanced[ name || label ] } onChange=${(e)=>{\n     \t\t\t\tsetAdvanced(_.assign({}, advanced, {[name || label ] : e.target.value }))\n   \t\t\t\t}}  style=${{width:\"35%\"}}  /><div style=${{width:\"10%\", textAlign:\"center\"}} >${\"/\"}</div><${Input} style=${{width:\"35%\"}}  /></div>` : \n             jsx`<${Input} style=${{width:\"80%\"}}  value=${ advanced[ name || label ] } onChange=${(e)=>{\n     \t\t\t\tsetAdvanced(_.assign({}, advanced, {[name || label ] : e.target.value }))\n   \t\t\t\t}}   />`) \n        } \n     <//>\n   <//>`\n  })\n  return jsx`<${Space} key='${key}' direction=\"vertical\" style=${{width:\"100%\"}}>\n  <div style=${{textDecoration:\"underline\"}}>\n    <${LinkComp} ...${{\n      fileKey: \"1_react/syntaxHelp\",\n      text: \"Syntax Help\",\n    }} />\n  </div>\n  <${Form} ...${formSpans}\n      autoComplete=\"off\">\n    ${\n      _.map(rows,(row,index)=>{\n    \tlet left = row[0];\n    \tlet right = row[1];\n        return jsx`<${Row} key=${left.label}>\n          \t<${Comp} ...${left} />\n          \t<${Comp} ...${right} />\n        <//>`\n      })\n    }\n  <//>\n <//>`;\n})","pinCode":false,"dname":"0b17a1fc-a3a3-46d9-abcd-7cf648a63d79","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"dateFormat = 'YYYY/MM/DD';","pinCode":false,"dname":"f9c9d977-7c17-4388-8d7b-dd4c2fe98f85","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"periods = [\"Future\",\"One Month\",\"Three Months\",\"One Year\",\"All Data\",\"Custom\"];","pinCode":false,"dname":"1792ae9e-1750-4d7f-bef0-4246e5c4794d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"getDateRange = function (period) {\n  switch (period) {\n    case \"Future\":\n      return [moment().format(dateFormat), moment().month(moment().month()+1).format(dateFormat)];\n    case \"One Month\":\n      return [moment().month(moment().month()-1).format(dateFormat), moment().format(dateFormat)];\n    case \"Three Months\":\n      return [moment().month(moment().month()-3).format(dateFormat), moment().format(dateFormat)];\n    case \"One Year\":\n      return [moment().month(moment().month()-12).format(dateFormat), moment().format(dateFormat)];\n    case \"All Data\":\n      return null;\n    case \"Custom\":\n      return [moment().format(dateFormat), moment().format(dateFormat)];\n  }\n}","pinCode":false,"dname":"4561ece8-08db-4d5f-b56c-aeb193dfb7da","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"test$csv = FileAttachment(\"test.csv\").csv()","pinCode":false,"dname":"250f96a6-21d3-49ed-8f30-d6f3368296b6","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"","pinCode":false,"dname":"5ffd9cd6-dd3a-4c51-8694-3a3a4a0fda9a","codeMode":"javascript2","syncFile":true,"syncFileKey":"1_react/results.csv","variantName":"results","initRead":false}}},{"type":"codeTool","data":{"codeData":{"value":"results.push(test$csv[0]);","pinCode":false,"dname":"1331ed5e-bbc2-4dab-9946-16f71db07dbf","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"BasicComponent = component(({useSetter}) => {\n  const { Input, Space, Button } = Antd;\n  const { Search } = Input;\n  const onChange = (e) => {\n  \tuseSetter(e.target.value)\n  };\n  return jsx`<${Space} direction=\"vertical\">\n  <div style=${{textDecoration:\"underline\"}}>\n    <${LinkComp} ...${{\n      fileKey: \"1_react/syntaxHelp\",\n      text: \"Syntax Help\",\n    }} />\n  </div>\n  <div>\n  \tThe Basic Search looks for matches in any of the following fields:\n  </div>\n  <div>\n  Cargo Description, Loading Port, Unloading Port, Load Country, Unloading Country, Vessel Name, Shipper Name, Consignee Name, Notify Name, BOL, Container, Shipper Address, Consignee Address, Notify Address\n  </div>\n  <div class=\"d-flex justify-content-center align-items-center\">\n  \t\t<div>Text:\\u00A0\\u00A0\\u00A0\\u00A0</div>\n  \t\t<${Input} \n        placeholder=\"input search text\"\n        onChange=${onChange}\n        style=${{\n          width: '50%',\n        }} allowClear />\n     \t\n  </div>\n <//>`;\n})","pinCode":false,"dname":"6012a591-93bd-4fc8-a46c-4773882db82f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"Link(\"1_react/syntaxHelp\",\"Syntax Help\")","pinCode":false,"dname":"3c690276-71ea-4fcb-8cc9-14a6cbcd65a2","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"TrackTraceComponent = component(({}) => {\n  return jsx`<${LinkComp} ...${{\n    fileKey: \"1_react/syntaxHelp\",\n    text: \"Syntax Help\",\n  }} />`;\n})","pinCode":false,"dname":"8e7f422d-71cd-41cc-bf77-6051e4808788","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"render(()=>{\n\treturn jsx`<${TrackTraceComponent} />`\n\n})","pinCode":false,"dname":"8d4b0acc-d7bc-4d49-92f6-8092a4c8fe16","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"modes = ({\n  basic: { title: \"Basic\", comp: BasicComponent },\n  advanced: { title: \"Advanced\", comp: AdvancedComponent },\n  trackTrace: { title: \"Track Trace\", comp: TrackTraceComponent },\n})","pinCode":false,"dname":"be3bb878-2206-4ef8-b347-31d3d1d6bd59","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import {jsx, render, useState, component, useEffect, Fragment } from \"https://grove-help.graphxr.com/react/react\"","pinCode":false,"dname":"84a1df7c-99da-4c41-ac5f-2be43ed678b0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"moment = require(\"moment\")","pinCode":true,"dname":"9dfa159d-6aad-4507-af7e-559e5378d4be","codeMode":"javascript2"}}}],"version":"2.19.1"}