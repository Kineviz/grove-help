{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"viewof search = render(({ useSetter })=>{ \n  const { Radio, Tabs, Space, Button, DatePicker, Spin } = Antd;\n  const [ modeId, setModeId ] = useState(_.keys(modes)[1]);\n  const [ period, setPeriod  ] = useState(periods[4]);\n  const [ dateRange, setDateRange ] = useState(getDateRange(period));\n  const [ searchText, setSearchText ] = useState(\"\");\n  const [ advanced, setAdvanced ] = useState({});\n  const [ detail, setDetail ] = useState(-1);\n  const [ loading, setLoading ] = useState(false);\n  const { RangePicker } = DatePicker;\n  const onChange = (e) => {\n    setPeriod(e.target.value);\n    setDateRange(getDateRange(e.target.value));\n  };\n  const onChangeDateRange = (dates, dateStrings) => {\n    if (dates) {\n      console.log('From: ', dates[0], ', to: ', dates[1]);\n      console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n      setDateRange(dateStrings)\n    } else {\n      console.log('Clear');\n    }\n  };\n  useSetter({ dateRange, modeId, searchText, advanced })\n  return  jsx`<div key=\"abc\">\n  \t\t<div className=${`loading-top normal-icon ${loading ? \"\" : \"hide\"}`}>\n            <${Spin} spinning=${true} size=\"large\" tip=\"Loading...\">\n              <div className=\"full-div\"></div>\n            </${Spin}>\n          </div>\n  <div className=\"searc-position\"></div>\n  ${!!(results&&results.length&&~detail) &&\tjsx`<${DetailComp} detail=${detail} setDetail=${setDetail} />`}\n  ${!!(results&&results.length&&!~detail) && jsx`<${ResultsComp} ...${{ period, dateRange, modeId, searchText, advanced, setDetail }} />`}\n  <${Space} style=${{width:\"100%\"}} direction=\"vertical\" size=\"middle\" className='${ results&&results.length ? \"hide \" : \"\"}'>\n      <${Radio.Group} onChange=${onChange} value=${period}>\n       ${_.map(periods ,(o,i)=>{\n          return jsx`<${Radio} key=${o} value=${o}>${o}<//>`\n        }) }\t\n      <//>\n      ${period === periods[periods.length-1] && \n        jsx`<${RangePicker} ranges=${{\n            Today: [moment(), moment()],\n    \t\t'This Week': [moment().startOf('week'), moment().endOf('week')],\n            'This Month': [moment().startOf('month'), moment().endOf('month')],\n    \t\t'This Year': [moment().startOf('year'), moment().endOf('year')],\n          }} value=${[moment(dateRange[0],dateFormat), moment(dateRange[1],dateFormat)]}\n          format=${dateFormat} onChange=${onChangeDateRange} />`\n\t  }\n      <${Tabs}\n        activeKey=${modeId}\n        type=\"card\"\n        size=${'small'}\n        onChange=${(activeKey)=>{\n  \t\t\tsetModeId(activeKey);\n  \t\t}}\n      >\n          <${Tabs.TabPane} tab=\"Basic\" key='basic'>\n            <${BasicComponent} useSetter=${(searchText)=>{ setSearchText(searchText) }} />\n          <//>\n          <${Tabs.TabPane} tab=\"Advanced\" key='advanced'>\n            <${AdvancedComponent}  key='advanced'  setAdvanced=${setAdvanced} advanced=${advanced} />\n          <//>\n          <${Tabs.TabPane} tab=\"Track Trace\" key='trackTrace'>\n            <${TrackTraceComponent} />\n          <//>\n      </${Tabs}>\n      <${SearchButtons} ...${{ dateRange, modeId, searchText, advanced, setLoading }} />\n   </${Space}>\n  </div>`\n})","pinCode":false,"dname":"c1b94993-206b-446e-b33d-03917a0855af","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"search","pinCode":false,"dname":"d1ac3008-2824-4efd-a64f-edb9d9855495","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"cp ={let tmp; return `MATCH (n:${selectedLabel}) \n            ${tmp = _.reduce(\n              search.advanced,\n              (p, searchText, selectedProp) => {\n                if(searchText!=\"\" && null!==searchText && undefined!==searchText){\n                \tp += `${p?\" and\":\"\"} n.${selectedProp} = '${searchText}' `;\n                }\n                return p;\n              },\n              search.dateRange?`datetime(n.dtarrival) >= datetime('${search.dateRange[0]}') and datetime(n.dtarrival) <= datetime('${search.dateRange[1]}')` :\"\"\n            ), tmp!==\"\"?`where ${tmp}`:\"\"}\n            return n`}","pinCode":false,"dname":"4965d843-93cf-4bb4-ba4c-69f1ad36aa79","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"<style>\n  a.link{\n    text-decoration: underline !important\n  }\n  .table-row-left{\n    background-color: #EAEAEA;\n  }\n  .darkmode .table-row-left {\n    background-color: rgba(198, 188, 188, 0.867);\n    color: rgba(255, 255, 255, 0.85);\n  }\n  .sm-table {\n/*   \tpadding-bottom: 0.5em; */\n  }\n  .sm-table>.ant-row {\n    margin-bottom: 2px;\n  }\n  .sm-table>.ant-row .ant-col {\n    padding-left: 0.5em;\n  }\n  .sm-table>.ant-row .sm-blabla {\n    overflow: hidden;\n    text-overflow: ellipsis;\n/*     width: 100%; */\n/*     white-space: nowrap; */\n  }\n  .darkmode .ant-btn.ant-pagination-item-link>.anticon{\n  \tcolor:white;\n  }\n  .loading-top{\n    position: absolute;\n  }\n</style>","pinCode":false,"dname":"c35697ac-e87f-4670-a886-3611506cc68a","codeMode":"htmlmixed","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"AdvancedComponent = component(({ advanced, setAdvanced }) => {\n  const { Input, Space, Button, Row, Col, Form } = Antd;\n  const spans = { span:24, lg:12};\n  const formSpans = { labelCol:{ span: 8, },wrapperCol:{ span: 16, } }\n  const rows = _.reduce(_.keys(fields), (p, fieldKey, i, fieldKeys) =>{\n    if( i%2==0 && fieldKeys[i+1] ) {\n      p.push([\n        _.assign({label:fieldKey}, fields[fieldKey]),\n        _.assign({label:fieldKeys[i+1]}, fields[fieldKeys[i+1]])\n      ]);\n    }\n    return p;\n  },[]);\n  const Comp = component(({help,per,name,names,label,comp,getValue})=>{\n   const {Type, props} = comp || {Type: Input, props:{ allowClear: true } };\n   return jsx`<${Col} key=${label} ...${spans}>\n     <${Form.Item} key=${label} label=\"${label}\"  colon=${false}>\n       ${\n          help ?\n           jsx`<${Type} key=${name} value=${ advanced[ name ] } onChange=${(e)=>{\n     \t\t\t\tsetAdvanced(_.assign({}, advanced, {[name ] : getValue ? getValue(e) : e.target.value }))\n   \t\t\t\t}} style=${{width:\"80%\"}} ...${props}  /> <a key=${name+\"_link\"} className=\"link clicker\">?</a>`  :  \n   \t\t  (per ?\n             jsx`<div className=\"d-flex\">\n             \t ${_.reduce(names,(p, {name, comp, getValue},index)=>{\n     \t\t\t\tconst {Type, props} = comp || {Type: Input,props:{} };\n     \t\t\t\tp.push( jsx`<${Type} key=${name}  value=${ advanced[ name ] } onChange=${(e)=>{\n                        setAdvanced(_.assign({}, advanced, {[name ] : getValue ? getValue(e) : e.target.value }))\n                    }}  style=${{width:\"35%\"}} ...${props}  />`);\n     \t\t\t\tif(index==0){\n                    \tp.push(jsx`<div key=\"/\" style=${{width:\"10%\", textAlign:\"center\"}} >${\"/\"}</div>`)\n                    }\n                    return p;\n   \t\t\t\t }, [])\n                }\n             \t</div>` : \n             jsx`<${Type} key=${name} style=${{width:\"80%\"}}  value=${ advanced[ name ] } onChange=${(e)=>{\n     \t\t\t\tsetAdvanced(_.assign({}, advanced, {[name ] : getValue ? getValue(e) : e.target.value }))\n   \t\t\t\t}} ...${props}   />`) \n        } \n     <//>\n   <//>`\n  })\n  return jsx`<${Space} key='${\"advanced\"}' direction=\"vertical\" style=${{width:\"100%\"}}>\n  <${LinkComp} ...${{\n      fileKey: \"1_react/syntaxHelp\",\n      text: \"Syntax Help\",\n  }} />\n  <${Form} ...${formSpans}\n      autoComplete=\"off\">\n    ${\n      _.map(rows,(row,index)=>{\n    \tlet left = row[0];\n    \tlet right = row[1];\n        return jsx`<${Row} key=${left.label}>\n          \t<${Comp}   ...${left} />\n          \t<${Comp}   ...${right} />\n        <//>`\n      })\n    }\n  <//>\n <//>`;\n})","pinCode":false,"dname":"0b17a1fc-a3a3-46d9-abcd-7cf648a63d79","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"SearchButtons = component(({ dateRange, modeId, searchText, advanced, setLoading }) => {\n  const { Button } = Antd;\n  return jsx`<div className=\"d-flex justify-content-start\">\n        <${Button} type=\"primary\" onClick=${async (e) => {\n    if (results_origin.length) {\n      results.splice(0, results_origin.length);\n    } else {\n      if (modeId === \"basic\") {\n        let query = `MATCH (n:${selectedLabel}) \n            where ${_.reduce(\n              [\n                \"descr\",\n                \"loadport\",\n                \"unloadport\",\n                \"loadcntr\",\n                \"unloadcntrcd\",\n                \"vesselname\",\n                \"shippernam\",\n                \"consignnam\",\n                \"notifynam\",\n                \"bol\",\n                \"container\",\n                \"shipperaddress\",\n                \"consigneeaddress\",\n                \"notifyaddress\",\n              ],\n              (p, selectedProp, i) => {\n                p += `${p==\"\"?\"\":\" or\"} n.${selectedProp} = '${searchText}' `;\n                return p;\n              },\n              dateRange ? ` datetime(n.dtarrival )>= datetime('${dateRange[0]}') and datetime(n.dtarrival) <= datetime('${dateRange[1]}')  `:\"\"\n            )}\n            return n`;\n        setLoading(true);\n        let nodes = await gxr.neo4j(query, { saveToGraph: false });\n        let rawdata = nodes._content.data?.nodes;\n        if(rawdata){\n        \tlet propList = rawdata.map((d) =>\n              _.merge({}, { _id: d.id }, d.properties)\n            );\n            results.splice(0, 0, ...propList);\n        }\n        setLoading(false);\n      } else if (modeId === \"advanced\") {\n        let tmp;\n        let query = `MATCH (n:${selectedLabel}) \n            ${tmp =  _.reduce(\n              advanced,\n              (p, searchText, selectedProp) => {\n                if(searchText!=\"\" && null!==searchText && undefined!==searchText){\n                \tp += `${p==\"\"?\"\":\" and\"} n.${selectedProp} = '${searchText}' `;\n                }\n                return p;\n              },\n              dateRange ? ` datetime(n.dtarrival )>= datetime('${dateRange[0]}') and datetime(n.dtarrival) <= datetime('${dateRange[1]}')  `:\"\"\n            ),tmp!==\"\"?`where ${tmp}`:\"\"}\n            return n`;\n        setLoading(true);\n        let nodes = await gxr.neo4j(query, { saveToGraph: false });\n        let rawdata = nodes._content.data?.nodes;\n        if(rawdata){\n        \tlet propList = rawdata.map((d) =>\n              _.merge({}, { _id: d.id }, d.properties)\n            );\n            results.splice(0, 0, ...propList);\n        }\n        setLoading(false);\n      } else {\n        results.splice(0, 0, ...test$csv);\n      }\n    }\n  }}>\n          ${results.length ? \"Refine Search\" : \"Search\"}\n        </Button>\n        <${Button}>Create Alert</Button>\n      </div>`;\n})","pinCode":false,"dname":"1a55ad09-0c29-4761-92fd-f46718046ac3","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"DetailComp = component(({ detail, setDetail }) => {\n  const { RightOutlined,LeftOutlined } = AntdIcons;\n  const { Button, Space, Pagination, Row, Col, Form  } = Antd;\n  const rows = _.reduce(_.keys(detailFields), (p, fieldKey, i, fieldKeys) =>{\n      if( i%2==0 ) {\n        if( fieldKeys[i+1]) {\n          p.push([\n            _.assign({label:fieldKey, cols:12}, detailFields[fieldKey]),\n            _.assign({label:fieldKeys[i+1], cols:12}, detailFields[fieldKeys[i+1]])\n          ]);\n        } else {\n          p.push([_.assign({label:fieldKey, cols:24}, detailFields[fieldKey])])\n        }\n      }\n      return p;\n    },[]);\n    const Comp = component(({ name, label, cols, result, link })=>{\n     return jsx`<${Col} ...${{ span:24, lg:cols}}>\n     \t <${Row}>\n            <${Col} className=\"table-row-left\" ...${cols ===24 ? { span:10, lg:5 } : { span:10, lg:10 }}>\n               ${label}\n            </${Col}>\n            <${Col} ...${cols ===24 ? {span:14, lg:19 } :{ span:14, lg:14}}>\n                   <div className=\"sm-blabla\">\n                       ${\n                            link ?\n                            jsx`<a className=\"link clicker\">${result && result[name]}</a>` :\n                            result && result[name]\n                        }\n                    </div>\n            </${Col}>\n        </${Row}>\n     <//>`\n    })\n  return jsx`\n    <h3 className=\"text-primary\">RECORD DETAILS<//>\n    <div className=\"d-flex justify-content-start\">\n        <${Button} type=\"primary\" onClick=${(e) => {\n    setDetail(-1);\n  }}>\n         Back to Results\n        </Button>\n   </div>\n   <div className=\"d-flex justify-content-center\">\n   \t\t<${Button} className=\"ant-pagination-item-link\" disabled=${detail<=0} onClick=${()=>{\n  if(detail>0){\n  \tsetDetail(detail-1)}\n  }\n}> \n        \t${jsx`<${LeftOutlined} />`} \n        <//>\n        <span>\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0</span>\n        <${Button} className=\"ant-pagination-item-link\" disabled=${detail>=results.length-1} onClick=${()=>{\n  if(detail<results.length-1){\n  \tsetDetail(detail+1)}\n  }\n}> \n        \t${jsx`<${RightOutlined} />`} \n        <//>\n   </div>\n   <div className=\"sm-table\">\n   ${\n        _.map(rows,(row,index)=>{\n          let left = row[0];\n          let right = row[1];\n          return jsx`<${Row} key=${left.label}>\n                            <${Comp} ...${left} result=${results.at(detail)} />\n                            ${right && jsx`<${Comp} ...${right} result=${results.at(detail)} />`}\n                        <//>`\n        })\n      }\n      <//>\n    `;\n})","pinCode":false,"dname":"88ea8b11-02e0-44d0-a50d-b2e430e702ec","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"ResultsComp = component(({ dateRange, modeId, searchText, advanced, setDetail }) => {\n    const { Button, Space, Pagination, Row, Col, Form  } = Antd;\n    const [ pageNumber, setPageNumber ] = useState(1);\n    const [ pageSize, setPageSize ] = useState(5);\n    const rows = _.reduce(_.keys(smFields), (p, fieldKey, i, fieldKeys) =>{\n      if( i%2==0 ) {\n        if( fieldKeys[i+1]) {\n          p.push([\n            _.assign({label:fieldKey, cols:12}, smFields[fieldKey]),\n            _.assign({label:fieldKeys[i+1], cols:12}, smFields[fieldKeys[i+1]])\n          ]);\n        } else {\n          p.push([_.assign({label:fieldKey, cols:24}, smFields[fieldKey])])\n        }\n      }\n      return p;\n    },[]);\n    const Comp = component(({ name, label, cols, result, link })=>{\n     return jsx`<${Col} ...${{ span:24, lg:cols}}>\n     \t <${Row}>\n            <${Col} className=\"table-row-left\" ...${cols ===24 ? { span:10, lg:5 } : { span:10, lg:10 }}>\n               ${label}\n            </${Col}>\n            <${Col} ...${cols ===24 ? {span:14, lg:19 } :{ span:14, lg:14}}>\n                   <div className=\"sm-blabla\">\n                       ${\n                            link ?\n                            jsx`<a className=\"link clicker\">${result &&result[name]}</a>` :\n                            result &&result[name]\n                        }\n                    </div>\n            </${Col}>\n        </${Row}>\n     <//>`\n    })\n    return jsx`\n    <h3 className=\"text-primary\">RESULTS<//>\n    <div className=\"d-flex justify-content-between\">\n      <div>\n          <b>Results: ${results.length} | Page 1 of ${results.length}<//>\n          <div>Search Type: ${modes[modeId].title}</div>\n          ${ modeId==='basic' && jsx`<div>Search Text: ${searchText}</div>` }\n          ${ modeId==='advanced' &&  _.map(advanced,(v,k)=>{\n              return jsx`<div key=${k}>${fileldMap[k]}: ${v}</div>`;\n          })}\n       </div>\n       <${Space} direction=\"vertical\">\n          <div>\n              <a className=\"link clicker\" onClick=${(e)=>{\n      \t\t\t\texportCsv(`${modeId}`,ConvertToCSV(results_origin))\n               }}  >Export as CSV<//>\n           <//>\n           <div>\n            <${Button} type=\"primary\" onClick=${(e)=>{\n            }}  >View Filter<//>\n          <//>\n       </div>\n     </div>\n     <${SearchButtons} />\n     <div className=\"d-flex justify-content-between\">\n     \tSort By:\n     </div>\n     <div className=\"d-flex justify-content-center\">\n     \t<${Pagination} showQuickJumper current=${pageNumber} pageSize=${pageSize} total=${results.length} onChange=${(pageNumber, pageSize) => {\n         setPageNumber(pageNumber);\n         setPageSize(pageSize);\n        }} />\n     </div>\n     ${\n       _.map(results.slice((pageNumber-1) * pageSize, pageNumber *pageSize), (result,index)=>{\n          return jsx`<div className=\"sm-table\" key=${index}>\n              ${ index !=0 && jsx`<hr />`}\n          \t  <${Row}><${Col} span=\"24\"><a className=\"link clicker\"  onClick=${(e)=>{\n          \t\tsetDetail(index);\n            \tdocument.querySelector(\".searc-position\").scrollIntoView({ behavior: \"auto\", block: \"center\", inline: \"nearest\" });\n          \t\t}}>More details</a><//><//>\n              ${\n                _.map(rows,(row,index)=>{\n                  let left = row[0];\n                  let right = row[1];\n                  return jsx`<${Row} key=${left.label}>\n                      <${Comp} ...${left} result=${result} />\n                      ${right && jsx`<${Comp} ...${right} result=${result} />`}\n                  <//>`\n                })\n              }\n          </div>\n          `\n       })\n\t }\n     `;\n})","pinCode":false,"dname":"d51f8e10-cadc-4664-9a88-46665b455aa9","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"BasicComponent = component(({useSetter}) => {\n  const { Input, Space, Button } = Antd;\n  const { Search } = Input;\n  const onChange = (e) => {\n  \tuseSetter(e.target.value)\n  };\n  return jsx`<${Space} direction=\"vertical\">\n  <${LinkComp} ...${{\n    fileKey: \"1_react/syntaxHelp\",\n    text: \"Syntax Help\",\n  }} />\n  <div>\n  \tThe Basic Search looks for matches in any of the following fields:\n  </div>\n  <div>\n  Cargo Description, Loading Port, Unloading Port, Load Country, Unloading Country, Vessel Name, Shipper Name, Consignee Name, Notify Name, BOL, Container, Shipper Address, Consignee Address, Notify Address\n  </div>\n  <div className=\"d-flex justify-content-center align-items-center\">\n  \t\t<div>Text:\\u00A0\\u00A0\\u00A0\\u00A0</div>\n  \t\t<${Input} \n        placeholder=\"input search text\"\n        onChange=${onChange}\n        style=${{\n          width: '50%',\n        }} allowClear />\n     \t\n  </div>\n <//>`;\n})","pinCode":false,"dname":"6012a591-93bd-4fc8-a46c-4773882db82f","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"_.keys(test$csv[0])","pinCode":false,"dname":"67236410-1686-4d06-88a3-8a4e92910ce9","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"selectedLabel = \"Record\"","pinCode":false,"dname":"32c8ed1a-b655-45a7-90cf-b0683c166363","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"detailFields = {\n  return {\n    \"Date of Depature\": { name: \"dtdepature\" },\n    \"Date of Arrival\": { name: \"dtarrival\" },\n    \"Container Number\": { name: \"container\", link: \"#aa\" },\n    \"Bill of lading Number\": { name: \"bol\", link: \"#bb\" },\n    \"Loading Country\": { name: \"loadcntr\" },\n    \"Loading Port\": { name: \"loadport\" },\n    \"Unloading Country\": { name: \"unloadcntr\" },\n    \"Unloading Port\": { name: \"unloadport\" },\n    \"BOL Origin Country\": { name: \"orgncntr\" },\n    \"BOL Destination Country\": { name: \"desticntr\" },\n    \"BOL Origin Point\": { name: \"orgnpoint\" },\n    \"BOL Destination Point\": { name: \"destipoint\" },\n    \"Shipper Name\": { name: \"shippernam\" },\n    \"Shipper Address\": { name: \"shipperaddress\" },\n    \"Shipper City\": { name: \"shippercity\" },\n    \"Shipper Country\": { name: \"shippercntr\" },\n    \"Consignee Name\": { name: \"consignnam\" },\n    \"Consignee Address\": { name: \"consigneeaddress\" },\n    \"Consignee City\": { name: \"consigncity\" },\n    \"Consignee Country\": { name: \"consigncntr\" },\n    \"Notify Name\": { name: \"notifynam\" },\n    \"Notify Address\": { name: \"notifyaddress\" },\n    \"Notify City\": { name: \"notifycity\" },\n    \"Notify Country\": { name: \"notifycntr\" },\n    Weight: { name: \"weight\" },\n    \"Agent Name\": { name: \"agentnam\" },\n    \"HS Description\": { name: \"hsdescr\" },\n    \"HS Code\": { name: \"hscode\" },\n    \"HS Description 4\": { name: \"hsdescr4\" },\n    \"HS Description 6\": { name: \"hsdescr6\" },\n    \"Vessel Name\": { name: \"vesselname\" },\n    \"IMO Number\": { name: \"imonum\" },\n    \"Number of Packages\": { name: \"qty\" },\n    \"Seal Number\": { name: \"sn\" },\n    \"Cargo Description\": { name: \"descr\" },\n  };\n}","pinCode":false,"dname":"b7bd1e2d-443a-4232-a04a-737d0a231427","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"smFields = ({\n  \"Container Number\": { name: \"container\", link:\"#aa\" },\n  \"Bill of lading Number\": { name: \"bol\", link:\"#bb\" },\n  \"Loading Country\": { name: \"loadcntr\" },\n  \"Loading Port\": { name: \"loadport\" },\n  \"Unloading Country\": { name: \"unloadcntr\" },\n  \"Unloading Port\": { name: \"unloadport\" },\n  \"BOL Origin Country\": { name: \"orgncntr\" },\n  \"BOL Destination Country\": { name: \"desticntr\" },\n  \"Shipper Name\": { name: \"shippernam\" },\n  \"Consignee Name\": { name: \"consignnam\" },\n  \"Notify Name\": { name: \"notifynam\" },\n  \"Vessel Name\": { name: \"vesselname\" },\n  Date: { name: \"dtarrival\" },\n  Weight: { name: \"weight\" },\n  \"Cargo Description\": { name: \"descr\" },\n})","pinCode":false,"dname":"81b2d088-68ee-438a-85b4-3dfab40bd798","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"smFileldMap = _.reduce(\n  smFields,\n  (p, v, k) => {\n    p[v.name] = k;\n    return p;\n  },\n  {}\n)","pinCode":false,"dname":"5c25de8a-036c-4967-a046-fae854d3ceea","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"fields = {\n  const { Select, InputNumber } = Antd;\n  const getSelect = ({placeholder,options}) => {\n  \treturn {\n      comp: {\n        Type: Select,\n        props: {\n          allowClear: true,\n          showSearch: true,\n          placeholder: placeholder || \"Select a country\",\n          optionFilterProp: \"children\",\n          filterOption: (input, option) =>\n      (option?.label ?? '').toLowerCase().includes(input.toLowerCase()),\n          options: options || orgncntrs,\n        },\n      },\n      getValue:(e)=>e,\n    }\n  };\n  const getInputNumber = ( ) => {\n    return {\n      comp: {\n          Type: InputNumber,\n          props: {\n            min: 0,\n          },\n        },\n        getValue:(e)=>e,\n     }\n  };\n  let selectPort = getSelect({ placeholder: \"Select a port\", options: loadports });\n  let selectContry = getSelect({ placeholder: \"Select a country\", options: orgncntrs })\n  let inputNumber = getInputNumber();\n  \n  return {\n    Origin: {\n      name: \"orgncntr\",\n      help: \"#orgncntrs\",\n      ...selectContry\n    },\n    Description: { name: \"descr\", help: \"#descrs\" },\n    \"Loading Port\": { name: \"loadport\", ...selectPort },\n    \"Unloading Port\": { name: \"unloadport\", ...selectPort },\n    \"Container Number\": { name: \"container\" },\n    \"Bill of lading Number\": { name: \"bol\" },\n    \"Shipper Name\": { name: \"shippernam\" },\n    \"Shipper Address\": { name: \"shipperaddress\" },\n    \"Consignee Name\": { name: \"consignnam\" },\n    \"Consignee Address\": { name: \"consigneeaddress\" },\n    \"Notify Name\": { name: \"notifynam\" },\n    \"Notify Address\": { name: \"notifyaddress\" },\n    \"Cargo Description\": { name: \"descr\", help: \"#descrs\" },\n    \"Seal Number\": { name: \"sn\" },\n    \"Weight / # of Packages\": {\n      names: [{ \n        name: \"weight\",\n        ...inputNumber\n      }, { \n        name: \"qty\",\n        ...inputNumber\n      }],\n      per: true,\n    },\n    \"Vessel Name\": { name: \"vesselname\" },\n  };\n}","pinCode":false,"dname":"09fb254c-a984-4af6-a60e-43f286159ea9","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"fileldMap = _.reduce(fields,(p,v,k)=>{\n  if(v.name instanceof Object){\n    p[v.names[0].name] = k.split(\"/\")[0];\n    p[v.names[1].name] = k.split(\"/\")[1];\n  } else{\n    p[v.name] = k;\n  }\n  return p;\n},{})","pinCode":false,"dname":"095742b3-0047-43f3-b8d6-a129f4c856eb","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"orgncntrs = _.map(Array.from(\n  _.reduce(\n    test$csv,\n    (p, o, i) => {\n      p.add(o.orgncntr);\n      p.add(o.orgncntrcd);\n      return p;\n    },\n    new Set()\n  )\n), (s)=>{\nreturn { value: s, label: s }\n})","pinCode":false,"dname":"cb243560-bf1b-4009-b236-9f40a2c6080e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"loadports = _.map(\n  Array.from(\n    _.reduce(\n      test$csv,\n      (p, o, i) => {\n        p.add(o.loadport);\n        p.add(o.unloadport);\n        return p;\n      },\n      new Set()\n    )\n  ),\n  (s) => {\n    return { value: s, label: s };\n  }\n)","pinCode":false,"dname":"0387d82e-832d-4cd1-bfe3-977212818983","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"dateFormat = 'YYYY-MM-DD';","pinCode":false,"dname":"f9c9d977-7c17-4388-8d7b-dd4c2fe98f85","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"periods = [\"Future\",\"One Month\",\"Three Months\",\"One Year\",\"All Data\",\"Custom\"];","pinCode":false,"dname":"1792ae9e-1750-4d7f-bef0-4246e5c4794d","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"getDateRange = function (period) {\n  switch (period) {\n    case \"Future\":\n      return [moment().format(dateFormat), moment().month(moment().month()+1).format(dateFormat)];\n    case \"One Month\":\n      return [moment().month(moment().month()-1).format(dateFormat), moment().format(dateFormat)];\n    case \"Three Months\":\n      return [moment().month(moment().month()-3).format(dateFormat), moment().format(dateFormat)];\n    case \"One Year\":\n      return [moment().month(moment().month()-12).format(dateFormat), moment().format(dateFormat)];\n    case \"All Data\":\n      return null;\n    case \"Custom\":\n      return [moment(\"2014-01-01\",dateFormat).format(dateFormat), moment(\"2015-12-31\",dateFormat).format(dateFormat)];\n  }\n}","pinCode":false,"dname":"4561ece8-08db-4d5f-b56c-aeb193dfb7da","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"test$csv = FileAttachment(\"test.csv\").csv()","pinCode":false,"dname":"250f96a6-21d3-49ed-8f30-d6f3368296b6","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"","pinCode":false,"dname":"5ffd9cd6-dd3a-4c51-8694-3a3a4a0fda9a","codeMode":"javascript2","syncFile":true,"variantName":"results","initRead":false,"hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"TrackTraceComponent = component(({}) => {\n  return jsx`<${LinkComp} ...${{\n    fileKey: \"1_react/syntaxHelp\",\n    text: \"Syntax Help\",\n  }} />`;\n})","pinCode":false,"dname":"8e7f422d-71cd-41cc-bf77-6051e4808788","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"modes = ({\n  basic: { title: \"Basic\", comp: BasicComponent },\n  advanced: { title: \"Advanced\", comp: AdvancedComponent },\n  trackTrace: { title: \"Track Trace\", comp: TrackTraceComponent },\n})","pinCode":false,"dname":"be3bb878-2206-4ef8-b347-31d3d1d6bd59","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"import {jsx, render, useState, component, useEffect, Fragment } from \"https://grove-help.graphxr.com/react/react\"","pinCode":false,"dname":"84a1df7c-99da-4c41-ac5f-2be43ed678b0","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"import { exportCsv, ConvertToCSV  } from \"https://grove-help.graphxr.com/excel/csvUtil\"","pinCode":false,"dname":"459a1221-6f5a-401f-9e3d-45000279ecdb","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"moment = require(\"moment\")","pinCode":false,"dname":"9dfa159d-6aad-4507-af7e-559e5378d4be","codeMode":"javascript2","hide":true}}},{"type":"codeTool","data":{"codeData":{"value":"render(() => {\n  return jsx`<${SimpleExample} />`;\n})","pinCode":false,"dname":"d984cf09-2c13-4844-973e-4b0d80319d5a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"SimpleExample = component(({}) => {\n    const boxStyle = {\n    border: \"grey solid 2px\",\n    borderRadius: \"10px\",\n    padding: \"5px\",\n  };\n    const { useRef } = React;\n    const box1 = useRef(null);\n    const box2 = useRef(null);\n    return jsx`<${Xwrapper}><div style=${{\n      display: \"flex\",\n      justifyContent: \"space-evenly\",\n      width: \"100%\",\n    }}>\n    \t\n            <div ref=${box1} id=\"eleabc\" style=${boxStyle}>hey</div>\n            <p ref=${box2}  id=\"elebcd\" style=${boxStyle}>hey2</p>\n            ${abc}\n            <//>\n        <//>`;\n  });","pinCode":false,"dname":"bd9f363d-93e3-42ae-9c81-9e7e8066e466","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"abc =  jsx`<${Xarrow}\n                start=\"eleabc\" \n                end=\"elebcd\"\n            />`","pinCode":false,"dname":"8afc7b7c-e181-40b1-a16f-ba68c5f76ebe","codeMode":"javascript2"}}}],"version":"2.19.1"}