{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"KeysComp = component(({ kk, keyName }) => {\n   let k= kk.keys[keyName]\n  return jsx`<div className=\"d-flex justify-content-between\" style=${{\n                width: 500,\n                maxWidth: \"70vw\",\n              }}><div>${keyName}</div> <div className=\"nowrap pv2\">\n      ${_.map(osKeys(k), (key) => {\n        return jsx`<span key=${key} className=\"keyboard-key ml2 ph1\">${key}</span>`;\n      })}\n    </div>\n  </div>\n  `;\n})","pinCode":false,"dname":"f058a7fb-fe27-4428-acf5-2cf8767c94b1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => jsx`<${KeysComp} kk=${keyMap.code_editor_keys} keyName=${\"Jump to defining cell\"}><//>`)","pinCode":false,"dname":"a1750975-78e8-4aef-886e-0082bdea5cac","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => jsx`<${KeysComp} kk=${keyMap.cell_shortcuts_keys} keyName=${\"Go Back Editing Cell\"}><//>`)","pinCode":false,"dname":"7a2ae9b0-2a53-4326-a004-7833a4baa22b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => jsx`<${KeysComp} kk=${keyMap.cell_shortcuts_keys} keyName=\"Go Forward Editing Cell\"><//>`)","pinCode":false,"dname":"d5af2de6-3d28-4ba2-b9fc-eeff0bc9e530","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof condition = render(({ useSetter }) => {\n  const [step_number, setStep_number] = useState(1);\n  const {Steps , Space} = Antd;\n  const Step = Steps.Step;\n  const update_step_number = (d) => (setStep_number(d));\n  useSetter({ step_number });\n  return jsx`<${Space} direction=\"vertical\" size=\"middle\" style=${{fontFamily: 'Trebuchet MS'}}>\n    <${Steps} current='${step_number}' onChange=${update_step_number}>\n    <${Step} title=\"Shortcut key\" description=\"Shortcut key of grove.\" />\n    <${Step} title=\"Search key\" subTitle=\"Left 00:00:08\" description=\"Search shortcut key.\" />\n    <${Step} title=\"Waiting\" description=\"This is a description.\" />\n   <//>\n   ${step_number === 0 && jsx`<${HelpComponent} />`}\n   ${step_number === 1 && jsx`<${SearchComponent} />`}\n  <//>`;\n})","pinCode":false,"dname":"d245c011-c56b-449d-8bcc-7119e0df2233","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"keyMap.cell_shortcuts_keys.keys","pinCode":false,"dname":"362495a3-5927-45b5-ab78-f76322d513fe","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"keyMap","pinCode":false,"dname":"83d81c6b-a718-4393-be79-6fc87a021402","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function escapeStringRegexp(string) {\n  if (typeof string !== \"string\") {\n    throw new TypeError(\"Expected a string\");\n  }\n  // Escape characters with special meaning either inside or outside character sets.\n  // Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n  return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\").replace(/-/g, \"\\\\x2d\");\n}","pinCode":false,"dname":"18da3420-e945-4310-a64f-7381292099aa","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"SearchComponent = component(({}) => {\n  const { Input, Space, Checkbox } = Antd;\n  const { Search } = Input;\n  const { Tree } = Antd;\n  const [value, setValue] = useState(\"\");\n  const [caseSensitive, setCaseSensitive] = useState(false);\n  const [wholeWord, setWholeWord] = useState(false);\n  const [regular, setRegular] = useState(false);\n  const getSearchText = () => {\n    if (caseSensitive) {\n      return value;\n    } else if (regular) {\n      return new RegExp(escapeStringRegexp(value), \"g\");\n    } else if (!caseSensitive) {\n      return new RegExp(escapeStringRegexp(value), \"gi\");\n    }\n  };\n  const treeData = _.reduce(\n    keyMap,\n    (p, v, k) => {\n      let keys = _.reduce(\n        v.keys,\n        (p, k) => {\n          if (\n            k.title &&\n            value &&\n            (highligthComp(getSearchText(), k.title, wholeWord) ||\n              _.filter(osKeys(k), (key) =>\n                highligthComp(getSearchText(), key, wholeWord)\n              ).length)\n          ) {\n            p.push({\n              title: jsx`<div key=${k.title}  style=${{\n                width: 500,\n                maxWidth: \"80vw\",\n              }}  className=\"d-flex justify-content-between bt b--light-silver\">\n                                  <div className=\"flex pv2\">${\n                                    highligthComp(\n                                      getSearchText(),\n                                      k.title,\n                                      wholeWord \n                                    ) || k.title\n                                  }</div>\n                                  <div className=\"nowrap pv2\">\n                                      ${_.map(osKeys(k), (key) => {\n                                        return jsx`<span key=${key} className=\"keyboard-key ml2 ph1\">${\n                                          highligthComp(\n                                            getSearchText(),\n                                            key,\n                                            wholeWord,\n                                            false\n                                          ) || key\n                                        }</span>`;\n                                      })}\n                                  </div>\n                              </div>`,\n              key: k.title,\n            });\n          }\n          return p;\n        },\n        []\n      );\n      if (keys.length) {\n        p.push({ title: k.split(\"_\").join(\" \"), key: k, children: keys });\n      }\n      return p;\n    },\n    []\n  );\n  const onChange = (e) => {\n    setValue(e.target.value);\n    console.log(e.target.value);\n  };\n  const onSelect = (selectedKeys, info) => {\n    console.log(\"selected\", selectedKeys, info);\n  };\n  return jsx`<${Space} direction=\"vertical\" size=\"middle\">\n  \t<${Input}\n        placeholder=\"input search text\"\n        allowClear\n        value=${value}\n        onChange=${onChange}\n        style=${{ width: 200 }}\n      />\n      <div>\n        <${Checkbox} onChange=${(e) => {\n    setCaseSensitive(e.target.checked);\n  }} \n          checked=${caseSensitive}>Case Sensitive<//>\n        <${Checkbox} onChange=${(\n    e\n  ) => {\n    setWholeWord(e.target.checked);\n  }} \n          checked=${wholeWord}>Whole Word<//>\n        <${Checkbox} onChange=${(\n    e\n  ) => {\n    setRegular(e.target.checked);\n  }} \n          checked=${regular}>Regular Expression<//>\n      </div>\n      <${Tree} \n          defaultExpandAll=${true}\n      \t  autoExpandParent=${true}\n          defaultExpandParent=${true}\n          showIcon=${false}\n          onSelect=${onSelect}\n          treeData=${treeData}\n        />\n       <//>\n      `;\n})","pinCode":false,"dname":"7742a057-0dc2-47ad-aff7-dc6a67d30c51","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"HelpComponent = component(({}) => {\n  const { Collapse } = Antd;\n  const { Panel } = Collapse;\n  const {\n    window_shortcuts_keys,\n  } = keyMap;\n  const [activeKey, setActiveKey] = useState([_.keys(keyMap)[0]]);\n  const onChange = (key) => {\n    console.log(key);\n    setActiveKey([key])\n  };\n  return jsx`<div>\n                <div className=\"pb2 bb b--silver\">\n                    <div className=\"ph3 mt2 mb1 f7 fw5 mid-gray lh-f7\">Press ${window_shortcuts_keys.keys[\n                      \"Help?\"\n                    ].keys.join(\n                      \"+\"\n                    )} to toggle this panel, then Esc to hide them again.</div>\n                </div>\n                <${Collapse} defaultActiveKey=${activeKey} onChange=${onChange} accordion>\n      \t\t\t  \t${\n                      _.map(keyMap, (v,k) =>{\n                        return jsx`<${Panel} header=${k.split(\"_\").join(\" \")} key=${k}>\n                          <div className=\"mt2 mb3 f7 fw5 mid-gray\">${v.desc}</div>\n                          ${_.map(v.keys, (value, key) => {\n                            return jsx`<div key=${\n                              value.title\n                            } className=\"d-flex justify-content-between bt b--light-silver\">\n                                  <div className=\"flex-auto pv2\">${value.title}</div>\n                                  <div className=\"nowrap pv2\">\n                                      ${_.map(osKeys(value), (key) => {\n                                        return jsx`<span key=${key} className=\"keyboard-key ml2 ph1\">${key}</span>`;\n                                      })}\n                                  </div>\n                              </div>`;\n                          })}\n                       <//>`\n                      })\n                \t}\n                  <${Panel} header=\"Multiple tabs\" key=\"5\">\n                      <div className=\"mt2 mb3 f7 fw5 mid-gray\">Operating on the tabs.</div>\n                      <div key=${\"clickOpen\"} className=\"d-flex justify-content-between bt b--light-silver\">\n                          <div className=\"flex-auto pv2\">Click open file in new tab</div>\n                          <div className=\"nowrap pv2\">\n                              <span className=\"keyboard-key ml2 ph1\">${\n                                osfunction() === OSType.MacOS ? \"⌘\" : \"Ctrl\"\n                              }</span>\n                              <span className=\"keyboard-key ml2 ph1\">Click the file</span>\n                          </div>\n                      </div>\n                      <div key=${\"dragOpen\"} className=\"d-flex justify-content-between bt b--light-silver\">\n                          <div className=\"flex-auto pv2\">Drag open file in new tab</div>\n                          <div className=\"nowrap pv2\">\n                              <span className=\"keyboard-key ml2 ph1\">Drag the file drop to editor</span>\n                          </div>\n                      </div>\n                      <div key=${\"clickImports\"} className=\"d-flex justify-content-between bt b--light-silver\">\n                          <div className=\"flex-auto pv2\">Click open file in current tab</div>\n                          <div className=\"nowrap pv2\">\n                              <span className=\"keyboard-key ml2 ph1\">Click the link of imports</span>\n                          </div>\n                      </div>\n                      <div key=${\"newTabClickImports\"} className=\"d-flex justify-content-between bt b--light-silver\">\n                          <div className=\"flex-auto pv2\">Click open file in new tab</div>\n                          <div className=\"nowrap pv2 shortcut-plus\">\n                              <span className=\"keyboard-key ml2 ph1\">${\n                                osfunction() === OSType.MacOS ? \"⌘\" : \"Ctrl\"\n                              }</span>\n                              <span className=\"keyboard-key ml2 ph1\">Click the link of imports</span>\n                          </div>\n                      </div>\n                  <//>\n              <//>\n          </div>`;\n})","pinCode":false,"dname":"a7929e0f-952e-40b3-a9ff-daba4c772c1d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"OSType = {return {\n  Windows: \"Windows\",\n  MacOS: \"MacOS\",\n  UNIX: \"UNIX\",\n  Linux: \"Linux\",\n  Unkown: \"Unkown\",\n}}","pinCode":false,"dname":"17403dff-ca03-4010-b937-f056d4b1e980","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function osfunction() {\n  let os = navigator.userAgent;\n  let finalOs = OSType.Unkown;\n  if (os.search('Windows') !== -1) {\n    finalOs = OSType.Windows;\n  }\n  else if (os.search('Mac') !== -1) {\n    finalOs = OSType.MacOS;\n  }\n  else if (os.search('X11') !== -1 && !(os.search('Linux') !== -1)) {\n    finalOs = OSType.UNIX;\n  }\n  else if (os.search('Linux') !== -1 && os.search('X11') !== -1) {\n    finalOs = OSType.Linux\n  }\n\n  return finalOs;\n}","pinCode":false,"dname":"34e5fd9c-fc24-4044-b28a-19b21ff7c891","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"keyMap = {\n  return {\n    file_actions_keys: {\n      desc: \"Shortcuts for operating on the file system.\",\n      keys: {\n        \"Import Files\": { title: \"Import Files\", keys: [\"Ctrl\", \"Alt\", \"I\"] },\n        \"New File\": { title: \"New File\", keys: [\"Ctrl\", \"Alt\", \"N\"] },\n        \"Duplicate Selected File/Folder\": {\n          title: \"Duplicate Selected File/Folder\",\n          keys: [\"Ctrl\", \"Alt\", \"C\"],\n        },\n        \"Remove Selected File/Folder\": {\n          title: \"Remove Selected File/Folder\",\n          keys: [\"Delete\"],\n        },\n        \"Rename Selected File\": { title: \"Rename Selected File\", keys: [\"F2\"] },\n        \"Download Current File\": {\n          title: \"Download Current File\",\n          keys: [\"Ctrl\", \"Shift\", \"E\"],\n        },\n        \"Download All Files\": {\n          title: \"Download All Files\",\n          keys: [\"Ctrl\", \"Alt\", \"A\"],\n        },\n        \"Upload Current File\": {\n          title: \"Upload Current File\",\n          keys: [\"Ctrl\", \"Alt\", \"S\"],\n        },\n      },\n    },\n    code_editor_keys: {\n      desc:\n        \"Use keyboard for auto-complete, auto-identation, commenting and more.\",\n      keys: {\n        \"Select all\": {\n          title: \"Select all\",\n          keys: [\"Ctrl\", \"A\"],\n          iosKeys: [\"⌘\", \"A\"],\n        },\n        \"Undo last change\": {\n          title: \"Undo last change\",\n          keys: [\"Ctrl\", \"Z\"],\n          iosKeys: [\"⌘\", \"Z\"],\n        },\n        \"Redo the last undone change\": {\n          title: \"Redo the last undone change\",\n          keys: [\"Ctrl\", \"Y\"],\n          iosKeys: [\"⌘\", \"Y\"],\n        },\n        \"Select all\": {\n          title: \"Select all\",\n          keys: [\"Ctrl\", \"A\"],\n          iosKeys: [\"⌘\", \"A\"],\n        },\n        \"Show Editor LineNumbers\": {\n          title: \"Show Editor LineNumbers\",\n          keys: [\"Ctrl\", \"L\"],\n          iosKeys: [\"⌘\", \"L\"],\n        },\n        \"Delete Current Line\": {\n          title: \"Delete Current Line\",\n          keys: [\"Ctrl\", \"D\"],\n          iosKeys: [\"⌘\", \"D\"],\n        },\n        \"Comment Lines\": {\n          title: \"Comment Lines\",\n          keys: [\"Ctrl\", \"/\"],\n          iosKeys: [\"⌘\", \"/\"],\n        },\n        \"Format Code\": { title: \"Format Code\", keys: [\"Alt\", \"F\"] },\n        \"Fold Code\": { title: \"Fold Code\", keys: [\"Ctrl\", \"Alt\", \"L\"] },\n        \"Jump to error cell\": {\n          title: \"Jump to error cell\",\n          keys: [\"Ctrl\", \"Alt\", \"G\"],\n        },\n        \"Jump to defining cell\": {\n          title: \"Jump to defining cell\",\n          keys: [\"Ctrl\", \"Alt\", \"J\"],\n        },\n        \"Full Screen\": { title: \"Full Screen\", keys: [\"F10\"] },\n        \"Auto-indent\": {\n          title: \"Auto-indent the current line or selection\",\n          keys: [\"Shift\", \"Tab\"],\n        },\n        \"Auto-complete\": { title: \"Auto-complete\", keys: [\"Alt\", \"/\"] },\n        \"Find and replace\": {\n          title: \"Find and replace\",\n          keys: [\"Ctrl\", \"Shift\", \"F\"],\n        },\n        \"Replace Current\": {\n          title: \"Replace Current\",\n          keys: [\"Ctrl\", \"Shift\", \"R\"],\n          iosKeys: [\"⌘\", \"Shift\", \"R\"],\n        },\n        \"Find Current\": {\n          title: \"Find Current\",\n          keys: [\"Ctrl\", \"Alt\", \"L\"],\n          iosKeys: [\"⌘\", \"Alt\", \"L\"],\n        },\n      },\n    },\n    cell_shortcuts_keys: {\n      desc: \"Commands operating on the cell itself.\",\n      keys: {\n        \"Run Current Cell\": {\n          title: \"Run Current Cell\",\n          keys: [\"Shift\", \"Enter\"],\n        },\n        \"Force Run Current Cell\": {\n          title: \"Force Run Current Cell\",\n          keys: [\"Ctrl\", \"Enter\"],\n        },\n        \"Delete Current Cell\": {\n          title: \"Delete Current Cell\",\n          keys: [\"Ctrl\", \"Alt\", \"D\"],\n        },\n        \"Insert cell above\": {\n          title: \"Insert cell above\",\n          keys: [\"Alt\", \"ArrowUp\"],\n        },\n        \"Insert cell below\": {\n          title: \"Insert cell below\",\n          keys: [\"Alt\", \"ArrowDown\"],\n        },\n        \"Move Cell Up\": {\n          title: \"Move Cell Up\",\n          keys: [\"Ctrl\", \"Alt\", \"ArrowUp\"],\n        },\n        \"Move Cell Down\": {\n          title: \"Move Cell Down\",\n          keys: [\"Ctrl\", \"Alt\", \"ArrowDown\"],\n        },\n        \"Go Back Editing Cell\": {\n          title: \"Go Previous Editing Cell\",\n          keys: [\"Ctrl\", \"Alt\", \"ArrowLeft\"],\n        },\n        \"Go Forward Editing Cell\": {\n          title: \"Go Forward Editing Cell\",\n          keys: [\"Ctrl\", \"Alt\", \"ArrowRight\"],\n        },\n        \"Focus Previous Editable Cell\": {\n          title: \"Focus Previous Editable Cell\",\n          keys: [\"Ctrl\", \"ArrowUp\"],\n          osKeys: [\"⌘\", \"ArrowUp\"],\n        },\n        \"Focus Next Editable Cell\": {\n          title: \"Focus Next Editable Cell\",\n          keys: [\"Ctrl\", \"ArrowDown\"],\n          osKeys: [\"⌘\", \"ArrowDown\"],\n        },\n        \"Open Cell Toolbar\": {\n          title: \"Open Cell Toolbar\",\n          keys: [\"Ctrl\", \"Q\"],\n        },\n        \"Pin/Unpin Cell\": { title: \"Pin/Unpin Cell\", keys: [\"Alt\", \"P\"] },\n        \"Clear Selection\": { title: \"Clear Selection\", keys: [\"Escape\"] },\n        \"New Sub Block\": {\n          title: \"New Sub Block\",\n          keys: [\"Ctrl\", \"Shift\", \"L\"],\n        },\n      },\n    },\n    markdown_shortcuts_keys: {\n      desc: \"Commands when edit markdown code.\",\n      keys: {\n        Bold: { title: \"Bold\", keys: [\"Ctrl\", \"B\"] },\n        Italic: { title: \"Italic\", keys: [\"Ctrl\", \"I\"] },\n        Strikethrough: { title: \"Strikethrough\", keys: [\"Shift\", \"Alt\", \"5\"] },\n        Link: { title: \"Link\", keys: [\"Ctrl\", \"K\"] },\n        \"Numbered list\": {\n          title: \"Numbered list\",\n          keys: [\"Ctrl\", \"Shift\", \"7\"],\n        },\n        \"Bulleted list\": {\n          title: \"Numbered list\",\n          keys: [\"Ctrl\", \"Shift\", \"8\"],\n        },\n        \"Clear heading\": { title: \"Clear heading\", keys: [\"Ctrl\", \"Alt\", \"0\"] },\n        \"Monospaced font (code)\": {\n          title: \"Monospaced font (code)\",\n          keys: [\"Ctrl\", \"Shift\", \"C\"],\n        },\n      },\n    },\n    window_shortcuts_keys: {\n      desc: \"Commands operating on the windows.\",\n      keys: {\n        \"Search GraphXR API Docs\": {\n          title: \"Search GraphXR API Docs\",\n          keys: [\"Ctrl\", \"Alt\", \"K\"],\n        },\n        \"Open File Explorer\": {\n          title: \"Open File Explorer\",\n          keys: [\"Ctrl\", \"Alt\", \"O\"],\n        },\n        \"Open Explore Pane\": {\n          title: \"Open Explore Pane\",\n          keys: [\"Ctrl\", \"Alt\", \"E\"],\n        },\n        \"Open Settings Pane\": {\n          title: \"Open Settings Pane\",\n          keys: [\"Ctrl\", \"Alt\", \"X\"],\n        },\n        \"Full Screen\": { title: \"Full Screen\", keys: [\"Ctrl\", \"Alt\", \"Enter\"] },\n        \"Escape Full Screen\": { title: \"Escape Full Screen\", keys: [\"Escape\"] },\n        \"Drawer Full Screen\": {\n          title: \"Drawer Full Screen\",\n          keys: [\"Ctrl\", \"F10\"],\n        },\n        \"Focus Selected Chart\": {\n          title: \"Focus Selected Chart\",\n          keys: [\"Ctrl\", \"Alt\", \"J\"],\n        },\n        \"Help?\": { title: \"Help?\", keys: [\"Ctrl\", \"Alt\", \"H\"] },\n        \"Open Data Pane\": {\n          title: \"Open Data Pane\",\n          keys: [\"Ctrl\", \"Alt\", \"U\"],\n        },\n        \"System PDF Print\": { title: \"System PDF Print\", keys: [\"Ctrl\", \"P\"] },\n        \"PDF Print\": { title: \"PDF Print\", keys: [\"Ctrl\", \"Alt\", \"P\"] },\n        \"Filter Files\": { title: \"Filter Files\", keys: [\"Ctrl\", \"Alt\", \"R\"] },\n      },\n    },\n  };\n}","pinCode":false,"dname":"878e95a4-d06c-41fc-a5bb-fa4d090906dd","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":" osKeys = function (value) {\n  return osfunction() === OSType.MacOS ? (value.iosKeys || value.keys) : value.keys\n}","pinCode":false,"dname":"be8bcd26-dd62-4be2-a165-20728d77d033","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import {jsx, render, useState, component, useEffect } from \"https://grove-help.graphxr.com/react/react\"","pinCode":false,"dname":"406b7988-ed31-4e20-92fa-241ad9bf0fdf","codeMode":"javascript2"}}}],"version":"2.19.1"}