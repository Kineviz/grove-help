{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"# Ant design version ${Antd.version}","pinCode":false,"dname":"ad3a1c00-6d2f-4217-be2d-7af8f4b05fd6","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"if want a more detail about using ant design in developing react app, please visit [ant design site](https://4x.ant.design/components/overview-cn/). notice that, in grove now support antd version is ${Antd.version}.","pinCode":false,"dname":"249b8db0-de55-4fe9-98e3-5b00a87cf398","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"## React App Key\nEach react app need a unique key within the root element properties, or it will not render right. We use ```uuidv4``` to generate the key. When copy the react app code cell to another position in grove, then the new code cell will reset the key.","pinCode":false,"dname":"3e14ae49-e3fc-4da0-a393-6c1510a636e4","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"key_in_react_app$png = FileAttachment(\"key_in_react_app.png\").image()","pinCode":false,"dname":"00c65601-bf2d-4eec-a698-37c28b5edc2b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"While if copy a file the uuid in the file will not reset, we can use the menu show below to regenerate the uuid in the copy file. Then the two file's key will not conflict and the view will display right.","pinCode":false,"dname":"25180958-cda4-497e-928a-45ade0b5d006","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"regenerate_UUID$png = FileAttachment(\"regenerate_UUID.png\").image()","pinCode":false,"dname":"125cdc72-bf1c-4fab-86bd-aa866946e0ab","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"## &nbsp","pinCode":false,"dname":"10fef4c1-7048-4ac3-8e0d-6fa8df79b4e7","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({})=>{\n\treturn jsx`space${'\\u00A0\\u00A0\\u00A0'}space`\n})","pinCode":false,"dname":"56da5044-9083-4cff-a1ab-fd715acdef8a","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Button","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_1 = render(({ useSetter }) => {\n  const { Button } = Antd;\n  const App = () => (\n    jsx`<${Fragment} key='1e1125aa-96b3-42fa-b729-b37d650e6b5d'>\n      <${Button} type=\"primary\">Primary Button<//>\n      <${Button}>Default Button<//>\n      <${Button} type=\"dashed\">Dashed Button<//>\n      <br />\n      <${Button} type=\"text\">Text Button<//>\n      <${Button} type=\"link\">Link Button<//>\n    <//>`\n  );\n  return jsx`<${App} />`;\n})","pinCode":false,"dname":"4515a79e-4597-4529-a000-23be69a68970","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_2 = render(({ useSetter }) => {\n    const { DownloadOutlined } = AntdIcons;\n    const { Button, Radio } = Antd;\n    const App = () => {\n      const [size, setSize] = useState('large');\n      return (\n        jsx`<${Fragment} key='b4aa013b-1a88-4d08-beda-94304b5f59ae'>\n          <${Radio.Group} value=${size} onChange=${(e) => setSize(e.target.value)}>\n            <${Radio.Button} value=\"large\">Large<//>\n            <${Radio.Button} value=\"default\">Default<//>\n            <${Radio.Button} value=\"small\">Small<//>\n          <//>\n          <br />\n          <br />\n          <${Button} type=\"primary\" size=${size}>\n            Primary\n          <//>\n          <${Button} size=${size}>Default<//>\n          <${Button} type=\"dashed\" size=${size}>\n            Dashed\n          <//>\n          <br />\n          <${Button} type=\"link\" size=${size}>\n            Link\n          <//>\n          <br />\n          <${Button} type=\"primary\" icon=${jsx`<${DownloadOutlined} />`} size=${size} />\n          <${Button} type=\"primary\" shape=\"circle\" icon=${jsx`<${DownloadOutlined} />`} size=${size} />\n          <${Button} type=\"primary\" shape=\"round\" icon=${jsx`<${DownloadOutlined} />`} size=${size} />\n          <${Button} type=\"primary\" shape=\"round\" icon=${jsx`<${DownloadOutlined} />`} size=${size}>\n            Download\n          <//>\n          <${Button} type=\"primary\" icon=${jsx`<${DownloadOutlined} />`} size=${size}>\n            Download\n          <//>\n        <//>`\n      );\n    };\n    return jsx`<${App} /> `;\n})","pinCode":false,"dname":"cff8127e-030e-4592-9359-d13114a20f2a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_3 = render(({ useSetter }) => {\n  const {SearchOutlined} = AntdIcons\n  const { Button } = Antd;\n  const [step_number, setStep_number] = useState(1);\n  const update_step_number = (d) => setStep_number(step_number+1);\n  useSetter({ step_number });\n  return jsx`<${Button} key='9e9fe3b4-f74d-4e06-8d9c-0ba2741bdf18' onClick=${update_step_number}  >Click Me<//> `;\n})","pinCode":false,"dname":"99bd03de-cf8d-42df-aa99-493bf54ac0ba","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_4 = render(({ useSetter }) => {\n  const { UploadOutlined } = AntdIcons;\n  const { Button, Popconfirm, Space, Upload } = Antd;\n  const App = () => (\n    jsx`<${Space} key='5651e2c1-3ee0-49dc-99f7-2f9d15ae1bb2'>\n      Space\n      <${Button} type=\"primary\">Button<//>\n      <${Upload}>\n        <${Button}>\n          <${UploadOutlined} /> Click to Upload\n        <//>\n      <//>\n      <${Popconfirm} title=\"Are you sure delete this task?\" okText=\"Yes\" cancelText=\"No\">\n        <${Button}>Confirm</Button>\n      <//>\n    <//>`\n  );\n  return jsx`<${App} />`;\n})","pinCode":false,"dname":"ebdad04e-ff26-4126-98a2-05e40eadc242","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Icon","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof icon_1 = render(({ useSetter }) => {\n   const {\n    HomeOutlined,\n    LoadingOutlined,\n    SettingFilled,\n    SmileOutlined,\n    SyncOutlined,\n  } = AntdIcons;\n  const { Space } = Antd;\n  const App = () => (\n    jsx`<${Space} key='dd18f54b-6e37-4080-80de-1e8150352bf9'>\n      <${HomeOutlined} />\n      <${SettingFilled} />\n      <${SmileOutlined} />\n      <${SyncOutlined} spin />\n      <${SmileOutlined} rotate=${180} />\n      <${LoadingOutlined} />\n    <//>`\n  );\n  return jsx`<${App} />`;\n})","pinCode":false,"dname":"bb53ab67-0e9a-403e-b720-acee0bfa3bc7","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Typography","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof typo_1 = render(({ useSetter }) => {\n    const { Typography } = Antd;\n  const { Title } = Typography;\n  const App = () => (\n    jsx`<${Fragment} key='bc0ea925-67bb-4d09-9b13-04fb5190666b'>\n      <${Title}>h1. Ant Design<//>\n      <${Title} level=${2}>h2. Ant Design<//>\n      <${Title} level=${3}>h3. Ant Design<//>\n      <${Title} level=${4}>h4. Ant Design<//>\n      <${Title} level=${5}>h5. Ant Design<//>\n    <//>`\n  );\n return jsx`<${App} />`;\n})","pinCode":false,"dname":"83290a24-fe87-4460-99d5-8c9a9335c36f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof typo_2 = render(({ useSetter }) => {\n  const { Space, Typography } = Antd;\n  const { Text, Link } = Typography;\n  const App = () => (\n    jsx`<${Space} key='0a54b4d3-2e9f-4f9d-abeb-f583de928d03' direction=\"vertical\">\n      <${Text}>Ant Design (default)<//>\n      <${Text} type=\"secondary\">Ant Design (secondary)<//>\n      <${Text} type=\"success\">Ant Design (success)<//>\n      <${Text} type=\"warning\">Ant Design (warning)<//>\n      <${Text} type=\"danger\">Ant Design (danger)<//>\n      <${Text} disabled>Ant Design (disabled)<//>\n      <${Text} mark>Ant Design (mark)<//>\n      <${Text} code>Ant Design (code)<//>\n      <${Text} keyboard>Ant Design (keyboard)<//>\n      <${Text} underline>Ant Design (underline)<//>\n      <${Text} delete>Ant Design (delete)<//>\n      <${Text} strong>Ant Design (strong)<//>\n      <${Text} italic>Ant Design (italic)<//>\n      <${Link} href=\"https://ant.design\" target=\"_blank\">\n        Ant Design (Link)\n      <//>\n    <//>`\n  );\n  return jsx`<${App} />`;\n})","pinCode":false,"dname":"007884eb-923f-4722-9967-14287eec9257","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof typo_3 = render(({ useSetter }) => {\n  const { CheckOutlined, HighlightOutlined, SmileFilled, SmileOutlined } = AntdIcons;\n  const { Divider, Radio, Typography } = Antd;\n  const { Paragraph } = Typography;\n  const App = () => {\n    const [editableStr, setEditableStr] = useState('This is an editable text.');\n    const [editableStrWithSuffix, setEditableStrWithSuffix] = useState(\n      'This is a loooooooooooooooooooooooooooooooong editable text with suffix.',\n    );\n    const [editableStrWithSuffixStartPart, editableStrWithSuffixSuffixPart] = useMemo(\n      () => [editableStrWithSuffix.slice(0, -12), editableStrWithSuffix.slice(-12)],\n      [editableStrWithSuffix],\n    );\n    const [customIconStr, setCustomIconStr] = useState('Custom Edit icon and replace tooltip text.');\n    const [clickTriggerStr, setClickTriggerStr] = useState(\n      'Text or icon as trigger - click to start editing.',\n    );\n    const [chooseTrigger, setChooseTrigger] = useState(['icon']);\n    const [customEnterIconStr, setCustomEnterIconStr] = useState(\n      'Editable text with a custom enter icon in edit field.',\n    );\n    const [noEnterIconStr, setNoEnterIconStr] = useState(\n      'Editable text with no enter icon in edit field.',\n    );\n    const [hideTooltipStr, setHideTooltipStr] = useState('Hide Edit tooltip.');\n    const [lengthLimitedStr, setLengthLimitedStr] = useState(\n      'This is an editable text with limited length.',\n    );\n    const radioToState = (input) => {\n      switch (input) {\n        case 'text':\n          return ['text'];\n        case 'both':\n          return ['icon', 'text'];\n        case 'icon':\n        default:\n          return ['icon'];\n      }\n    };\n    const stateToRadio = () => {\n      if (chooseTrigger.indexOf('text') !== -1) {\n        return chooseTrigger.indexOf('icon') !== -1 ? 'both' : 'text';\n      }\n      return 'icon';\n    };\n    return (\n      jsx`<${Fragment} key='e8d9f3e1-c807-459c-b4ce-2a7f0e4e96bf'>\n        <${Paragraph}\n          editable=${{\n            onChange: setEditableStr,\n          }}\n        >\n          ${editableStr}\n        <//>\n        <${Paragraph}\n          editable=${{\n            onChange: setEditableStrWithSuffix,\n            text: editableStrWithSuffix,\n          }}\n          ellipsis=${{\n            suffix: editableStrWithSuffixSuffixPart,\n          }}\n        >\n          ${editableStrWithSuffixStartPart}\n        <//>\n        <${Paragraph}\n          editable=${{\n            icon: jsx`<${HighlightOutlined} />`,\n            tooltip: 'click to edit text',\n            onChange: setCustomIconStr,\n          }}\n        >\n          ${customIconStr}\n        <//>\n        Trigger edit with:{' '}\n        <${Radio.Group}\n          onChange=${(e) => setChooseTrigger(radioToState(e.target.value))}\n          value=${stateToRadio()}\n        >\n          <${Radio} value=\"icon\">icon<//>\n          <${Radio} value=\"text\">text<//>\n          <${Radio} value=\"both\">both<//>\n        <//>\n        <${Paragraph}\n          editable=${{\n            tooltip: 'click to edit text',\n            onChange: setClickTriggerStr,\n            triggerType: chooseTrigger,\n          }}\n        >\n          ${clickTriggerStr}\n        <//>\n        <${Paragraph}\n          editable=${{\n            icon: jsx`<${HighlightOutlined} />`,\n            tooltip: 'click to edit text',\n            onChange: setCustomEnterIconStr,\n            enterIcon: jsx`<${CheckOutlined} />`,\n          }}\n        >\n          ${customEnterIconStr}\n        <//>\n        <${Paragraph}\n          editable=${{\n            icon: jsx`<${HighlightOutlined} />`,\n            tooltip: 'click to edit text',\n            onChange: setNoEnterIconStr,\n            enterIcon: null,\n          }}\n        >\n          ${noEnterIconStr}\n        <//>\n        <${Paragraph}\n          editable=${{\n            tooltip: false,\n            onChange: setHideTooltipStr,\n          }}\n        >\n          ${hideTooltipStr}\n        <//>\n        <${Paragraph}\n          editable=${{\n            onChange: setLengthLimitedStr,\n            maxLength: 50,\n            autoSize: {\n              maxRows: 5,\n              minRows: 3,\n            },\n          }}\n        >\n          ${lengthLimitedStr}\n        <//>\n        <${Typography.Title}\n          editable\n          level=${1}\n          style=${{\n            margin: 0,\n          }}\n        >\n          h1. Ant Design\n        <//>\n        <${Typography.Title}\n          editable\n          level=${2}\n          style=${{\n            margin: 0,\n          }}\n        >\n          h2. Ant Design\n        <//>\n        <${Typography.Title}\n          editable\n          level=${3}\n          style=${{\n            margin: 0,\n          }}\n        >\n          h3. Ant Design\n        <//>\n        <${Typography.Title}\n          editable\n          level=${4}\n          style=${{\n            margin: 0,\n          }}\n        >\n          h4. Ant Design\n        <//>\n        <${Typography.Title}\n          editable\n          level=${5}\n          style=${{\n            margin: 0,\n          }}\n        >\n          h5. Ant Design\n        <//>\n        <${Divider} />\n        <${Paragraph} copyable>This is a copyable text.<//>\n        <${Paragraph}\n          copyable=${{\n            text: 'Hello, Ant Design!',\n          }}\n        >\n          Replace copy text.\n        <//>\n        <${Paragraph}\n          copyable=${{\n            icon: [jsx`<${SmileOutlined} key=\"copy-icon\" />`, `<${SmileFilled} key=\"copied-icon\" />`],\n            tooltips: ['click here', 'you clicked!!'],\n          }}\n        >\n          Custom Copy icon and replace tooltips text.\n        <//>\n        <${Paragraph}\n          copyable=${{\n            tooltips: false,\n          }}\n        >\n          Hide Copy tooltips.\n        <//>\n      <//>`\n    );\n  };\n  return jsx`<${App} />`;\n})","pinCode":false,"dname":"8aecb9aa-1d29-4764-9dcc-ddb43650e0bb","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Breadcrumb","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof breadcrumb_1 = render(({ useSetter }) => {\n  const { Breadcrumb,Menu,Space,Dropdown } = Antd;\n  const { SmileOutlined,DownOutlined } = AntdIcons;\n  const items = [\n    {\n      key: '1',\n      label: (\n        jsx`<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\">\n          General\n        </a>`\n      ),\n    },\n    {\n      key: '2',\n      label: (\n        jsx`<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.taobao.com/\">\n          Layout\n        </a>`\n      ),\n    },\n    {\n      key: '3',\n      label: (\n        jsx`<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.tmall.com/\">\n          Navigation\n        </a>`\n      ),\n    },\n  ];\n  const Item = Menu.Item;\n  const menu =  jsx`<${Menu} key='e343ca21-9e6b-43ef-8e5d-5305415f52c5'>\n        <${Item}>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\n            1st menu item\n          </a>\n        <//>\n        <${Item} disabled icon=${jsx`<${SmileOutlined}><//>`}>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.aliyun.com\">\n            2nd menu item (disabled)\n          </a>\n        <//>\n        <${Item} disabled>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.luohanacademy.com\">\n            3rd menu item (disabled)\n          </a>\n        <//>\n        <${Item} danger>a danger item<//>\n      <//>`;\n  const App = () => (\n    jsx`<${Breadcrumb} key='94a37ae5-16cb-4435-8c4d-15c68ac12f36'>\n      <${Breadcrumb.Item}>Ant Design<//>\n      <${Breadcrumb.Item}>\n        <a href=\"#\">Component</a>\n      <//>\n      <${Breadcrumb.Item}>\n        <${Dropdown} overlay=${menu}>\n          <a onClick=${(e) => e.preventDefault()}>\n              General <${DownOutlined}><//>\n          </a>\n      \t<//>\n      <//>\n      <${Breadcrumb.Item}>Button<//>\n    <//>`\n  );\n  return jsx`<${App} />`;\n})","pinCode":false,"dname":"887501c0-91e0-4790-9a35-4f9e03aa6387","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Dropdown","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof dropdown_1 = render(({ useSetter }) => {\n    const { DownOutlined, SmileOutlined } = AntdIcons;\n    const { Dropdown, Menu, Space } = Antd;\n    const Item = Menu.Item;\n    const menu =  jsx`<${Menu}>\n        <${Item}>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\n            1st menu item\n          </a>\n        <//>\n        <${Item} disabled icon=${jsx`<${SmileOutlined}><//>`}>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.aliyun.com\">\n            2nd menu item (disabled)\n          </a>\n        <//>\n        <${Item} disabled>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.luohanacademy.com\">\n            3rd menu item (disabled)\n          </a>\n        <//>\n        <${Item} danger>a danger item<//>\n      <//>`;\n      return jsx`<${Dropdown} key='1095f36a-c1ff-48e9-9dd7-cc663255476a' overlay=${menu}>\n        <a onClick=${(e) => e.preventDefault()}>\n          <${Space}>\n            Hover me\n            <${DownOutlined}><//>\n          <//>\n        </a>\n      <//>`\n    });","pinCode":false,"dname":"154d5199-08ea-40da-84ed-f015c17e6be8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof dropdown_2 = render(({ useSetter }) => {\n    const { DownOutlined, SmileOutlined } = AntdIcons;\n    const { Dropdown, Menu, Space } = Antd;\n    const Item = Menu.Item;\n     const items = [\n        {\n          key: '1',\n          label: (\n            jsx`<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\n              1st menu item\n            </a>`\n          ),\n        },\n        {\n          key: '2',\n          label: (\n            jsx`<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.aliyun.com\">\n              2nd menu item (disabled)\n            </a>`\n          ),\n          icon: jsx`<${SmileOutlined} />`,\n          disabled: true,\n        },\n        {\n          key: '3',\n          label: (\n            jsx`<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.luohanacademy.com\">\n              3rd menu item (disabled)\n            </a>`\n          ),\n          disabled: true,\n        },\n        {\n          key: '4',\n          danger: true,\n          label: 'a danger item',\n        },\n      ];\n  \t  const menu2 =  jsx`<${Menu}>\n        ${items.map(item=>{\n\t\t\treturn jsx`<${Item} key=${item.key} danger=${!!item.danger} disabled=${!!item.disabled} icon=${item.icon}>\n              ${item.label}\n            <//>`\n        })}\n      <//>`\n      return jsx`<${Dropdown} key='e3ea5764-ad6a-4528-b424-a031a71ee0e2' overlay=${menu2}>\n        <a onClick=${(e) => e.preventDefault()}>\n          <${Space}>\n            Hover me\n            <${DownOutlined}><//>\n          <//>\n        </a>\n      <//>`\n    });","pinCode":false,"dname":"12a2922d-f736-465f-81f1-8993bb227001","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Menu","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof menu_1 = render(({ useSetter }) => {\n    const { Menu } = Antd;\n    const { MailOutlined, AppstoreOutlined, SettingOutlined } = AntdIcons;\n    return  jsx`<${Menu} key='8fafda15-0229-4e86-9c7a-e8b71e89fbc0' mode=\"horizontal\" defaultSelectedKeys=${['mail']}>\n        <${Menu.Item} key=\"mail\" icon=${jsx`<${MailOutlined} />`}>\n          Navigation One\n        <//>\n        <${Menu.SubMenu} key=\"SubMenu_1\" title=\"Navigation Two - Submenu\" icon=${jsx`<${SettingOutlined} />`}>\n          <${Menu.Item} key=\"two\" icon=${jsx`<${AppstoreOutlined} />`}>\n            Navigation Two\n          <//>\n          <${Menu.Item} key=\"three\" icon=${jsx`<${AppstoreOutlined} />`}>\n            Navigation Three\n          <//>\n          <${Menu.ItemGroup} title=\"Item Group\">\n            <${Menu.Item} key=\"four\" icon=${jsx`<${AppstoreOutlined} />`}>\n              Navigation Four\n            <//>\n            <${Menu.Item} key=\"five\" icon=${jsx`<${AppstoreOutlined} />`}>\n              Navigation Five\n            <//>\n          <//>\n        <//>\n      <//>`;\n    });","pinCode":false,"dname":"219b8c41-a459-48b0-8cd3-f4a9f9997ca4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"MenuItems = (items)=>{\n  const { Button, Menu } = Antd;\n  const {Item, SubMenu,ItemGroup} = Menu;\n\treturn items.map((item)=>{\n            if(item.children&&item.children.length){\n              return jsx`<${SubMenu} key='${item.key}' title=${item.label} icon=${item.icon}>\n                  ${item.children.map((citem)=>{\n                    if(citem.children&&citem.children.length) {\n                      return jsx`<${ItemGroup} key='${citem.key}' title=${citem.label}>\n                        ${citem.children.map((gitem)=>{\n                              return  jsx`<${Item} key='${gitem.key}' icon=${gitem.icon} disabled=${!!gitem.disabled}>\n                                ${gitem.label}\n                              <//>`\n                            })\n                          }\n                      <//>`\n                    } else {\n                      return  jsx`<${Item} key='${citem.key}' icon=${citem.icon} disabled=${!!citem.disabled}>\n                        ${citem.label}\n                      <//>`\n                    }\n                  })}\n              <//>`\n            }else{\n              return jsx`<${Item} key='${item.key}' icon=${item.icon} disabled=${!!item.disabled}>\n                ${item.label}\n              <//>`\n            }\n          })\n}","pinCode":false,"dname":"9774fd57-75ce-46cf-8270-54d18f437ac8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof menu_2 = render(({ useSetter }) => {\n    const { Menu } = Antd;\n    const { MailOutlined, AppstoreOutlined, SettingOutlined } = AntdIcons;\n    const items = [\n      {\n        label: 'Navigation One',\n        key: 'mail',\n        icon: jsx`<${MailOutlined} />`,\n      },\n      {\n        label: 'Navigation Two',\n        key: 'app',\n        icon: jsx`<${AppstoreOutlined} />`,\n        disabled: true,\n      },\n      {\n        label: 'Navigation Three - Submenu',\n        key: 'SubMenu_2',\n        icon: jsx`<${SettingOutlined} />`,\n        children: [\n          {\n            type: 'group',\n            key: 'group-1',\n            label: 'Item 1',\n            children: [\n              {\n                label: 'Option 1',\n                key: 'setting:1',\n              },\n              {\n                label: 'Option 2',\n                key: 'setting:2',\n              },\n            ],\n          },\n          {\n            type: 'group',\n            key: 'group-2',\n            label: 'Item 2',\n            children: [\n              {\n                label: 'Option 3',\n                key: 'setting:3',\n              },\n              {\n                label: 'Option 4',\n                key: 'setting:4',\n              },\n            ],\n          },\n        ],\n      },\n      {\n        label: (\n          jsx`<a href=\"https://ant.design\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Navigation Four - Link\n          </a>`\n        ),\n        key: 'alipay',\n      },\n    ];\n  const {Item, SubMenu,ItemGroup} = Menu;\n  return  jsx`<${Menu} key='769d31f4-2273-4aeb-870b-57008f359802' mode=\"horizontal\" defaultSelectedKeys=${['mail']}>\n          ${MenuItems(items)}\n  <//>`;\n});","pinCode":false,"dname":"adce5997-b1cb-424f-8de0-068d211a9888","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof menu_3 = render(({ useSetter }) => {\n    const { Menu } = Antd;\n    const { MailOutlined, AppstoreOutlined, SettingOutlined } = AntdIcons;\n    function getItem(label, key, icon, children, type) {\n      return {\n        key,\n        icon,\n        children,\n        label,\n        type,\n      };\n    }\n    const items = [\n      getItem('Navigation One', 'sub1', jsx`<${MailOutlined} />`, [\n        getItem('Item 1', 'g1', null, [getItem('Option 1', '1'), getItem('Option 2', '2')], 'group'),\n        getItem('Item 2', 'g2', null, [getItem('Option 3', '3'), getItem('Option 4', '4')], 'group'),\n      ]),\n      getItem('Navigation Two', 'sub2', jsx`<${AppstoreOutlined} />`, [\n        getItem('Option 5', '5'),\n        getItem('Option 6', '6'),\n        getItem('Submenu', 'sub3', null, [getItem('Option 7', '7'), getItem('Option 8', '8')]),\n      ]),\n      getItem('Navigation Three', 'sub4', jsx`<${SettingOutlined} />`, [\n        getItem('Option 9', '9'),\n        getItem('Option 10', '10'),\n        getItem('Option 11', '11'),\n        getItem('Option 12', '12'),\n      ]),\n    ];\n    const onClick = (e) => {\n      console.log('click ', e);\n    };\n    const {Item, SubMenu,ItemGroup} = Menu;\n    return  jsx`<${Menu} key='968c4888-658d-4b6e-9b52-8db733bd1384' onClick=${onClick}\n      style=${{\n        width: 256,\n      }}\n      defaultSelectedKeys=${['sub2']}\n      defaultOpenKeys=${['sub1']}\n      mode=\"inline\">\n          ${MenuItems(items)}\n      <//>`;\n    });","pinCode":false,"dname":"57454ba0-c053-4bd6-851b-51b74bb32f36","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof menu_4 = render(({ useSetter }) => {\n    const { Button, Menu } = Antd;\n    const {Item, SubMenu,ItemGroup} = Menu;\n    const { AppstoreOutlined,\n      ContainerOutlined,\n      DesktopOutlined,\n      MailOutlined,\n      MenuFoldOutlined,\n      MenuUnfoldOutlined,\n      PieChartOutlined } = AntdIcons;\n  \tfunction getItem(label, key, icon, children, type) {\n      return {\n        key,\n        icon,\n        children,\n        label,\n        type,\n      };\n    }\n    const items = [\n      getItem('Option 1', '1', jsx`<${PieChartOutlined} />`),\n      getItem('Option 2', '2', jsx`<${DesktopOutlined} />`),\n      getItem('Option 3', '3', jsx`<${ContainerOutlined} />`),\n      getItem('Navigation One', 'sub_1_1', jsx`<${MailOutlined} />`, [\n        getItem('Option 5', '5'),\n        getItem('Option 6', '6'),\n        getItem('Option 7', '7'),\n        getItem('Option 8', '8'),\n      ]),\n      getItem('Navigation Two', 'sub_2_1', jsx`<${AppstoreOutlined} />`, [\n        getItem('Option 9', '9'),\n        getItem('Option 10', '10'),\n        getItem('Submenu', 'sub_3_1', null, [getItem('Option 11', '11'), getItem('Option 12', '12')]),\n      ]),\n    ];\n    const App = () => {\n        const [collapsed, setCollapsed] = useState(false);\n        const toggleCollapsed = () => {\n          setCollapsed(!collapsed);\n        };\n        return (\n          jsx`<div key='988f761a-9024-4be5-86a4-b1c92dbc7643'\n            style=${{\n              width: 256,\n            }}\n          >\n            <${Button}\n              type=\"primary\"\n              onClick=${toggleCollapsed}\n              style=${{\n                marginBottom: 16,\n              }}\n            >\n              ${collapsed ? jsx`<${MenuUnfoldOutlined} />` : jsx`<${MenuFoldOutlined} />`}\n            <//>\n            <${Menu} key=\"menu_13\"\n              defaultSelectedKeys=${['1']}\n              defaultOpenKeys=${['sub_1_1']}\n              mode=\"inline\"\n              theme=\"dark\"\n              inlineCollapsed=${collapsed}\n            >\n              ${MenuItems(items)}\n            <//>\n          </div>`\n        );\n      };\n     return jsx`<${App} />`;\n});","pinCode":false,"dname":"48acbba3-b9df-4d46-b8cd-e96a8e177531","codeMode":"javascript2"}}},{"type":"header","data":{"text":"PageHeader","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof pageHeader_1 = render(({ useSetter }) => {\n  const { PageHeader } = Antd;\n  return jsx`<${PageHeader} key='9729d5a8-3410-40d7-b7be-64b06b6491c2'\n    className=\"site-page-header\"\n    onBack=${() => alert(\"back\")}\n    title=\"Title\"\n    subTitle=\"This is a subtitle\"\n  />`;\n})","pinCode":false,"dname":"079bbc8c-973d-4d56-a727-981ea38339e7","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Pagination","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof pagination_1 = render(({ useSetter }) => {\n  const { Pagination } = Antd;\n  const App = () => jsx`<${Pagination} key='db92e389-a98e-4346-9835-3d793e8d41ab' defaultCurrent=${1} total=${50} />`;\n  return jsx`<${App} />`;\n})","pinCode":false,"dname":"ac9da399-5799-4c02-9f32-26d9dff4b9a7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof pagination_2 = render(({ useSetter }) => {\n    const { Pagination } = Antd;\n    const onShowSizeChange = (current, pageSize) => {\n      console.log(current, pageSize);\n    };\n    return  jsx`<${Fragment} key='e34952ed-84ce-4423-87a8-9a4e8c870665'>\n        <${Pagination}\n          showSizeChanger\n          onShowSizeChange=${onShowSizeChange}\n          defaultCurrent=${3}\n          total=${500}\n        />\n        <br />\n        <${Pagination}\n          showSizeChanger\n          onShowSizeChange=${onShowSizeChange}\n          defaultCurrent=${3}\n          total=${500}\n          disabled\n        />\n      <//>`\n    })","pinCode":false,"dname":"2efa94a3-4df2-48f0-bef6-6307e7614773","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof pagination_3 = render(({ useSetter }) => {\n    const { Pagination } = Antd;\n    const onChange = (pageNumber) => {\n      console.log('Page: ', pageNumber);\n    };\n    const App = () => (\n      jsx`<${Fragment} key='bc98609b-c505-4e20-bada-b288827f41bf'>\n      \t<${Pagination} showQuickJumper defaultCurrent=${2} total=${500} onChange=${onChange} />\n        <br />\n        <${Pagination} showQuickJumper defaultCurrent=${2} total=${500} onChange=${onChange} disabled />\n       <//>`\n    );\n  return jsx`<${App} />`\n})","pinCode":false,"dname":"bc58ac3f-d2ef-457b-80e9-37923f104133","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof pagination_4 = render(({ useSetter }) => {\n    const { Pagination } = Antd;\n    const showTotal = (total) => `Total ${total} items`;\n    const App = () => (\n      jsx`<${Fragment}> key='99602026-c684-4992-8e56-a8ef6407f898'\n        <${Pagination} size=\"small\" total=${50} />\n        <${Pagination} size=\"small\" total=${50} showSizeChanger showQuickJumper />\n        <${Pagination} size=\"small\" total=${50} showTotal=${showTotal} />\n        <${Pagination}\n          size=\"small\"\n          total=${50}\n          disabled\n          showTotal=${showTotal}\n          showSizeChanger\n          showQuickJumper\n        />\n      <//>`\n    );\n  return jsx`<${App} />`\n})","pinCode":false,"dname":"5a879e6e-2924-43c7-ae50-0805fe4e1283","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof pagination_5 = render(({ useSetter }) => {\n    const { Pagination } = Antd;\n    return  jsx`<${Fragment} key='1acb46a1-02e1-400b-8b3c-f7b6c230f923'>\n        <${Pagination} simple defaultCurrent=${2} total=${50} />\n        <br />\n        <${Pagination} disabled simple defaultCurrent=${2} total=${50} />\n    <//>`\n})","pinCode":false,"dname":"e9c12997-72ad-4bf5-906a-c886c1e777ef","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"pagination_6","pinCode":false,"dname":"65bcd2c5-64a8-40f8-af9d-ff50c288d910","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof pagination_6 = render(({ useSetter }) => {\n  const { Pagination } = Antd;\n  const [current, setCurrent] = useState(3);\n  const onChange = (page) => {\n    console.log(page);\n    setCurrent(page);\n  };\n  useSetter({ current });\n  return jsx`<${Pagination} current=${current} onChange=${onChange} total=${50} />`;\n})","pinCode":false,"dname":"72fa739e-b6e1-4b67-a33b-237d56f065ac","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Steps","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof steps_1 = render(({ useSetter }) => {\n    const [step_number, setStep_number] = useState(1);\n    const Steps = Antd.Steps;\n    const Step = Steps.Step;\n    const update_step_number = (d) => (setStep_number(d));\n    useSetter({ step_number });\n    return jsx`<div key='00758e32-a174-4b30-99f0-b094429db657'>\n      <${Steps} current='${step_number}' onChange=${update_step_number}>\n      <${Step} title=\"Finished\" description=\"This is a description.\" />\n      <${Step} title=\"In Progress\" subTitle=\"Left 00:00:08\" description=\"This is a description.\" />\n      <${Step} title=\"Waiting\" description=\"This is a description.\" />\n     <//>\n    <//>`;\n  })","pinCode":false,"dname":"9188f3e3-0c3e-417c-b015-cf04f82c1a51","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof steps_2 = render(({ useSetter }) => {\n    const [step_number, setStep_number] = useState(1);\n    const Steps = Antd.Steps;\n    const Step = Steps.Step;\n    const update_step_number = (d) => (setStep_number(d));\n  \tconst description = 'This is a description.';\n    const items=[\n      {\n        title: 'Finished',\n        description,\n      },\n      {\n        title: 'In Progress',\n        description,\n        subTitle: 'Left 00:00:08',\n      },\n      {\n        title: 'Waiting',\n        description,\n      },\n    ]\n    useSetter({ step_number });\n    return jsx`<div key='565040dc-1510-47fa-94e9-d4284accc39f'>\n      <${Steps} current='${step_number}' onChange=${update_step_number}>\n      ${items.map((item,index)=>{\n    \treturn jsx`<${Step} key=${index} title=${item.title} description=${item.description} subTitle=${item.subTitle} />`\n    \t})}\n     <//>\n    <//>`;\n})","pinCode":false,"dname":"70dac307-bfbd-4b4b-851a-a7f3549edb02","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof steps_3 = render(({ useSetter }) => {\n    const [step_number, setStep_number] = useState(1);\n    const Steps = Antd.Steps;\n    const { LoadingOutlined, SmileOutlined, SolutionOutlined, UserOutlined } = AntdIcons;\n    const Step = Steps.Step;\n    const update_step_number = (d) => (setStep_number(d));\n  \tconst description = 'This is a description.';\n    const items=[\n      {\n        title: 'Login',\n        status: 'finish',\n        icon: jsx`<${UserOutlined} />`,\n      },\n      {\n        title: 'Verification',\n        status: 'finish',\n        icon: jsx`<${SolutionOutlined} />`,\n      },\n      {\n        title: 'Pay',\n        status: 'process',\n        icon: jsx`<${LoadingOutlined} />`,\n      },\n      {\n        title: 'Done',\n        status: 'wait',\n        icon: jsx`<${SmileOutlined} />`,\n      },\n    ]\n    useSetter({ step_number });\n    return jsx`<div key='aaaa3c2-6c05-4cd7-80f9-7e669e333f2c'>\n      <${Steps} current='${step_number}' onChange=${update_step_number}>\n      ${items.map((item,index)=>{\n    \treturn jsx`<${Step} key=${index} title=${item.title} description=${item.description} subTitle=${item.subTitle} icon=${item.icon} />`\n    \t})}\n     <//>\n    <//>`;\n})","pinCode":false,"dname":"e28949ab-6dcf-418e-b726-85957ecca0b2","codeMode":"javascript2"}}},{"type":"header","data":{"text":"AutoComplete","level":1}},{"type":"codeTool","data":{"codeData":{"value":"autoComplete_1","pinCode":false,"dname":"152b8887-a9c8-4e63-b0fb-dfc8b2fc8894","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof autoComplete_1 = render(({ useSetter }) => {\n    const { AutoComplete } = Antd;\n    const mockVal = (str, repeat = 1) => ({\n      value: str.repeat(repeat),\n    });\n    const [value, setValue] = useState('');\n    const [options, setOptions] = useState([]);\n    const onSearch = (searchText) => {\n      setOptions(\n        !searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)],\n      );\n    };\n    const onSelect = (data) => {\n      console.log('onSelect', data);\n    };\n    const onChange = (data) => {\n      setValue(data);\n    };\n   useSetter({value})\n    return jsx`<${Fragment} key='db6aacea-f8d6-453b-9d79-a6ad95c4e3dc'>\n          <${AutoComplete}\n            options=${options}\n            style=${{\n              width: 200,\n            }}\n            onSelect=${onSelect}\n            onSearch=${onSearch}\n            placeholder=\"input here\"\n          />\n          <br />\n          <br />\n          <${AutoComplete}\n            value=${value}\n            options=${options}\n            style=${{\n              width: 200,\n            }}\n            onSelect=${onSelect}\n            onSearch=${onSearch}\n            onChange=${onChange}\n            placeholder=\"control mode\"\n          />\n        <//>`\n    })","pinCode":false,"dname":"5cb88412-f7ea-4a0e-ad80-caea018bc53b","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Cascader","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof cascader_1 = render(({ useSetter }) => {\n  const { Cascader } = Antd;\n  const options = [\n    {\n      value: \"zhejiang\",\n      label: \"Zhejiang\",\n      children: [\n        {\n          value: \"hangzhou\",\n          label: \"Hangzhou\",\n          children: [{ value: \"xihu\", label: \"West Lake\" }],\n        },\n      ],\n    },\n    {\n      value: \"jiangsu\",\n      label: \"Jiangsu\",\n      children: [\n        {\n          value: \"nanjing\",\n          label: \"Nanjing\",\n          children: [{ value: \"zhonghuamen\", label: \"Zhong Hua Men\" }],\n        },\n      ],\n    },\n  ];\n  const onChange = (value) => {\n    console.log(value);\n  };\n  return jsx`<${Cascader} key='1a271d6c-1172-4e3f-8e7d-dce7eba0afd8' options=${options} onChange=${onChange} placeholder=\"Please select\" />`;\n})","pinCode":false,"dname":"66e8f950-fc16-4d32-b9dd-75535740f451","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof cascader_2 = render(({ useSetter }) => {\n  const { Cascader } = Antd;\n  const options = [\n    {\n      value: \"zhejiang\",\n      label: \"Zhejiang\",\n      children: [\n        {\n          value: \"hangzhou\",\n          label: \"Hangzhou\",\n          children: [{ value: \"xihu\", label: \"West Lake\" }],\n        },\n      ],\n    },\n    {\n      value: \"jiangsu\",\n      label: \"Jiangsu\",\n      children: [\n        {\n          value: \"nanjing\",\n          label: \"Nanjing\",\n          children: [{ value: \"zhonghuamen\", label: \"Zhong Hua Men\" }],\n        },\n      ],\n    },\n  ];\n  const [text, setText] = useState(\"Unselect\");\n  const onChange = (_, selectedOptions) => {\n    setText(selectedOptions.map((o) => o.label).join(\", \"));\n  };\n  return jsx`<span key='a8667f73-ba44-4f44-a1b3-7fa2787652a9'>\n      ${text}${'\\u00A0\\u00A0\\u00A0'}\n      <${Cascader} options=${options} onChange=${onChange}>\n        <a href=\"#\">Change city</a>\n      <//>\n    </span>`;\n})","pinCode":false,"dname":"b26fd692-8a2a-45e9-92ab-ba5ee646640b","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Checkbox","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof checkbox_1 = render(({ useSetter }) => {\n    const {Checkbox} = Antd;\n    const onChange = (e) => {\n      console.log(`checked = ${e.target.checked}`);\n    };\n    return jsx`<${Checkbox} key='601bef2e-ab69-4e14-9048-6a0d35543b3d' onChange=${onChange}>Checkbox<//>`;\n})","pinCode":false,"dname":"b0418bcb-5599-4b66-ad87-4eec931e800d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof checkbox_2 = render(({ useSetter }) => {\n    const {Checkbox, Divider} = Antd;\n    const CheckboxGroup = Checkbox.Group;\n    const plainOptions = ['Apple', 'Pear', 'Orange'];\n    const defaultCheckedList = ['Apple', 'Orange'];\n    const App = () => {\n      const [checkedList, setCheckedList] = useState(defaultCheckedList);\n      const [indeterminate, setIndeterminate] = useState(true);\n      const [checkAll, setCheckAll] = useState(false);\n      const onChange = (list) => {\n        setCheckedList(list);\n        setIndeterminate(!!list.length && list.length < plainOptions.length);\n        setCheckAll(list.length === plainOptions.length);\n      };\n      const onCheckAllChange = (e) => {\n        setCheckedList(e.target.checked ? plainOptions : []);\n        setIndeterminate(false);\n        setCheckAll(e.target.checked);\n      };\n      return (\n        jsx`<${Fragment} key='e1b9153f-d01f-4c57-8107-1f632fef48a1'>\n          <${Checkbox} indeterminate=${indeterminate} onChange=${onCheckAllChange} checked=${checkAll}>\n            Check all\n          <//>\n          <${Divider} />\n          <${CheckboxGroup} options=${plainOptions} value=${checkedList} onChange=${onChange} />\n        <//>`\n      );\n    };\n  return jsx`<${App} />`\n})","pinCode":false,"dname":"bc86a8d2-4c57-4d18-a282-5e746e0778b7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof checkbox_3 = render(({ useSetter }) => {\n    const {Checkbox, Divider} = Antd;\n   const onChange = (checkedValues) => {\n      console.log('checked = ', checkedValues);\n    };\n    const plainOptions = ['Apple', 'Pear', 'Orange'];\n    const options = [\n      {\n        label: 'Apple',\n        value: 'Apple',\n      },\n      {\n        label: 'Pear',\n        value: 'Pear',\n      },\n      {\n        label: 'Orange',\n        value: 'Orange',\n      },\n    ];\n    const optionsWithDisabled = [\n      {\n        label: 'Apple',\n        value: 'Apple',\n      },\n      {\n        label: 'Pear',\n        value: 'Pear',\n      },\n      {\n        label: 'Orange',\n        value: 'Orange',\n        disabled: false,\n      },\n    ];\n    const App = () => (\n      jsx`<${Fragment} key='d7df73fb-934f-4e9c-a44d-42749310d981'>\n        <${Checkbox.Group} options=${plainOptions} defaultValue=${['Apple']} onChange=${onChange} />\n        <br />\n        <br />\n        <${Checkbox.Group} options=${options} defaultValue=${['Pear']} onChange=${onChange} />\n        <br />\n        <br />\n        <${Checkbox.Group}\n          options=${optionsWithDisabled}\n          disabled\n          defaultValue=${['Apple']}\n          onChange=${onChange}\n        />\n      <//>`\n    );\n  return jsx`<${App} />`\n})","pinCode":false,"dname":"df694fd1-0cda-4e3b-9c81-6eb8c5a82e0f","codeMode":"javascript2"}}},{"type":"header","data":{"text":"DatePicker","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof datePicker_1 = render(({ useSetter }) => {\n    const { DatePicker, Space } = Antd;\n    const onChange = (date, dateString) => {\n      console.log(date, dateString);\n    };\n    const App = () => (\n      jsx`<${Space} key='15edb799-c401-485b-a015-503baad2bf64' direction=\"vertical\">\n        <${DatePicker} onChange=${onChange} />\n        <${DatePicker} onChange=${onChange} picker=\"week\" />\n        <${DatePicker} onChange=${onChange} picker=\"month\" />\n        <${DatePicker} onChange=${onChange} picker=\"quarter\" />\n        <${DatePicker} onChange=${onChange} picker=\"year\" />\n      <//>`\n    );\n    return jsx`<${App} />`\n});","pinCode":false,"dname":"7fd2632d-bc12-449f-b0fb-b1f7e68a4a27","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof datePicker_2 = render(({ useSetter }) => {\n    const { DatePicker, Space } = Antd;\n   \tconst { RangePicker } = DatePicker;\n    const App = () => (\n      jsx`<${Space} key='f63a412d-efdb-4887-aacb-2d3ec9d0a8a1' direction=\"vertical\" size=${12}>\n        <${RangePicker} />\n        <${RangePicker} showTime />\n        <${RangePicker} picker=\"week\" />\n        <${RangePicker} picker=\"month\" />\n        <${RangePicker} picker=\"quarter\" />\n        <${RangePicker} picker=\"year\" />\n      <//>`\n    );\n    return jsx`<${App} />`\n});","pinCode":false,"dname":"44607d80-51e5-426d-b6ec-9b6dd3af8665","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Form","level":1}},{"type":"codeTool","data":{"codeData":{"value":"form_1","pinCode":false,"dname":"67d834fc-1781-40de-aa66-213c2d43e653","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof form_1 = render(({ useSetter }) => {\n    const { Button, Checkbox, Form, Input } = Antd;\n    const [ remember, setRemember ] = useState(true);\n    const [ username, setUsername ] = useState(\"\");\n    const [ password, setPassword ] = useState(\"\");\n    const onFinish = (values) => {\n      console.log('Success:', values);\n    };\n    const onFinishFailed = (errorInfo) => {\n      console.log('Failed:', errorInfo);\n    };\n    useSetter({remember,password,username});\n    return jsx`<${Form} key='b58f900c-6464-4b59-8b58-72aba9b51a12'\n        name=\"basic\"\n        labelCol=${{\n          span: 8,\n        }}\n        wrapperCol=${{\n          span: 16,\n        }}\n        initialValues=${{\n            remember: remember,\n            username: username,\n            password: password,\n        }}\n        onFinish=${onFinish}\n        onFinishFailed=${onFinishFailed}\n        autoComplete=\"off\"\n      >\n        <${Form.Item}\n          label=\"Username\"\n          name=\"username\"\n          rules=${[\n            {\n              required: true,\n              message: 'Please input your username!',\n            },\n          ]}\n        >\n          <${Input} onChange=${(e)=>{  setUsername(e.target.value); }} />\n        <//>\n  \n        <${Form.Item}\n          label=\"Password\"\n          name=\"password\"\n          rules=${[\n            {\n              required: true,\n              message: 'Please input your password!',\n            },\n          ]}\n        >\n          <${Input.Password} onChange=${(e)=>{  setPassword(e.target.value) }} />\n        <//>\n  \n        <${Form.Item}\n          name=\"remember\"\n          valuePropName=\"checked\"\n          wrapperCol=${{\n            offset: 8,\n            span: 16,\n          }}\n        >\n          <${Checkbox} onChange=${(e)=>{ setRemember(e.target.checked) }}>Remember me<//>\n        <//>\n  \n        <${Form.Item}\n          wrapperCol=${{\n            offset: 8,\n            span: 16,\n          }}\n        >\n          <${Button} type=\"primary\" htmlType=\"submit\">\n            Submit\n          <//>\n        <//>\n      <//>`\n  })","pinCode":false,"dname":"6e06ca6f-cb66-447d-ad6b-a1de4ab6479d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof form_2 = render(({ useSetter }) => {\n    const { Button, Form, Input, Select } = Antd;\n    const { Option } = Select;\n    const layout = {\n      labelCol: {\n        span: 8,\n      },\n      wrapperCol: {\n        span: 16,\n      },\n    };\n    const tailLayout = {\n      wrapperCol: {\n        offset: 8,\n        span: 16,\n      },\n    };\n    const App = () => {\n      const [form] = Form.useForm();\n      const onGenderChange = (value) => {\n        switch (value) {\n          case 'male':\n            form.setFieldsValue({\n              note: 'Hi, man!',\n            });\n            return;\n          case 'female':\n            form.setFieldsValue({\n              note: 'Hi, lady!',\n            });\n            return;\n          case 'other':\n            form.setFieldsValue({\n              note: 'Hi there!',\n            });\n        }\n      };\n      const onFinish = (values) => {\n        console.log(values);\n      };\n      const onReset = () => {\n        form.resetFields();\n      };\n      const onFill = () => {\n        form.setFieldsValue({\n          note: 'Hello world!',\n          gender: 'male',\n        });\n      };\n      return (\n        jsx`<${Form} key='6114062c-6ffe-423f-adf8-c02a957c6916' ...${layout} form=${form} name=\"control-hooks\" onFinish=${onFinish}>\n          <${Form.Item}\n            name=\"note\"\n            label=\"Note\"\n            rules=${[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <${Input} />\n          <//>\n          <${Form.Item}\n            name=\"gender\"\n            label=\"Gender\"\n            rules=${[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <${Select}\n              placeholder=\"Select a option and change input text above\"\n              onChange=${onGenderChange}\n              allowClear\n            >\n              <${Option} value=\"male\">male<//>\n              <${Option} value=\"female\">female<//>\n              <${Option} value=\"other\">other<//>\n            <//>\n          <//>\n          <${Form.Item}\n            noStyle\n            shouldUpdate=${(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\n          >\n            ${({ getFieldValue }) =>\n              getFieldValue('gender') === 'other' ? (\n                jsx`<${Form.Item}\n                  name=\"customizeGender\"\n                  label=\"Customize Gender\"\n                  rules=${[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <${Input} />\n                <//>`\n              ) : null\n            }\n          <//>\n          <${Form.Item} ...${tailLayout}>\n            <${Button} type=\"primary\" htmlType=\"submit\">\n              Submit\n            <//>\n            <${Button} htmlType=\"button\" onClick=${onReset}>\n              Reset\n            <//>\n            <${Button} type=\"link\" htmlType=\"button\" onClick=${onFill}>\n              Fill form\n            <//>\n          <//>\n        <//>`\n      );\n    };\n    return jsx`<${App} />`\n  })","pinCode":false,"dname":"7e0f6ac1-9880-4301-8563-8e467a3a1d2e","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Input","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof input_1 = render(({ useSetter }) => {\n  const { Input } = Antd;\n  return jsx`<${Input} key='2a30b7a0-d6f1-445a-85b0-6f9074fe0d7c' placeholder=\"Basic usage\" />`;\n})","pinCode":false,"dname":"dced86c9-cc12-42d0-823d-8b43a8f6e1f4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof input_2 = render(({ useSetter }) => {\n  const { UserOutlined } = AntdIcons;\n  const { Input } = Antd;\n  return jsx`<${Fragment} key='b2981025-9c43-49db-83b6-03c3091752a9'>\n  <${Input} size=\"large\" placeholder=\"large size\" prefix=${jsx`<${UserOutlined} />`} />\n    <br />\n    <br />\n    <${Input} placeholder=\"default size\" prefix=${jsx`<${UserOutlined} />`} />\n    <br />\n    <br />\n    <${Input} size=\"small\" placeholder=\"small size\" prefix=${jsx`<${UserOutlined} />`} />\n  <//>`;\n})","pinCode":false,"dname":"73cb31c4-d7d7-407e-bdf9-f7c2588d4003","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof input_3 = render(({ useSetter }) => {\n  const { AudioOutlined } = AntdIcons;\n  const { Input, Space } = Antd;\n  const { Search } = Input;\n  const suffix = jsx`<${AudioOutlined}\n    style=${{\n      fontSize: 16,\n      color: '#1890ff',\n    }}\n  />`;\n  const onSearch = (value) => console.log(value);\n  const App = () => jsx`<${Space} key='a75ca3d2-d194-428d-877d-e7c698717f28' direction=\"vertical\">\n      <${Search}\n        placeholder=\"input search text\"\n        onSearch=${onSearch}\n        style=${{ width: 200 }}\n      />\n      <${Search}\n        placeholder=\"input search text\"\n        allowClear\n        onSearch=${onSearch}\n        style=${{ width: 200 }}\n      />\n      <${Search}\n        addonBefore=\"https://\"\n        placeholder=\"input search text\"\n        allowClear\n        onSearch=${onSearch}\n        style=${{ width: 304 }}\n      />\n      <${Search} placeholder=\"input search text\" onSearch=${onSearch} enterButton />\n      <${Search}\n        placeholder=\"input search text\"\n        allowClear\n        enterButton=\"Search\"\n        size=\"large\"\n        onSearch=${onSearch}\n      />\n      <${Search}\n        placeholder=\"input search text\"\n        enterButton=\"Search\"\n        size=\"large\"\n        suffix=${suffix}\n        onSearch=${onSearch}\n      />\n    </${Space}>`;\n  return jsx`<${App} />`\n})","pinCode":false,"dname":"8db249e5-662c-40ec-8100-1dc65c96de4c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof input_4 = render(({ useSetter }) => {\n  const { Input } = Antd;\n  const suffix = (\n  jsx`<div>\n  \t<span className=\"ant-icon clicker\"\n    style=${{\n      fontSize: 16,\n      color: '#1890ff',\n    }}\n  >R</span>${'\\u00A0\\u00A0\\u00A0'}<span className=\"ant-icon clicker\"\n    style=${{\n      fontSize: 16,\n      color: '#1890ff',\n    }}\n  >W</span>${'\\u00A0\\u00A0\\u00A0'}<span className=\"ant-icon clicker\"\n    style=${{\n      fontSize: 16,\n      color: '#1890ff',\n    }}\n  >I</span>\n  </div>`\n);\n  return jsx`<${Input} key='febcc8e4-5c98-42bf-8537-1aaad4f743bd' placeholder=\"Basic usage\" suffix=${suffix} onKeyDown=${()=>{\n    \n  }} />`;\n})","pinCode":false,"dname":"b7e601f1-a12f-4083-9f91-829ab0aeaea8","codeMode":"javascript2"}}},{"type":"header","data":{"text":"InputNumber","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof inputNumber_1 = render(({ useSetter }) => {\n    const { InputNumber  } = Antd;\n    const onChange = (value) => {\n      console.log('changed', value);\n    };\n    const App = () => jsx`<${InputNumber} key='f5930a87-c1a1-4a05-ab66-12242bc6543e' min=${1} max=${10} defaultValue=${3} onChange=${onChange} />`;\n    return jsx`<${App}  //> `;\n})","pinCode":false,"dname":"bc0cb075-929e-4737-8860-dde21ab39748","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof inputNumber_2 = render(({ useSetter }) => {\n    const { Button, InputNumber   } = Antd;\n   \tconst App = () => {\n      const [disabled, setDisabled] = useState(true);\n      const toggle = () => {\n        setDisabled(!disabled);\n      };\n      return (\n        jsx`<${Fragment} key='195ced9e-d3c9-4d1d-8541-9add5a43b3a1'>\n          <${InputNumber} min=${1} max=${10} disabled=${disabled} defaultValue=${3} />\n          <div\n            style=${{\n              marginTop: 20,\n            }}\n          >\n            <${Button} onClick=${toggle} type=\"primary\">\n              Toggle disabled\n            </${Button}>\n          </div>\n        </>`\n      );\n  };\n    return jsx`<${App}  //> `;\n})","pinCode":false,"dname":"426a3a9d-793d-47f8-a93e-3bbbc5d8fc38","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof inputNumber_3 = render(({ useSetter }) => {\n  const { SettingOutlined  } = AntdIcons;\n  const { Cascader, InputNumber, Select, Space, Button } = Antd;\n  const { Option } = Select;\n  const selectBefore =  jsx`<${Select} key='afb82cb3-5fca-45e9-9230-14b8fdc7ddc6'\n      defaultValue=\"add\"\n      style=${{\n        width: 60,\n      }}\n    >\n      <${Option} key=\"1\" value=\"add\">+</${Option}>\n      <${Option} key=\"2\" value=\"minus\">-</${Option}>\n    </${Select}>`\n  const selectAfter =  jsx`<${Select} key='2bab19a2-3b3e-4616-ad29-694ff0c76b64'\n      defaultValue=\"USD\"\n      style=${{\n        width: 60,\n      }}\n    >\n      <${Option} key=\"1\" value=\"USD\">$</${Option}>\n      <${Option} key=\"2\" value=\"EUR\">€</${Option}>\n      <${Option} key=\"3\" value=\"GBP\">£</${Option}>\n      <${Option} key=\"4\" value=\"CNY\">¥</${Option}>\n    </${Select}>`\n  const App = () => (\n    jsx`<${Space} key='b7216533-7a5f-4e00-b1d9-284c75b04c9a' direction=\"vertical\">\n      <div  key=\"1\" className=\"d-flex align-items-center\">\n      \t<${Button} disabled>+</${Button}> <${InputNumber} defaultValue=${100} /> <${Button} disabled>$</${Button}>\n      </div>\n      <div  key=\"2\" className=\"d-flex align-items-center\">\n      \t${selectBefore} <${InputNumber} defaultValue=${100} /> ${selectAfter}\n      </div>\n      <div  key=\"3\" className=\"d-flex align-items-center\">\n      \t<${InputNumber} defaultValue=${100} /> <${Button} disabled icon=${jsx`<${SettingOutlined} />`}></${Button}>\n      </div>\n    </${Space}>`\n  );\n  return jsx`<${App}  /> `;\n})","pinCode":false,"dname":"59494ecd-dffd-486e-843c-c3d83d61eb89","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"moment = require(\"moment\")","pinCode":false,"dname":"3c006a29-f202-43a2-bbf8-4d3f8351580b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"## TimePicker","pinCode":false,"dname":"dd1acc28-8436-4914-851e-39c690c8fffe","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof timepicker_1 = render(({ useSetter }) => {\n  const { TimePicker } = Antd;\n  const onChange = (time, timeString) => {\n    console.log(time, timeString);\n  };\n  return jsx`<${TimePicker} key='a3aa0394-38a3-4407-b3cd-515c24c47caa' onChange=${onChange} defaultValue=${moment(\n    \"12:00:00\",\n    \"HH:mm:ss\"\n  )} />`;\n})","pinCode":false,"dname":"d0434940-b1f2-4e2c-8a62-28e101322c5e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"## Switch","pinCode":false,"dname":"e78432f3-88e6-47af-a0e4-e994c58b8000","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof switch_1 = render(({ useSetter }) => {\n  const { Switch } = Antd;\n  const onChange = (checked) => {\n    console.log(`switch to ${checked}`);\n  };\n  return jsx`<${Fragment} key='4c821658-811f-4875-997c-d767cc69781f'>\n    <${Switch} defaultChecked onChange=${onChange} />\n  <//>`\n})","pinCode":false,"dname":"9a88bebe-2c30-4dd9-b5ab-4cca59da96a1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof switch_2 = render(({ useSetter }) => {\n  const { Switch } = Antd;\n  return jsx`<${Fragment} key='ea8f782d-8387-4af9-95f8-c0e948b4b3f7'>\n    <${Switch}   />\n    <br />\n    <${Switch} size=\"small\" defaultChecked />\n  <//>`\n})","pinCode":false,"dname":"932602b1-de10-4c09-be99-d2681973adbc","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof switch_3 = render(({ useSetter }) => {\n  const { CheckOutlined, CloseOutlined } = AntdIcons;\n  const { Switch } = Antd;\n  const App = () => jsx`<div  key='aa777da5-db4f-49ee-8fee-0ed590d6eb5f'>\n  \t<${Switch} checkedChildren=\"开启\" unCheckedChildren=\"关闭\" defaultChecked />\n    <br />\n    <${Switch} checkedChildren=\"1\" unCheckedChildren=\"0\" />\n    <br />\n    <${Switch}\n      checkedChildren=${jsx`<${CheckOutlined} />`}\n      unCheckedChildren=${jsx`<${CloseOutlined} />`}\n      defaultChecked\n    />\n    </div>`;\n  return jsx`<${App} />`;\n})","pinCode":true,"dname":"e5723015-b421-4482-97e3-6e5fc5b7a952","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"## Slider","pinCode":false,"dname":"dafcf56b-2a31-441e-84df-92bbd15ce3ae","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof slider_1 = render(({ useSetter }) => {\n    const { Col, InputNumber, Row, Slider } = Antd;\n    const IntegerStep = () => {\n      const [inputValue, setInputValue] = useState(1);\n      const onChange = (newValue) => {\n        setInputValue(newValue);\n      };\n      return (\n        jsx`<${Row}>\n          <${Col} span=${12}>\n            <${Slider}\n              min=${1}\n              max=${20}\n              onChange=${onChange}\n              value=${typeof inputValue === 'number' ? inputValue : 0}\n            />\n          <//>\n          <${Col} span=${4}>\n            <${InputNumber}\n              min=${1}\n              max=${20}\n              style=${{\n                margin: '0 16px',\n              }}\n              value=${inputValue}\n              onChange=${onChange}\n            />\n          <//>\n        <//>`\n      );\n    };\n    const DecimalStep = () => {\n      const [inputValue, setInputValue] = useState(0);\n      const onChange = (value) => {\n        if (isNaN(value)) {\n          return;\n        }\n        setInputValue(value);\n      };\n      return (\n        jsx`<${Row}>\n          <${Col} span=${12}>\n            <${Slider}\n              min=${0}\n              max=${1}\n              onChange=${onChange}\n              value=${typeof inputValue === 'number' ? inputValue : 0}\n              step=${0.01}\n            />\n          <//>\n          <${Col} span=${4}>\n            <${InputNumber}\n              min=${0}\n              max=${1}\n              style=${{\n                margin: '0 16px',\n              }}\n              step=${0.01}\n              value=${inputValue}\n              onChange=${onChange}\n            />\n          <//>\n        <//>`\n      );\n    };\n    return jsx`<div key='33dc3653-3960-488e-b8aa-d9e65b810daf'>\n        <${IntegerStep} />\n        <${DecimalStep} />\n      </div>`\n})","pinCode":false,"dname":"86a0182c-ae95-4aaa-84e7-c7cf4d0e7daf","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"<i class=\"fas fa-random\"></i>","pinCode":false,"dname":"97a27bc8-f096-4d71-8aa2-0bf69ca150c8","codeMode":"htmlmixed"}}},{"type":"codeTool","data":{"codeData":{"value":"## Transfer","pinCode":false,"dname":"f074f8ac-5524-4586-8811-3b29387544d3","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof transfer_1 = render(({ useSetter }) => {\n  const { Transfer } = Antd;\n  const mockData = Array.from({ length: 20 }).map((_, i) => ({\n    key: i.toString(),\n    title: `content${i + 1}`,\n    description: `description of content${i + 1}`,\n  }));\n  const initialTargetKeys = mockData\n    .filter((item) => Number(item.key) > 10)\n    .map((item) => item.key);\n  const [targetKeys, setTargetKeys] = useState(initialTargetKeys);\n  const [selectedKeys, setSelectedKeys] = useState([]);\n  const onChange = (nextTargetKeys, direction, moveKeys) => {\n    console.log(\"targetKeys:\", nextTargetKeys);\n    console.log(\"direction:\", direction);\n    console.log(\"moveKeys:\", moveKeys);\n    setTargetKeys(nextTargetKeys);\n  };\n  const onSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\n    console.log(\"sourceSelectedKeys:\", sourceSelectedKeys);\n    console.log(\"targetSelectedKeys:\", targetSelectedKeys);\n    setSelectedKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\n  };\n  const onScroll = (direction, e) => {\n    console.log(\"direction:\", direction);\n    console.log(\"target:\", e.target);\n  };\n  return jsx`<${Transfer} key='4d9db5f1-bc4d-4dfa-8864-9f16bdbd2683'\n        dataSource=${mockData}\n        titles=${['Source', 'Target']}\n        targetKeys=${targetKeys}\n        selectedKeys=${selectedKeys}\n        onChange=${onChange}\n        onSelectChange=${onSelectChange}\n        onScroll=${onScroll}\n        render=${(item) => item.title}\n      />`;\n})","pinCode":false,"dname":"08bb456b-5784-40ff-9a10-fea6d412594c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof tree_1 = render(({ useSetter }) => {\n    const { Tree } = Antd;\n    const treeData = [\n      {\n        title: \"parent 1\",\n        key: \"0-0\",\n        children: [\n          {\n            title: \"parent 1-0\",\n            key: \"0-0-0\",\n            disabled: true,\n            children: [\n              { title: \"leaf\", key: \"0-0-0-0\", disableCheckbox: true },\n              { title: \"leaf\", key: \"0-0-0-1\" },\n            ],\n          },\n          {\n            title: \"parent 1-1\",\n            key: \"0-0-1\",\n            children: [\n              {\n                title: jsx`<span\n                    style=${{ color: \"#1890ff\" }}\n                  >\n                    sss\n                  </span>`,\n                key: \"0-0-1-0\",\n              },\n            ],\n          },\n        ],\n      },\n    ];\n    const onSelect = (selectedKeys, info) => {\n      console.log(\"selected\", selectedKeys, info);\n    };\n    const onCheck = (checkedKeys, info) => {\n      console.log(\"onCheck\", checkedKeys, info);\n    };\n    return jsx`<${Tree} key='40766816-d5b2-42dc-95ae-cadb7c1e285e'\n          checkable\n          defaultExpandedKeys=${[\"0-0-0\", \"0-0-1\"]}\n          defaultSelectedKeys=${[\"0-0-0\", \"0-0-1\"]}\n          defaultCheckedKeys=${[\"0-0-0\", \"0-0-1\"]}\n          onSelect=${onSelect}\n          onCheck=${onCheck}\n          treeData=${treeData}\n        />`;\n  })","pinCode":false,"dname":"3279b044-00bc-464d-b89d-6f275150dd02","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof tree_2 = render(({ useSetter }) => {\n  const { Tree } = Antd;\n  const treeData = [\n    {\n      title: \"parent 1\",\n      key: \"0-0\",\n      children: [\n        {\n          title: \"parent 1-0\",\n          key: \"0-0-0\",\n          disabled: true,\n          children: [\n            { title: \"leaf\", key: \"0-0-0-0\", disableCheckbox: true },\n            { title: \"leaf\", key: \"0-0-0-1\" },\n          ],\n        },\n        {\n          title: \"parent 1-1\",\n          key: \"0-0-1\",\n          children: [\n            {\n              title: jsx`<span\n                  style=${{ color: \"#1890ff\" }}\n                >\n                  sss\n                </span>`,\n              key: \"0-0-1-0\",\n            },\n          ],\n        },\n      ],\n    },\n  ];\n  const onSelect = (selectedKeys, info) => {\n    console.log(\"selected\", selectedKeys, info);\n  };\n  const onCheck = (checkedKeys, info) => {\n    console.log(\"onCheck\", checkedKeys, info);\n  };\n  return jsx`<${Tree} key='4d40320e-0590-4181-99b1-3b51ee04a24a'\n        checkable\n        defaultExpandedKeys=${[\"0-0-0\", \"0-0-1\"]}\n        defaultSelectedKeys=${[\"0-0-0\", \"0-0-1\"]}\n        defaultCheckedKeys=${[\"0-0-0\", \"0-0-1\"]}\n        onSelect=${onSelect}\n        onCheck=${onCheck}\n        treeData=${treeData}\n      />`;\n})","pinCode":false,"dname":"2ec9c0fb-9558-4808-8030-08535c00917b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"<i class=\"fas fa-tags\"></i>","pinCode":false,"dname":"6d55ba6b-a9e3-4d56-ba10-e3f202155e44","codeMode":"htmlmixed"}}},{"type":"header","data":{"text":"Tabs","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof tabs_1 = render(({ useSetter }) => {\n    const { Tabs } = Antd;\n    const App = () => (\n      jsx`<${Tabs} key='cc8574ce-8af6-4266-ac7e-ec329fdc1739' defaultActiveKey=\"1\">\n        <${Tabs.TabPane} tab=\"Tab 1\" key=\"1\">\n        Content of Tab Pane 1\n        <//>\n        <${Tabs.TabPane} tab=\"Tab 2\" key=\"2\">\n        Content of Tab Pane 2\n        <//>\n        <${Tabs.TabPane} tab=\"Tab 3\" key=\"3\">\n        Content of Tab Pane 3\n        <//>\n      <//>`\n    );\n  return jsx`<${App}/>`\n})","pinCode":false,"dname":"d9b2005e-a8e8-4310-ba99-59f9c988f0e5","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof tabs_2 = render(({ useSetter })=>{ \n  const { Radio, Tabs } = Antd;\n  const [size, setSize] = useState('small');\n  const onChange = (e) => {\n    setSize(e.target.value);\n  };\n  return  jsx`<div key='14cd8a39-22e1-4c99-a406-912eb817c0bb'>\n      <${Radio.Group}\n        value=${size}\n        onChange=${onChange}\n        style=${{\n          marginBottom: 16,\n        }}\n      >\n        <${Radio.Button} value=\"small\">Small<//>\n        <${Radio.Button} value=\"middle\">Middle<//>\n        <${Radio.Button} value=\"large\">Large<//>\n      <//>\n      <${Tabs}\n        defaultActiveKey=\"1\"\n        size=${size}\n        style=${{\n          marginBottom: 32,\n        }}\n      >\n      \t${\n\t\t\tnew Array(3).fill(null).map((_, i) => {\n          const id = String(i + 1);\n          return jsx`<${Tabs.TabPane} tab=\"${`Tab ${id}`}\" key='${id}'>\n      ${`Content of tab ${id}`}\n    <//>`\n        })\n\t\t}\n      <//>\n      <${Tabs}\n        defaultActiveKey=\"1\"\n        type=\"card\"\n        size=${size}\n      >\n      ${\n\t\t\tnew Array(3).fill(null).map((_, i) => {\n          const id = String(i + 1);\n          return jsx`<${Tabs.TabPane} tab=\"${`Tab ${id}`}\" key='${id}'>\n      ${`Content of tab ${id}`}\n    <//>`\n        })\n\t\t}\n      <//>\n    </div>`\n})","pinCode":false,"dname":"557e45fb-2969-4066-b71a-82e8ba80e9ed","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Table","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof table_1 = render(({ useSetter }) => {\n    const { Space, Table, Tag } = Antd;\n    const columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text) => jsx`<a>${text}</a>`,\n      },\n      {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n      },\n      {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n      },\n      {\n        title: 'Tags',\n        key: 'tags',\n        dataIndex: 'tags',\n        render: (_, { tags }) => (\n          jsx`<${Fragment}>\n            ${tags.map((tag) => {\n              let color = tag.length > 5 ? 'geekblue' : 'green';\n              if (tag === 'loser') {\n                color = 'volcano';\n              }\n              return (\n                jsx`<${Tag} color=${color} key='${tag}'>\n                  ${tag.toUpperCase()}\n                <//>`\n              );\n            })}\n          <//>`\n        ),\n      },\n      {\n        title: 'Action',\n        key: 'action',\n        render: (_, record) => (\n          jsx`<${Space} size=\"middle\">\n            <a>Invite ${record.name}</a>\n            <a>Delete</a>\n          <//>`\n        ),\n      },\n    ];\n    const data = [\n      {\n        key: '1',\n        name: 'John Brown',\n        age: 32,\n        address: 'New York No. 1 Lake Park',\n        tags: ['nice', 'developer'],\n      },\n      {\n        key: '2',\n        name: 'Jim Green',\n        age: 42,\n        address: 'London No. 1 Lake Park',\n        tags: ['loser'],\n      },\n      {\n        key: '3',\n        name: 'Joe Black',\n        age: 32,\n        address: 'Sydney No. 1 Lake Park',\n        tags: ['cool', 'teacher'],\n      },\n    ];\n    return jsx`<${Table}  key='c727ab78-d935-4228-9751-608863ee668b' columns=${columns} dataSource=${data} /> `;\n})","pinCode":false,"dname":"fbb0d317-3104-42d9-902f-09988d0fbca1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof table_2 = render(({ useSetter }) => {\n  const [step_number, setStep_number] = useState(1);\n  const { Table } = Antd;\n  const update_step_number = (d) => setStep_number(step_number + 1);\n  const columns = _.map(cars[0], (v, k) => {\n    return { title: k, dataIndex: k, key: k };\n  });\n  useSetter({ step_number });\n  return jsx`<${Table} key='7590a5dc-fa4a-48e2-b60b-300139078e09'\n    columns=${columns}\n    dataSource=${_.map(cars, (car, index) => {\n      return _.assign({ key: String(index) }, car);\n    })}\n    scroll=${{ x: 1500, y: 300 }}\n  /> `;\n})","pinCode":false,"dname":"53286828-d91e-4cb4-b88e-bf913d40cb40","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Tag<a href=\"https://github.com/ant-design/ant-design/edit/master/components/tag/index.en-US.md\" target=\"_blank\"></a>","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof tag_1 = render(({ useSetter }) => {\n    const { Tag } = Antd;\n    const log = (e) => {\n      console.log(e);\n    };\n    const preventDefault = (e) => {\n      e.preventDefault();\n      console.log('Clicked! But prevent default.');\n    };\n    return jsx`<div key='4ef81ed6-741c-48fc-9614-b69fb12b31e4'>\n    <${Tag}>Tag 1</${Tag}>\n    <${Tag}>\n      <a href=\"https://github.com/ant-design/ant-design/issues/1862\">Link</a>\n    </${Tag}>\n    <${Tag} closable onClose=${log}>\n      Tag 2\n    </${Tag}>\n    <${Tag} closable onClose=${preventDefault}>\n      Prevent Default\n    </${Tag}>\n   </div>`;\n})","pinCode":false,"dname":"0b51c74e-ed77-4b88-8359-aeb502ac1374","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof tag_2 = render(({ useSetter }) => {\n  const { Divider, Tag } = Antd;\n  return jsx`<${Fragment} key='3e57e449-38b0-420b-b3b9-1e61c68f8504'>\n    <${Divider} orientation=\"left\">Presets<//>\n    <div>\n      <${Tag} color=\"magenta\">magenta<//>\n      <${Tag} color=\"red\">red<//>\n      <${Tag} color=\"volcano\">volcano<//>\n      <${Tag} color=\"orange\">orange<//>\n      <${Tag} color=\"gold\">gold<//>\n      <${Tag} color=\"lime\">lime<//>\n      <${Tag} color=\"green\">green<//>\n      <${Tag} color=\"cyan\">cyan<//>\n      <${Tag} color=\"blue\">blue<//>\n      <${Tag} color=\"geekblue\">geekblue<//>\n      <${Tag} color=\"purple\">purple<//>\n    </div>\n    <${Divider} orientation=\"left\">Custom<//>\n    <div>\n      <${Tag} color=\"#f50\">#f50<//>\n      <${Tag} color=\"#2db7f5\">#2db7f5<//>\n      <${Tag} color=\"#87d068\">#87d068<//>\n      <${Tag} color=\"#108ee9\">#108ee9<//>\n    </div>\n  </>`\n})","pinCode":false,"dname":"1a22da39-8e69-4543-a510-e3d82371ef35","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"_**123**_","pinCode":true,"dname":"d89b59b5-9bd5-4656-8170-bad246867c56","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"## Rate","pinCode":false,"dname":"7b0670dd-e737-4b8e-9128-9c2179ebd9b1","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof rate_1 = render(({ useSetter }) => {\n  const { HeartOutlined } = AntdIcons;\n  const { Rate } = Antd;\n  return (\n    jsx`<${Fragment} key='07c0cb49-7861-42c1-923b-1b4420bc8c54'>\n      <${Rate} character=${jsx`<${HeartOutlined} />`} allowHalf />\n      <br />\n      <${Rate} defaultValue=${3} character=\"A\" allowHalf style=${{ fontSize: 36 }} />\n      <br />\n      <${Rate} character=\"好\" allowHalf />\n    <//>`\n  );\n})","pinCode":false,"dname":"5bfca18e-152b-4758-ac44-f81d642613c6","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof dropdown = render(({ useSetter }) => {\n  const { Radio } = Antd;\n  const plainOptions = ['Apple', 'Pear', 'Orange'];\n  const options = [\n    {\n      label: 'Apple',\n      value: 'Apple',\n    },\n    {\n      label: 'Pear',\n      value: 'Pear',\n    },\n    {\n      label: 'Orange',\n      value: 'Orange',\n    },\n  ];\n  const optionsWithDisabled = [\n    {\n      label: 'Apple',\n      value: 'Apple',\n    },\n    {\n      label: 'Pear',\n      value: 'Pear',\n    },\n    {\n      label: 'Orange',\n      value: 'Orange',\n      disabled: true,\n    },\n  ];\n  const App = () => {\n    const [value1, setValue1] = useState('Apple');\n    const [value2, setValue2] = useState('Apple');\n    const [value3, setValue3] = useState('Apple');\n    const [value4, setValue4] = useState('Apple');\n    const onChange1 = ({ target: { value } }) => {\n      console.log('radio1 checked', value);\n      setValue1(value);\n    };\n    const onChange2 = ({ target: { value } }) => {\n      console.log('radio2 checked', value);\n      setValue2(value);\n    };\n    const onChange3 = ({ target: { value } }) => {\n      console.log('radio3 checked', value);\n      setValue3(value);\n    };\n    const onChange4 = ({ target: { value } }) => {\n      console.log('radio4 checked', value);\n      setValue4(value);\n    };\n    return (\n      jsx`<${Fragment} key='531219f0-206d-4909-84c3-66a20829a93e'>\n          <${Radio.Group} options=${plainOptions} onChange=${onChange1} value=${value1} />\n          <br />\n          <${Radio.Group} options=${optionsWithDisabled} onChange=${onChange2} value=${value2} />\n          <br />\n          <br />\n          <${Radio.Group} options=${options} onChange=${onChange3} value=${value3} optionType=\"button\" />\n          <br />\n          <br />\n          <${Radio.Group}\n            options=${optionsWithDisabled}\n            onChange=${onChange4}\n            value=${value4}\n            optionType=\"button\"\n            buttonStyle=\"solid\"\n          />\n    \t<//>`\n  );\n};\nreturn jsx`<${App} />`;\n    });","pinCode":false,"dname":"8962c2d3-e152-478f-8eba-d34594bb8683","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import {jsx, render, useState, component, useEffect, useMemo, Fragment } from \"https://grove-help.graphxr.com/react/react\"","pinCode":false,"dname":"07dd8949-0184-4569-a84a-f2f3169f5ad1","codeMode":"javascript2"}}}],"version":"2.19.1"}