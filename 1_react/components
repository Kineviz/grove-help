{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"# Ant design version ${Antd.version}","pinCode":false,"dname":"ad96266e-7c41-4c25-bf37-e2c72feec68c","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"if want a more detail about using ant design in developing react app, please visit [ant design site](https://4x.ant.design/components/overview-cn/). notice that, in grove now support antd version is ${Antd.version}.","pinCode":false,"dname":"6fc56998-c220-486f-8c4a-e8d4b6890868","codeMode":"markdown"}}},{"type":"header","data":{"text":"Button","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_1 = render(({ useSetter }) => {\n  const { Button } = Antd;\n  const App = () => (\n    jsx`<${Fragment}>\n      <${Button} type=\"primary\">Primary Button<//>\n      <${Button}>Default Button<//>\n      <${Button} type=\"dashed\">Dashed Button<//>\n      <br />\n      <${Button} type=\"text\">Text Button<//>\n      <${Button} type=\"link\">Link Button<//>\n    <//>`\n  );\n  return jsx`<${App} />`;\n})","pinCode":false,"dname":"d6fd73fa-8354-4062-9036-43ee5d695fc2","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_11 = render(({ useSetter }) => {\n    const { DownloadOutlined } = AntdIcons;\n    const { Button, Radio } = Antd;\n    const App = () => {\n      const [size, setSize] = useState('large');\n      return (\n        jsx`<${Fragment}>\n          <${Radio.Group} value=${size} onChange=${(e) => setSize(e.target.value)}>\n            <${Radio.Button} value=\"large\">Large<//>\n            <${Radio.Button} value=\"default\">Default<//>\n            <${Radio.Button} value=\"small\">Small<//>\n          <//>\n          <br />\n          <br />\n          <${Button} type=\"primary\" size=${size}>\n            Primary\n          <//>\n          <${Button} size=${size}>Default<//>\n          <${Button} type=\"dashed\" size=${size}>\n            Dashed\n          <//>\n          <br />\n          <${Button} type=\"link\" size=${size}>\n            Link\n          <//>\n          <br />\n          <${Button} type=\"primary\" icon=${jsx`<${DownloadOutlined} />`} size=${size} />\n          <${Button} type=\"primary\" shape=\"circle\" icon=${jsx`<${DownloadOutlined} />`} size=${size} />\n          <${Button} type=\"primary\" shape=\"round\" icon=${jsx`<${DownloadOutlined} />`} size=${size} />\n          <${Button} type=\"primary\" shape=\"round\" icon=${jsx`<${DownloadOutlined} />`} size=${size}>\n            Download\n          <//>\n          <${Button} type=\"primary\" icon=${jsx`<${DownloadOutlined} />`} size=${size}>\n            Download\n          <//>\n        <//>`\n      );\n    };\n    return jsx`<${App} key='1902f6ab-d5e4-4781-a002-d7f8ab73f2b3' /> `;\n})","pinCode":false,"dname":"8819ad3a-d403-4fd0-80f1-da89769e439a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_12 = render(({ useSetter }) => {\n  const {SearchOutlined} = AntdIcons\n  const { Button } = Antd;\n  const [step_number, setStep_number] = useState(1);\n  const update_step_number = (d) => setStep_number(step_number+1);\n  useSetter({ step_number });\n  return jsx`<${Button} key='bd145946-9a55-4505-9611-4d5dcc4e6d08' onClick=${update_step_number}  >Click Me<//> `;\n})","pinCode":false,"dname":"b8ebd912-3139-41ec-8ce7-7225a272675b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button = render(({ useSetter }) => {\n   const { UploadOutlined } = AntdIcons;\n  const { Button, Popconfirm, Space, Upload } = Antd;\n  const App = () => (\n    jsx`<${Space}>\n      Space\n      <${Button} type=\"primary\">Button<//>\n      <${Upload}>\n        <${Button}>\n          <${UploadOutlined} /> Click to Upload\n        <//>\n      <//>\n      <${Popconfirm} title=\"Are you sure delete this task?\" okText=\"Yes\" cancelText=\"No\">\n        <${Button}>Confirm</Button>\n      <//>\n    <//>`\n  );\n  return jsx`<${App} />`;\n})","pinCode":false,"dname":"4ee3ad8d-6456-4a44-b5ef-69593ae1125b","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Icon","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_2 = render(({ useSetter }) => {\n   const {\n    HomeOutlined,\n    LoadingOutlined,\n    SettingFilled,\n    SmileOutlined,\n    SyncOutlined,\n  } = AntdIcons;\n  const { Space } = Antd;\n  const App = () => (\n    jsx`<${Space}>\n      <${HomeOutlined} />\n      <${SettingFilled} />\n      <${SmileOutlined} />\n      <${SyncOutlined} spin />\n      <${SmileOutlined} rotate=${180} />\n      <${LoadingOutlined} />\n    <//>`\n  );\n  return jsx`<${App} />`;\n})","pinCode":false,"dname":"5197679c-6835-4567-ba2b-353c1d80771f","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Typography","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof typo1 = render(({ useSetter }) => {\n    const { Typography } = Antd;\n  const { Title } = Typography;\n  const App = () => (\n    jsx`<${Fragment}>\n      <${Title}>h1. Ant Design<//>\n      <${Title} level=${2}>h2. Ant Design<//>\n      <${Title} level=${3}>h3. Ant Design<//>\n      <${Title} level=${4}>h4. Ant Design<//>\n      <${Title} level=${5}>h5. Ant Design<//>\n    <//>`\n  );\n return jsx`<${App} />`;\n})","pinCode":false,"dname":"a7f62a64-f4cd-4e00-b834-c57a4cee88aa","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_7 = render(({ useSetter }) => {\n  const { Space, Typography } = Antd;\n  const { Text, Link } = Typography;\n  const App = () => (\n    jsx`<${Space} direction=\"vertical\">\n      <${Text}>Ant Design (default)<//>\n      <${Text} type=\"secondary\">Ant Design (secondary)<//>\n      <${Text} type=\"success\">Ant Design (success)<//>\n      <${Text} type=\"warning\">Ant Design (warning)<//>\n      <${Text} type=\"danger\">Ant Design (danger)<//>\n      <${Text} disabled>Ant Design (disabled)<//>\n      <${Text} mark>Ant Design (mark)<//>\n      <${Text} code>Ant Design (code)<//>\n      <${Text} keyboard>Ant Design (keyboard)<//>\n      <${Text} underline>Ant Design (underline)<//>\n      <${Text} delete>Ant Design (delete)<//>\n      <${Text} strong>Ant Design (strong)<//>\n      <${Text} italic>Ant Design (italic)<//>\n      <${Link} href=\"https://ant.design\" target=\"_blank\">\n        Ant Design (Link)\n      <//>\n    <//>`\n  );\n  return jsx`<${App} />`;\n})","pinCode":false,"dname":"fd5f39c9-6078-4d11-a737-ae3df7811636","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof typo2 = render(({ useSetter }) => {\n  const { CheckOutlined, HighlightOutlined, SmileFilled, SmileOutlined } = AntdIcons;\n  const { Divider, Radio, Typography } = Antd;\n  const { Paragraph } = Typography;\n  const App = () => {\n    const [editableStr, setEditableStr] = useState('This is an editable text.');\n    const [editableStrWithSuffix, setEditableStrWithSuffix] = useState(\n      'This is a loooooooooooooooooooooooooooooooong editable text with suffix.',\n    );\n    const [editableStrWithSuffixStartPart, editableStrWithSuffixSuffixPart] = useMemo(\n      () => [editableStrWithSuffix.slice(0, -12), editableStrWithSuffix.slice(-12)],\n      [editableStrWithSuffix],\n    );\n    const [customIconStr, setCustomIconStr] = useState('Custom Edit icon and replace tooltip text.');\n    const [clickTriggerStr, setClickTriggerStr] = useState(\n      'Text or icon as trigger - click to start editing.',\n    );\n    const [chooseTrigger, setChooseTrigger] = useState(['icon']);\n    const [customEnterIconStr, setCustomEnterIconStr] = useState(\n      'Editable text with a custom enter icon in edit field.',\n    );\n    const [noEnterIconStr, setNoEnterIconStr] = useState(\n      'Editable text with no enter icon in edit field.',\n    );\n    const [hideTooltipStr, setHideTooltipStr] = useState('Hide Edit tooltip.');\n    const [lengthLimitedStr, setLengthLimitedStr] = useState(\n      'This is an editable text with limited length.',\n    );\n    const radioToState = (input) => {\n      switch (input) {\n        case 'text':\n          return ['text'];\n        case 'both':\n          return ['icon', 'text'];\n        case 'icon':\n        default:\n          return ['icon'];\n      }\n    };\n    const stateToRadio = () => {\n      if (chooseTrigger.indexOf('text') !== -1) {\n        return chooseTrigger.indexOf('icon') !== -1 ? 'both' : 'text';\n      }\n      return 'icon';\n    };\n    return (\n      jsx`<${Fragment}>\n        <${Paragraph}\n          editable=${{\n            onChange: setEditableStr,\n          }}\n        >\n          ${editableStr}\n        <//>\n        <${Paragraph}\n          editable=${{\n            onChange: setEditableStrWithSuffix,\n            text: editableStrWithSuffix,\n          }}\n          ellipsis=${{\n            suffix: editableStrWithSuffixSuffixPart,\n          }}\n        >\n          ${editableStrWithSuffixStartPart}\n        <//>\n        <${Paragraph}\n          editable=${{\n            icon: jsx`<${HighlightOutlined} />`,\n            tooltip: 'click to edit text',\n            onChange: setCustomIconStr,\n          }}\n        >\n          ${customIconStr}\n        <//>\n        Trigger edit with:{' '}\n        <${Radio.Group}\n          onChange=${(e) => setChooseTrigger(radioToState(e.target.value))}\n          value=${stateToRadio()}\n        >\n          <${Radio} value=\"icon\">icon<//>\n          <${Radio} value=\"text\">text<//>\n          <${Radio} value=\"both\">both<//>\n        <//>\n        <${Paragraph}\n          editable=${{\n            tooltip: 'click to edit text',\n            onChange: setClickTriggerStr,\n            triggerType: chooseTrigger,\n          }}\n        >\n          ${clickTriggerStr}\n        <//>\n        <${Paragraph}\n          editable=${{\n            icon: jsx`<${HighlightOutlined} />`,\n            tooltip: 'click to edit text',\n            onChange: setCustomEnterIconStr,\n            enterIcon: jsx`<${CheckOutlined} />`,\n          }}\n        >\n          ${customEnterIconStr}\n        <//>\n        <${Paragraph}\n          editable=${{\n            icon: jsx`<${HighlightOutlined} />`,\n            tooltip: 'click to edit text',\n            onChange: setNoEnterIconStr,\n            enterIcon: null,\n          }}\n        >\n          ${noEnterIconStr}\n        <//>\n        <${Paragraph}\n          editable=${{\n            tooltip: false,\n            onChange: setHideTooltipStr,\n          }}\n        >\n          ${hideTooltipStr}\n        <//>\n        <${Paragraph}\n          editable=${{\n            onChange: setLengthLimitedStr,\n            maxLength: 50,\n            autoSize: {\n              maxRows: 5,\n              minRows: 3,\n            },\n          }}\n        >\n          ${lengthLimitedStr}\n        <//>\n        <${Typography.Title}\n          editable\n          level=${1}\n          style=${{\n            margin: 0,\n          }}\n        >\n          h1. Ant Design\n        <//>\n        <${Typography.Title}\n          editable\n          level=${2}\n          style=${{\n            margin: 0,\n          }}\n        >\n          h2. Ant Design\n        <//>\n        <${Typography.Title}\n          editable\n          level=${3}\n          style=${{\n            margin: 0,\n          }}\n        >\n          h3. Ant Design\n        <//>\n        <${Typography.Title}\n          editable\n          level=${4}\n          style=${{\n            margin: 0,\n          }}\n        >\n          h4. Ant Design\n        <//>\n        <${Typography.Title}\n          editable\n          level=${5}\n          style=${{\n            margin: 0,\n          }}\n        >\n          h5. Ant Design\n        <//>\n        <${Divider} />\n        <${Paragraph} copyable>This is a copyable text.<//>\n        <${Paragraph}\n          copyable=${{\n            text: 'Hello, Ant Design!',\n          }}\n        >\n          Replace copy text.\n        <//>\n        <${Paragraph}\n          copyable=${{\n            icon: [jsx`<${SmileOutlined} key=\"copy-icon\" />`, `<${SmileFilled} key=\"copied-icon\" />`],\n            tooltips: ['click here', 'you clicked!!'],\n          }}\n        >\n          Custom Copy icon and replace tooltips text.\n        <//>\n        <${Paragraph}\n          copyable=${{\n            tooltips: false,\n          }}\n        >\n          Hide Copy tooltips.\n        <//>\n      <//>`\n    );\n  };\n  return jsx`<${App} />`;\n})","pinCode":false,"dname":"fb09c75e-3d4f-4d74-8280-323a7eb811ee","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Breadcrumb","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_8 = render(({ useSetter }) => {\n  const { Breadcrumb,Menu,Space,Dropdown } = Antd;\n  const { SmileOutlined,DownOutlined } = AntdIcons;\n  const items = [\n    {\n      key: '1',\n      label: (\n        jsx`<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\">\n          General\n        </a>`\n      ),\n    },\n    {\n      key: '2',\n      label: (\n        jsx`<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.taobao.com/\">\n          Layout\n        </a>`\n      ),\n    },\n    {\n      key: '3',\n      label: (\n        jsx`<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.tmall.com/\">\n          Navigation\n        </a>`\n      ),\n    },\n  ];\n  const Item = Menu.Item;\n  const menu =  jsx`<${Menu}>\n        <${Item}>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\n            1st menu item\n          </a>\n        <//>\n        <${Item} disabled icon=${jsx`<${SmileOutlined}><//>`}>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.aliyun.com\">\n            2nd menu item (disabled)\n          </a>\n        <//>\n        <${Item} disabled>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.luohanacademy.com\">\n            3rd menu item (disabled)\n          </a>\n        <//>\n        <${Item} danger>a danger item<//>\n      <//>`;\n  const App = () => (\n    jsx`<${Breadcrumb}>\n      <${Breadcrumb.Item}>Ant Design<//>\n      <${Breadcrumb.Item}>\n        <a href=\"#\">Component</a>\n      <//>\n      <${Breadcrumb.Item}>\n        <${Dropdown} overlay=${menu}>\n          <a onClick=${(e) => e.preventDefault()}>\n              General <${DownOutlined}><//>\n          </a>\n      \t<//>\n      <//>\n      <${Breadcrumb.Item}>Button<//>\n    <//>`\n  );\n  return jsx`<${App} />`;\n})","pinCode":false,"dname":"b92ac11d-da08-4884-a6c4-3dc58a107d7c","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Dropdown","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof dropdown_1 = render(({ useSetter }) => {\n    const { DownOutlined, SmileOutlined } = AntdIcons;\n    const { Dropdown, Menu, Space } = Antd;\n    const Item = Menu.Item;\n    const menu =  jsx`<${Menu}>\n        <${Item}>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\n            1st menu item\n          </a>\n        <//>\n        <${Item} disabled icon=${jsx`<${SmileOutlined}><//>`}>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.aliyun.com\">\n            2nd menu item (disabled)\n          </a>\n        <//>\n        <${Item} disabled>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.luohanacademy.com\">\n            3rd menu item (disabled)\n          </a>\n        <//>\n        <${Item} danger>a danger item<//>\n      <//>`;\n      return jsx`<${Dropdown} key='d80287aa-5a5f-46a7-a837-4c4ef02c16ca' overlay=${menu}>\n        <a onClick=${(e) => e.preventDefault()}>\n          <${Space}>\n            Hover me\n            <${DownOutlined}><//>\n          <//>\n        </a>\n      <//>`\n    });","pinCode":false,"dname":"ad998f98-80e4-4513-92a0-2a280ce39895","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof dropdown_2 = render(({ useSetter }) => {\n    const { DownOutlined, SmileOutlined } = AntdIcons;\n    const { Dropdown, Menu, Space } = Antd;\n    const Item = Menu.Item;\n     const items = [\n        {\n          key: '1',\n          label: (\n            jsx`<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\n              1st menu item\n            </a>`\n          ),\n        },\n        {\n          key: '2',\n          label: (\n            jsx`<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.aliyun.com\">\n              2nd menu item (disabled)\n            </a>`\n          ),\n          icon: jsx`<${SmileOutlined} />`,\n          disabled: true,\n        },\n        {\n          key: '3',\n          label: (\n            jsx`<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.luohanacademy.com\">\n              3rd menu item (disabled)\n            </a>`\n          ),\n          disabled: true,\n        },\n        {\n          key: '4',\n          danger: true,\n          label: 'a danger item',\n        },\n      ];\n  \t  const menu2 =  jsx`<${Menu}>\n        ${items.map(item=>{\n\t\t\treturn jsx`<${Item} key=${item.key} danger=${!!item.danger} disabled=${!!item.disabled} icon=${item.icon}>\n              ${item.label}\n            <//>`\n        })}\n      <//>`\n      return jsx`<${Dropdown} key='6eb5d47d-fccc-44f2-9caa-279c9c6f2d24' overlay=${menu2}>\n        <a onClick=${(e) => e.preventDefault()}>\n          <${Space}>\n            Hover me\n            <${DownOutlined}><//>\n          <//>\n        </a>\n      <//>`\n    });","pinCode":false,"dname":"586fcb32-8051-4513-b614-9971091ebc3f","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Menu","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof menu = render(({ useSetter }) => {\n    const { Menu } = Antd;\n    const { MailOutlined, AppstoreOutlined, SettingOutlined } = AntdIcons;\n    return  jsx`<${Menu} key='0685fa07-be89-4c87-8cdf-1e5b09f670bf' mode=\"horizontal\" defaultSelectedKeys=${['mail']}>\n        <${Menu.Item} key=\"mail\" icon=${jsx`<${MailOutlined} />`}>\n          Navigation One\n        <//>\n        <${Menu.SubMenu} key=\"SubMenu_1\" title=\"Navigation Two - Submenu\" icon=${jsx`<${SettingOutlined} />`}>\n          <${Menu.Item} key=\"two\" icon=${jsx`<${AppstoreOutlined} />`}>\n            Navigation Two\n          <//>\n          <${Menu.Item} key=\"three\" icon=${jsx`<${AppstoreOutlined} />`}>\n            Navigation Three\n          <//>\n          <${Menu.ItemGroup} title=\"Item Group\">\n            <${Menu.Item} key=\"four\" icon=${jsx`<${AppstoreOutlined} />`}>\n              Navigation Four\n            <//>\n            <${Menu.Item} key=\"five\" icon=${jsx`<${AppstoreOutlined} />`}>\n              Navigation Five\n            <//>\n          <//>\n        <//>\n      <//>`;\n    });","pinCode":false,"dname":"83aaecb0-98f2-4973-a30d-851a018352ec","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"MenuItems = (items)=>{\n  const { Button, Menu } = Antd;\n  const {Item, SubMenu,ItemGroup} = Menu;\n\treturn items.map((item)=>{\n            if(item.children&&item.children.length){\n              return jsx`<${SubMenu} key='${item.key}' title=${item.label} icon=${item.icon}>\n                  ${item.children.map((citem)=>{\n                if(citem.children&&citem.children.length) {\n                  return jsx`<${ItemGroup} title=${citem.label}>\n                    ${citem.children.map((gitem)=>{\n                          return  jsx`<${Item} key='${gitem.key}' icon=${gitem.icon} disabled=${!!gitem.disabled}>\n                            ${gitem.label}\n                          <//>`\n                        })\n                      }\n                  <//>`\n                } else {\n                  return  jsx`<${Item} key='${citem.key}' icon=${citem.icon} disabled=${!!citem.disabled}>\n                    ${citem.label}\n                  <//>`\n                }\n              })}\n              <//>`\n            }else{\n              return jsx`<${Item} key='${item.key}' icon=${item.icon} disabled=${!!item.disabled}>\n                ${item.label}\n              <//>`\n            }\n          })\n}","pinCode":false,"dname":"6a433b91-1cd4-49de-be5c-d34936dcd586","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof menu_1 = render(({ useSetter }) => {\n    const { Menu } = Antd;\n    const { MailOutlined, AppstoreOutlined, SettingOutlined } = AntdIcons;\n    const items = [\n      {\n        label: 'Navigation One',\n        key: 'mail',\n        icon: jsx`<${MailOutlined} />`,\n      },\n      {\n        label: 'Navigation Two',\n        key: 'app',\n        icon: jsx`<${AppstoreOutlined} />`,\n        disabled: true,\n      },\n      {\n        label: 'Navigation Three - Submenu',\n        key: 'SubMenu_2',\n        icon: jsx`<${SettingOutlined} />`,\n        children: [\n          {\n            type: 'group',\n            label: 'Item 1',\n            children: [\n              {\n                label: 'Option 1',\n                key: 'setting:1',\n              },\n              {\n                label: 'Option 2',\n                key: 'setting:2',\n              },\n            ],\n          },\n          {\n            type: 'group',\n            label: 'Item 2',\n            children: [\n              {\n                label: 'Option 3',\n                key: 'setting:3',\n              },\n              {\n                label: 'Option 4',\n                key: 'setting:4',\n              },\n            ],\n          },\n        ],\n      },\n      {\n        label: (\n          jsx`<a href=\"https://ant.design\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Navigation Four - Link\n          </a>`\n        ),\n        key: 'alipay',\n      },\n    ];\n  const {Item, SubMenu,ItemGroup} = Menu;\n    return  jsx`<${Menu} key='11be181b-ce89-4cbf-86f4-a1eba4d78805' mode=\"horizontal\" defaultSelectedKeys=${['mail']}>\n          ${MenuItems(items)}\n      <//>`;\n    });","pinCode":false,"dname":"d023184b-9b69-4d8f-9380-0c0ac590f3b5","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof menu_2 = render(({ useSetter }) => {\n    const { Menu } = Antd;\n    const { MailOutlined, AppstoreOutlined, SettingOutlined } = AntdIcons;\n    function getItem(label, key, icon, children, type) {\n      return {\n        key,\n        icon,\n        children,\n        label,\n        type,\n      };\n    }\n    const items = [\n      getItem('Navigation One', 'sub1', jsx`<${MailOutlined} />`, [\n        getItem('Item 1', 'g1', null, [getItem('Option 1', '1'), getItem('Option 2', '2')], 'group'),\n        getItem('Item 2', 'g2', null, [getItem('Option 3', '3'), getItem('Option 4', '4')], 'group'),\n      ]),\n      getItem('Navigation Two', 'sub2', jsx`<${AppstoreOutlined} />`, [\n        getItem('Option 5', '5'),\n        getItem('Option 6', '6'),\n        getItem('Submenu', 'sub3', null, [getItem('Option 7', '7'), getItem('Option 8', '8')]),\n      ]),\n      getItem('Navigation Three', 'sub4', jsx`<${SettingOutlined} />`, [\n        getItem('Option 9', '9'),\n        getItem('Option 10', '10'),\n        getItem('Option 11', '11'),\n        getItem('Option 12', '12'),\n      ]),\n    ];\n    const onClick = (e) => {\n      console.log('click ', e);\n    };\n    const {Item, SubMenu,ItemGroup} = Menu;\n    return  jsx`<${Menu} key='12be181b-ce89-4cbf-86f4-a1eba4d78805' onClick=${onClick}\n      style=${{\n        width: 256,\n      }}\n      defaultSelectedKeys=$['sub2']}\n      defaultOpenKeys=${['sub1']}\n      mode=\"inline\">\n          ${MenuItems(items)}\n      <//>`;\n    });","pinCode":false,"dname":"ae4d8f0e-47f3-46be-b648-2e02ea4ba2e0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof menu_3 = render(({ useSetter }) => {\n    const { Button, Menu } = Antd;\n    const {Item, SubMenu,ItemGroup} = Menu;\n    const { AppstoreOutlined,\n      ContainerOutlined,\n      DesktopOutlined,\n      MailOutlined,\n      MenuFoldOutlined,\n      MenuUnfoldOutlined,\n      PieChartOutlined } = AntdIcons;\n  \tfunction getItem(label, key, icon, children, type) {\n      return {\n        key,\n        icon,\n        children,\n        label,\n        type,\n      };\n    }\n    const items = [\n      getItem('Option 1', '1', jsx`<${PieChartOutlined} />`),\n      getItem('Option 2', '2', jsx`<${DesktopOutlined} />`),\n      getItem('Option 3', '3', jsx`<${ContainerOutlined} />`),\n      getItem('Navigation One', 'sub_1_1', jsx`<${MailOutlined} />`, [\n        getItem('Option 5', '5'),\n        getItem('Option 6', '6'),\n        getItem('Option 7', '7'),\n        getItem('Option 8', '8'),\n      ]),\n      getItem('Navigation Two', 'sub_2_1', jsx`<${AppstoreOutlined} />`, [\n        getItem('Option 9', '9'),\n        getItem('Option 10', '10'),\n        getItem('Submenu', 'sub_3_1', null, [getItem('Option 11', '11'), getItem('Option 12', '12')]),\n      ]),\n    ];\n    const App = () => {\n        const [collapsed, setCollapsed] = useState(false);\n        const toggleCollapsed = () => {\n          setCollapsed(!collapsed);\n        };\n        return (\n          jsx`<div\n            style=${{\n              width: 256,\n            }}\n          >\n            <${Button}\n              type=\"primary\"\n              onClick=${toggleCollapsed}\n              style=${{\n                marginBottom: 16,\n              }}\n            >\n              ${collapsed ? jsx`<${MenuUnfoldOutlined} />` : jsx`<${MenuFoldOutlined} />`}\n            <//>\n            <${Menu} key=\"menu_13\"\n              defaultSelectedKeys=${['1']}\n              defaultOpenKeys=${['sub_1_1']}\n              mode=\"inline\"\n              theme=\"dark\"\n              inlineCollapsed=${collapsed}\n            >\n            ${MenuItems(items)}\n          <//>\n          </div>`\n        );\n      };\n     return jsx`<${App} />`;\n});","pinCode":false,"dname":"561189d2-d090-4219-af40-31e3eb58cce8","codeMode":"javascript2"}}},{"type":"header","data":{"text":"PageHeader","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof pageHeader = render(({ useSetter }) => {\n  const { PageHeader } = Antd;\n  return jsx`<${PageHeader} key=\"pageHeader1\"\n    className=\"site-page-header\"\n    onBack=${() => alert(\"back\")}\n    title=\"Title\"\n    subTitle=\"This is a subtitle\"\n  />`;\n})","pinCode":false,"dname":"850648e8-3bfd-444c-8406-74ca22e72a41","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Pagination","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof pagination_1 = render(({ useSetter }) => {\n  const { Pagination } = Antd;\n  const App = () => jsx`<${Pagination} defaultCurrent=${1} total=${50} />`;\n  return jsx`<${App} />`;\n})","pinCode":false,"dname":"fac0d111-8ac1-4646-bbe8-aa0099f57a3a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof pagination_3 = render(({ useSetter }) => {\n    const { Pagination } = Antd;\n    const onShowSizeChange = (current, pageSize) => {\n      console.log(current, pageSize);\n    };\n    return  jsx`<${Fragment} key='82f6f3f0-eac0-4dda-a177-b8fea0e0cbb1'>\n        <${Pagination}\n          showSizeChanger\n          onShowSizeChange=${onShowSizeChange}\n          defaultCurrent=${3}\n          total=${500}\n        />\n        <br />\n        <${Pagination}\n          showSizeChanger\n          onShowSizeChange=${onShowSizeChange}\n          defaultCurrent=${3}\n          total=${500}\n          disabled\n        />\n      <//>`\n    })","pinCode":false,"dname":"8f731bcb-37bf-4c96-b706-ed8d15a3f53c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof pagination_2 = render(({ useSetter }) => {\n    const { Pagination } = Antd;\n    const onChange = (pageNumber) => {\n      console.log('Page: ', pageNumber);\n    };\n    const App = () => (\n      jsx`<${Fragment} key='82f6f3f0-eac0-4dda-a177-b8fea0e0cbb1'>\n      \t<${Pagination} showQuickJumper defaultCurrent=${2} total=${500} onChange=${onChange} />\n        <br />\n        <${Pagination} showQuickJumper defaultCurrent=${2} total=${500} onChange=${onChange} disabled />\n       <//>`\n    );\n  return jsx`<${App} />`\n})","pinCode":false,"dname":"644235d7-2c9e-497a-8f5d-2d08f712cb18","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof pagination_4 = render(({ useSetter }) => {\n    const { Pagination } = Antd;\n    const showTotal = (total) => `Total ${total} items`;\n    const App = () => (\n      jsx`<${Fragment}>\n        <${Pagination} size=\"small\" total=${50} />\n        <${Pagination} size=\"small\" total=${50} showSizeChanger showQuickJumper />\n        <${Pagination} size=\"small\" total=${50} showTotal=${showTotal} />\n        <${Pagination}\n          size=\"small\"\n          total=${50}\n          disabled\n          showTotal=${showTotal}\n          showSizeChanger\n          showQuickJumper\n        />\n      <//>`\n    );\n  return jsx`<${App} />`\n})","pinCode":false,"dname":"8d309724-3c9a-4c03-94d0-67f7d12031a2","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof pagination_5 = render(({ useSetter }) => {\n    const { Pagination } = Antd;\n    return  jsx`<${Fragment} key='adb40115-db8e-4a67-b4c3-1bba9b75b047'>\n        <${Pagination} simple defaultCurrent=${2} total=${50} />\n        <br />\n        <${Pagination} disabled simple defaultCurrent=${2} total=${50} />\n    <//>`\n})","pinCode":false,"dname":"a49d905f-f99c-4f2c-a349-a8b69b16ef9a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"pagination_6","pinCode":false,"dname":"9d9c2ae2-b218-49c9-a352-9c061a9d0e6b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof pagination_6 = render(({ useSetter }) => {\n    const { Pagination } = Antd;\n    const [current, setCurrent] = useState(3);\n    const onChange = (page) => {\n      console.log(page);\n      setCurrent(page);\n    };\n  useSetter({current})\n    return  jsx`<${Pagination} current=${current} onChange=${onChange} total=${50} />`\n})","pinCode":false,"dname":"d5fdca84-f82f-4719-a64f-0b2c74b8ba82","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Steps","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof steps_1 = render(({ useSetter }) => {\n    const [step_number, setStep_number] = useState(1);\n    const Steps = Antd.Steps;\n    const Step = Steps.Step;\n    const update_step_number = (d) => (setStep_number(d));\n    useSetter({ step_number });\n    return jsx`<div key='8db2ffb7-4a3c-4428-ac05-bb1076589995'>\n      <${Steps} current='${step_number}' onChange=${update_step_number}>\n      <${Step} title=\"Finished\" description=\"This is a description.\" />\n      <${Step} title=\"In Progress\" subTitle=\"Left 00:00:08\" description=\"This is a description.\" />\n      <${Step} title=\"Waiting\" description=\"This is a description.\" />\n     <//>\n    <//>`;\n  })","pinCode":false,"dname":"2a9e57e2-bd38-4764-929e-a7215d7235ec","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof steps = render(({ useSetter }) => {\n    const [step_number, setStep_number] = useState(1);\n    const Steps = Antd.Steps;\n    const Step = Steps.Step;\n    const update_step_number = (d) => (setStep_number(d));\n  \tconst description = 'This is a description.';\n    const items=[\n      {\n        title: 'Finished',\n        description,\n      },\n      {\n        title: 'In Progress',\n        description,\n        subTitle: 'Left 00:00:08',\n      },\n      {\n        title: 'Waiting',\n        description,\n      },\n    ]\n    useSetter({ step_number });\n    return jsx`<div key='229253c2-6c05-4cd7-80f9-7e669e333f2c'>\n      <${Steps} current='${step_number}' onChange=${update_step_number}>\n      ${items.map((item,index)=>{\n    \treturn jsx`<${Step} key=${index} title=${item.title} description=${item.description} subTitle=${item.subTitle} />`\n    \t})}\n     <//>\n    <//>`;\n})","pinCode":false,"dname":"18fb87cb-884f-4aaf-b16e-7e143f20729c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof steps2 = render(({ useSetter }) => {\n    const [step_number, setStep_number] = useState(1);\n    const Steps = Antd.Steps;\n    const { LoadingOutlined, SmileOutlined, SolutionOutlined, UserOutlined } = AntdIcons;\n    const Step = Steps.Step;\n    const update_step_number = (d) => (setStep_number(d));\n  \tconst description = 'This is a description.';\n    const items=[\n      {\n        title: 'Login',\n        status: 'finish',\n        icon: jsx`<${UserOutlined} />`,\n      },\n      {\n        title: 'Verification',\n        status: 'finish',\n        icon: jsx`<${SolutionOutlined} />`,\n      },\n      {\n        title: 'Pay',\n        status: 'process',\n        icon: jsx`<${LoadingOutlined} />`,\n      },\n      {\n        title: 'Done',\n        status: 'wait',\n        icon: jsx`<${SmileOutlined} />`,\n      },\n    ]\n    useSetter({ step_number });\n    return jsx`<div key='aaaa3c2-6c05-4cd7-80f9-7e669e333f2c'>\n      <${Steps} current='${step_number}' onChange=${update_step_number}>\n      ${items.map((item,index)=>{\n    \treturn jsx`<${Step} key=${index} title=${item.title} description=${item.description} subTitle=${item.subTitle} icon=${item.icon} />`\n    \t})}\n     <//>\n    <//>`;\n})","pinCode":false,"dname":"138a3d3f-cf20-46d8-8767-53e73b59a66c","codeMode":"javascript2"}}},{"type":"header","data":{"text":"AutoComplete","level":1}},{"type":"codeTool","data":{"codeData":{"value":"autoComplete","pinCode":false,"dname":"1598abeb-89c1-4315-ba7d-2e2248ed43b7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof autoComplete = render(({ useSetter }) => {\n    const { AutoComplete } = Antd;\n    const mockVal = (str, repeat = 1) => ({\n      value: str.repeat(repeat),\n    });\n    const [value, setValue] = useState('');\n    const [options, setOptions] = useState([]);\n    const onSearch = (searchText) => {\n      setOptions(\n        !searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)],\n      );\n    };\n    const onSelect = (data) => {\n      console.log('onSelect', data);\n    };\n    const onChange = (data) => {\n      setValue(data);\n    };\n   useSetter({value})\n    return jsx`<${Fragment} key='69c34e19-3bf7-4bcc-b0ff-4f1f32ce7907'>\n          <${AutoComplete}\n            options=${options}\n            style=${{\n              width: 200,\n            }}\n            onSelect=${onSelect}\n            onSearch=${onSearch}\n            placeholder=\"input here\"\n          />\n          <br />\n          <br />\n          <${AutoComplete}\n            value=${value}\n            options=${options}\n            style=${{\n              width: 200,\n            }}\n            onSelect=${onSelect}\n            onSearch=${onSearch}\n            onChange=${onChange}\n            placeholder=\"control mode\"\n          />\n        <//>`\n    })","pinCode":false,"dname":"e1d972a6-6246-4eb0-bd0e-14038f2dbf1c","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Cascader","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof cascader_1 = render(({ useSetter }) => {\n  const { Cascader } = Antd;\n  const options = [\n    {\n      value: \"zhejiang\",\n      label: \"Zhejiang\",\n      children: [\n        {\n          value: \"hangzhou\",\n          label: \"Hangzhou\",\n          children: [{ value: \"xihu\", label: \"West Lake\" }],\n        },\n      ],\n    },\n    {\n      value: \"jiangsu\",\n      label: \"Jiangsu\",\n      children: [\n        {\n          value: \"nanjing\",\n          label: \"Nanjing\",\n          children: [{ value: \"zhonghuamen\", label: \"Zhong Hua Men\" }],\n        },\n      ],\n    },\n  ];\n  const onChange = (value) => {\n    console.log(value);\n  };\n  return jsx`<${Cascader} options=${options} onChange=${onChange} placeholder=\"Please select\" />`;\n})","pinCode":false,"dname":"fd003546-1fbb-4406-af0e-fe08974e2c14","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof cascader_2 = render(({ useSetter }) => {\n  const { Cascader } = Antd;\n  const options = [\n    {\n      value: \"zhejiang\",\n      label: \"Zhejiang\",\n      children: [\n        {\n          value: \"hangzhou\",\n          label: \"Hangzhou\",\n          children: [{ value: \"xihu\", label: \"West Lake\" }],\n        },\n      ],\n    },\n    {\n      value: \"jiangsu\",\n      label: \"Jiangsu\",\n      children: [\n        {\n          value: \"nanjing\",\n          label: \"Nanjing\",\n          children: [{ value: \"zhonghuamen\", label: \"Zhong Hua Men\" }],\n        },\n      ],\n    },\n  ];\n  const [text, setText] = useState(\"Unselect\");\n  const onChange = (_, selectedOptions) => {\n    setText(selectedOptions.map((o) => o.label).join(\", \"));\n  };\n  return jsx`<span>\n      ${text}&nbsp;\n      <${Cascader} options=${options} onChange=${onChange}>\n        <a href=\"#\">Change city</a>\n      <//>\n    </span>`;\n})","pinCode":false,"dname":"1690a35b-8359-4034-a032-9e7e8f1d62d2","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Checkbox","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof checkbox = render(({ useSetter }) => {\n    const {Checkbox} = Antd;\n    const onChange = (e) => {\n      console.log(`checked = ${e.target.checked}`);\n    };\n    return jsx`<${Checkbox} onChange=${onChange}>Checkbox<//>`;\n})","pinCode":false,"dname":"7fc912f1-c774-46ed-8db7-f83326ac97c2","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof checkbox1 = render(({ useSetter }) => {\n    const {Checkbox, Divider} = Antd;\n    const CheckboxGroup = Checkbox.Group;\n    const plainOptions = ['Apple', 'Pear', 'Orange'];\n    const defaultCheckedList = ['Apple', 'Orange'];\n    const App = () => {\n      const [checkedList, setCheckedList] = useState(defaultCheckedList);\n      const [indeterminate, setIndeterminate] = useState(true);\n      const [checkAll, setCheckAll] = useState(false);\n      const onChange = (list) => {\n        setCheckedList(list);\n        setIndeterminate(!!list.length && list.length < plainOptions.length);\n        setCheckAll(list.length === plainOptions.length);\n      };\n      const onCheckAllChange = (e) => {\n        setCheckedList(e.target.checked ? plainOptions : []);\n        setIndeterminate(false);\n        setCheckAll(e.target.checked);\n      };\n      return (\n        jsx`<${Fragment}>\n          <${Checkbox} indeterminate=${indeterminate} onChange=${onCheckAllChange} checked=${checkAll}>\n            Check all\n          <//>\n          <${Divider} />\n          <${CheckboxGroup} options=${plainOptions} value=${checkedList} onChange=${onChange} />\n        <//>`\n      );\n    };\n  return jsx`<${App} />`\n})","pinCode":false,"dname":"e1891d32-6f49-4dbc-bcb8-07d03b4904c1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof checkbox2 = render(({ useSetter }) => {\n    const {Checkbox, Divider} = Antd;\n   const onChange = (checkedValues) => {\n      console.log('checked = ', checkedValues);\n    };\n    const plainOptions = ['Apple', 'Pear', 'Orange'];\n    const options = [\n      {\n        label: 'Apple',\n        value: 'Apple',\n      },\n      {\n        label: 'Pear',\n        value: 'Pear',\n      },\n      {\n        label: 'Orange',\n        value: 'Orange',\n      },\n    ];\n    const optionsWithDisabled = [\n      {\n        label: 'Apple',\n        value: 'Apple',\n      },\n      {\n        label: 'Pear',\n        value: 'Pear',\n      },\n      {\n        label: 'Orange',\n        value: 'Orange',\n        disabled: false,\n      },\n    ];\n    const App = () => (\n      jsx`<${Fragment}>\n        <${Checkbox.Group} options=${plainOptions} defaultValue=${['Apple']} onChange=${onChange} />\n        <br />\n        <br />\n        <${Checkbox.Group} options=${options} defaultValue=${['Pear']} onChange=${onChange} />\n        <br />\n        <br />\n        <${Checkbox.Group}\n          options=${optionsWithDisabled}\n          disabled\n          defaultValue=${['Apple']}\n          onChange=${onChange}\n        />\n      <//>`\n    );\n  return jsx`<${App} />`\n})","pinCode":false,"dname":"37f3b03d-5843-4860-898e-05f565db9af6","codeMode":"javascript2"}}},{"type":"header","data":{"text":"DatePicker","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof datePicker = render(({ useSetter }) => {\n    const { DatePicker, Space } = Antd;\n    const onChange = (date, dateString) => {\n      console.log(date, dateString);\n    };\n    const App = () => (\n      jsx`<${Space} direction=\"vertical\">\n        <${DatePicker} onChange=${onChange} />\n        <${DatePicker} onChange=${onChange} picker=\"week\" />\n        <${DatePicker} onChange=${onChange} picker=\"month\" />\n        <${DatePicker} onChange=${onChange} picker=\"quarter\" />\n        <${DatePicker} onChange=${onChange} picker=\"year\" />\n      <//>`\n    );\n    return jsx`<${App} />`\n});","pinCode":false,"dname":"e3144d54-2849-4533-9b1c-6a0eb54660ea","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof datePicker1 = render(({ useSetter }) => {\n    const { DatePicker, Space } = Antd;\n   \tconst { RangePicker } = DatePicker;\n    const App = () => (\n      jsx`<${Space} direction=\"vertical\" size=${12}>\n        <${RangePicker} />\n        <${RangePicker} showTime />\n        <${RangePicker} picker=\"week\" />\n        <${RangePicker} picker=\"month\" />\n        <${RangePicker} picker=\"quarter\" />\n        <${RangePicker} picker=\"year\" />\n      <//>`\n    );\n    return jsx`<${App} />`\n});","pinCode":false,"dname":"fbc954aa-e1e5-4c60-b05f-c889fb272323","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Form","level":1}},{"type":"codeTool","data":{"codeData":{"value":"form","pinCode":false,"dname":"32cfee19-8509-4b43-9c37-d34401761614","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof form = render(({ useSetter }) => {\n    const { Button, Checkbox, Form, Input } = Antd;\n    const [ remember, setRemember ] = useState(true);\n    const [ username, setUsername ] = useState(\"\");\n    const [ password, setPassword ] = useState(\"\");\n    const onFinish = (values) => {\n      console.log('Success:', values);\n    };\n    const onFinishFailed = (errorInfo) => {\n      console.log('Failed:', errorInfo);\n    };\n    useSetter({remember,password,username});\n    return jsx`<${Form} key='2e569aac-5769-479f-aafb-3d8e73bee4eb'\n        name=\"basic\"\n        labelCol=${{\n          span: 8,\n        }}\n        wrapperCol=${{\n          span: 16,\n        }}\n        initialValues=${{\n            remember: remember,\n            username: username,\n            password: password,\n        }}\n        onFinish=${onFinish}\n        onFinishFailed=${onFinishFailed}\n        autoComplete=\"off\"\n      >\n        <${Form.Item}\n          label=\"Username\"\n          name=\"username\"\n          rules=${[\n            {\n              required: true,\n              message: 'Please input your username!',\n            },\n          ]}\n        >\n          <${Input} onChange=${(e)=>{  setUsername(e.target.value); }} />\n        <//>\n  \n        <${Form.Item}\n          label=\"Password\"\n          name=\"password\"\n          rules=${[\n            {\n              required: true,\n              message: 'Please input your password!',\n            },\n          ]}\n        >\n          <${Input.Password} onChange=${(e)=>{  setPassword(e.target.value) }} />\n        <//>\n  \n        <${Form.Item}\n          name=\"remember\"\n          valuePropName=\"checked\"\n          wrapperCol=${{\n            offset: 8,\n            span: 16,\n          }}\n        >\n          <${Checkbox} onChange=${(e)=>{ setRemember(e.target.checked) }}>Remember me<//>\n        <//>\n  \n        <${Form.Item}\n          wrapperCol=${{\n            offset: 8,\n            span: 16,\n          }}\n        >\n          <${Button} type=\"primary\" htmlType=\"submit\">\n            Submit\n          <//>\n        <//>\n      <//>`\n  })","pinCode":false,"dname":"681dd943-ea8c-481d-9dfb-44a17a47d4d3","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof form1 = render(({ useSetter }) => {\n    const { Button, Form, Input, Select } = Antd;\n    const { Option } = Select;\n    const layout = {\n      labelCol: {\n        span: 8,\n      },\n      wrapperCol: {\n        span: 16,\n      },\n    };\n    const tailLayout = {\n      wrapperCol: {\n        offset: 8,\n        span: 16,\n      },\n    };\n    const App = () => {\n      const [form] = Form.useForm();\n      const onGenderChange = (value) => {\n        switch (value) {\n          case 'male':\n            form.setFieldsValue({\n              note: 'Hi, man!',\n            });\n            return;\n          case 'female':\n            form.setFieldsValue({\n              note: 'Hi, lady!',\n            });\n            return;\n          case 'other':\n            form.setFieldsValue({\n              note: 'Hi there!',\n            });\n        }\n      };\n      const onFinish = (values) => {\n        console.log(values);\n      };\n      const onReset = () => {\n        form.resetFields();\n      };\n      const onFill = () => {\n        form.setFieldsValue({\n          note: 'Hello world!',\n          gender: 'male',\n        });\n      };\n      return (\n        jsx`<${Form} ...${layout} form=${form} name=\"control-hooks\" onFinish=${onFinish}>\n          <${Form.Item}\n            name=\"note\"\n            label=\"Note\"\n            rules=${[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <${Input} />\n          <//>\n          <${Form.Item}\n            name=\"gender\"\n            label=\"Gender\"\n            rules=${[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <${Select}\n              placeholder=\"Select a option and change input text above\"\n              onChange=${onGenderChange}\n              allowClear\n            >\n              <${Option} value=\"male\">male<//>\n              <${Option} value=\"female\">female<//>\n              <${Option} value=\"other\">other<//>\n            <//>\n          <//>\n          <${Form.Item}\n            noStyle\n            shouldUpdate=${(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\n          >\n            ${({ getFieldValue }) =>\n              getFieldValue('gender') === 'other' ? (\n                jsx`<${Form.Item}\n                  name=\"customizeGender\"\n                  label=\"Customize Gender\"\n                  rules=${[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <${Input} />\n                <//>`\n              ) : null\n            }\n          <//>\n          <${Form.Item} ...${tailLayout}>\n            <${Button} type=\"primary\" htmlType=\"submit\">\n              Submit\n            <//>\n            <${Button} htmlType=\"button\" onClick=${onReset}>\n              Reset\n            <//>\n            <${Button} type=\"link\" htmlType=\"button\" onClick=${onFill}>\n              Fill form\n            <//>\n          <//>\n        <//>`\n      );\n    };\n    return jsx`<${App} />`\n  })","pinCode":false,"dname":"47ce2438-fb7d-421a-bad4-2bbb8c6e3bf4","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Input","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof input = render(({ useSetter }) => {\n  const { Input } = Antd;\n  return jsx`<${Input} placeholder=\"Basic usage\" />`;\n})","pinCode":false,"dname":"56f602a7-022e-4967-b303-1f0e13919e27","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof input1 = render(({ useSetter }) => {\n  const { UserOutlined } = AntdIcons;\n  const { Input } = Antd;\n  return jsx`<${Fragment}>\n  <${Input} size=\"large\" placeholder=\"large size\" prefix=${jsx`<${UserOutlined} />`} />\n    <br />\n    <br />\n    <${Input} placeholder=\"default size\" prefix=${jsx`<${UserOutlined} />`} />\n    <br />\n    <br />\n    <${Input} size=\"small\" placeholder=\"small size\" prefix=${jsx`<${UserOutlined} />`} />\n  <//>`;\n})","pinCode":false,"dname":"e82a5144-0bdf-49c6-9725-0220e0a18eef","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof input3 = render(({ useSetter }) => {\n  const { AudioOutlined } = AntdIcons;\n  const { Input, Space } = Antd;\n  const { Search } = Input;\n  const suffix = jsx`<${AudioOutlined}\n    style=${{\n      fontSize: 16,\n      color: '#1890ff',\n    }}\n  />`;\n  const onSearch = (value) => console.log(value);\n  const App = () => jsx`<${Space} direction=\"vertical\">\n      <${Search}\n        placeholder=\"input search text\"\n        onSearch=${onSearch}\n        style=${{ width: 200 }}\n      />\n      <${Search}\n        placeholder=\"input search text\"\n        allowClear\n        onSearch=${onSearch}\n        style=${{ width: 200 }}\n      />\n      <${Search}\n        addonBefore=\"https://\"\n        placeholder=\"input search text\"\n        allowClear\n        onSearch=${onSearch}\n        style=${{ width: 304 }}\n      />\n      <${Search} placeholder=\"input search text\" onSearch=${onSearch} enterButton />\n      <${Search}\n        placeholder=\"input search text\"\n        allowClear\n        enterButton=\"Search\"\n        size=\"large\"\n        onSearch=${onSearch}\n      />\n      <${Search}\n        placeholder=\"input search text\"\n        enterButton=\"Search\"\n        size=\"large\"\n        suffix=${suffix}\n        onSearch=${onSearch}\n      />\n    </${Space}>`;\n  return jsx`<${App} />`\n})","pinCode":false,"dname":"4b1904ff-e13f-43a2-b104-2f9403514658","codeMode":"javascript2"}}},{"type":"header","data":{"text":"InputNumber","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof inputNumber = render(({ useSetter }) => {\n    const { InputNumber  } = Antd;\n    const onChange = (value) => {\n      console.log('changed', value);\n    };\n    const App = () => jsx`<${InputNumber} min=${1} max=${10} defaultValue=${3} onChange=${onChange} />`;\n    return jsx`<${App}  //> `;\n})","pinCode":false,"dname":"a73b5017-0cf6-4bb1-9cda-d1f6426d89d8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof inputNumber2 = render(({ useSetter }) => {\n    const { Button, InputNumber   } = Antd;\n   \tconst App = () => {\n      const [disabled, setDisabled] = useState(true);\n      const toggle = () => {\n        setDisabled(!disabled);\n      };\n      return (\n        jsx`<${Fragment}>\n          <${InputNumber} min=${1} max=${10} disabled=${disabled} defaultValue=${3} />\n          <div\n            style=${{\n              marginTop: 20,\n            }}\n          >\n            <${Button} onClick=${toggle} type=\"primary\">\n              Toggle disabled\n            </${Button}>\n          </div>\n        </>`\n      );\n  };\n    return jsx`<${App}  //> `;\n})","pinCode":false,"dname":"928c531c-48b2-4231-a718-5269948fb432","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof inputNumber3 = render(({ useSetter }) => {\n  const { SettingOutlined  } = AntdIcons;\n  const { Cascader, InputNumber, Select, Space } = Antd;\n  const { Option } = Select;\n  const selectBefore = (\n    jsx`<${Select}\n      defaultValue=\"add\"\n      style=${{\n        width: 60,\n      }}\n    >\n      <${Option} value=\"add\">+<//>\n      <${Option} value=\"minus\">-<//>\n    <//>`\n  );\n  const selectAfter = (\n    jsx`<${Select}\n      defaultValue=\"USD\"\n      style=${{\n        width: 60,\n      }}\n    >\n      <${Option} value=\"USD\">$<//>\n      <${Option} value=\"EUR\">€<//>\n      <${Option} value=\"GBP\">£<//>\n      <${Option} value=\"CNY\">¥<//>\n    </${Select}>`\n  );\n  const App = () => (\n    jsx`<${Space} key=\"aaa\" direction=\"vertical\">\n      <${InputNumber} addonBefore=\"+\" addonAfter=\"$\" defaultValue=${100} />\n      <${InputNumber} addonBefore=${selectBefore} addonAfter=${selectAfter} defaultValue=${100} />\n      <${InputNumber} addonAfter=${jsx`<${SettingOutlined} />`} defaultValue=${100} />\n      <${InputNumber}\n        addonBefore=${\n          jsx`<${Cascader}\n            placeholder=\"cascader\"\n            style=${{\n              width: 150,\n            }}\n          />`\n        }\n        defaultValue=${100}\n      />\n    </${Space}>`\n  );\n  return jsx`<${App}  //> `;\n})","pinCode":false,"dname":"98cb9d4c-efe6-4b55-9c44-cbd256a8291d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"moment = require(\"moment\")","pinCode":false,"dname":"6137456d-c614-4c82-919a-b1b7a52d58b1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof timepicker = render(({ useSetter }) => {\n  const { TimePicker } = Antd;\n  const onChange = (time, timeString) => {\n    console.log(time, timeString);\n  };\n  return jsx`<${TimePicker} onChange=${onChange} defaultValue=${moment(\n    \"12:00:00\",\n    \"HH:mm:ss\"\n  )} />`;\n})","pinCode":false,"dname":"e8caa35a-3541-4394-8c60-4ffdbb4c3023","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_6 = render(({ useSetter }) => {\n  const { Switch } = Antd;\n  return jsx`<${Fragment}>\n    <${Switch}   />\n    <br />\n    <${Switch} size=\"small\" defaultChecked />\n  <//>`\n})","pinCode":false,"dname":"90797540-89e7-4d55-9c58-79fd4242de9a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_5 = render(({ useSetter }) => {\n    const { Col, InputNumber, Row, Slider } = Antd;\n    const IntegerStep = () => {\n      const [inputValue, setInputValue] = useState(1);\n      const onChange = (newValue) => {\n        setInputValue(newValue);\n      };\n      return (\n        jsx`<${Row}>\n          <${Col} span=${12}>\n            <${Slider}\n              min=${1}\n              max=${20}\n              onChange=${onChange}\n              value=${typeof inputValue === 'number' ? inputValue : 0}\n            />\n          <//>\n          <${Col} span=${4}>\n            <${InputNumber}\n              min=${1}\n              max=${20}\n              style=${{\n                margin: '0 16px',\n              }}\n              value=${inputValue}\n              onChange=${onChange}\n            />\n          <//>\n        <//>`\n      );\n    };\n    const DecimalStep = () => {\n      const [inputValue, setInputValue] = useState(0);\n      const onChange = (value) => {\n        if (isNaN(value)) {\n          return;\n        }\n        setInputValue(value);\n      };\n      return (\n        jsx`<${Row}>\n          <${Col} span=${12}>\n            <${Slider}\n              min=${0}\n              max=${1}\n              onChange=${onChange}\n              value=${typeof inputValue === 'number' ? inputValue : 0}\n              step=${0.01}\n            />\n          <//>\n          <${Col} span=${4}>\n            <${InputNumber}\n              min=${0}\n              max=${1}\n              style=${{\n                margin: '0 16px',\n              }}\n              step=${0.01}\n              value=${inputValue}\n              onChange=${onChange}\n            />\n          <//>\n        <//>`\n      );\n    };\n    return jsx`<div>\n        <${IntegerStep} />\n        <${DecimalStep} />\n      </div>`\n})","pinCode":false,"dname":"1e746ecd-3c52-4fd8-af42-f52cf5cd3599","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"<i class=\"fas fa-random\"></i>","pinCode":false,"dname":"6bd05ddf-fa1e-4084-8c30-f6b043f3d108","codeMode":"htmlmixed"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof transfer = render(({ useSetter }) => {\n  const { Transfer } = Antd;\n  const mockData = Array.from({ length: 20 }).map((_, i) => ({\n    key: i.toString(),\n    title: `content${i + 1}`,\n    description: `description of content${i + 1}`,\n  }));\n  const initialTargetKeys = mockData\n    .filter((item) => Number(item.key) > 10)\n    .map((item) => item.key);\n  const [targetKeys, setTargetKeys] = useState(initialTargetKeys);\n  const [selectedKeys, setSelectedKeys] = useState([]);\n  const onChange = (nextTargetKeys, direction, moveKeys) => {\n    console.log(\"targetKeys:\", nextTargetKeys);\n    console.log(\"direction:\", direction);\n    console.log(\"moveKeys:\", moveKeys);\n    setTargetKeys(nextTargetKeys);\n  };\n  const onSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\n    console.log(\"sourceSelectedKeys:\", sourceSelectedKeys);\n    console.log(\"targetSelectedKeys:\", targetSelectedKeys);\n    setSelectedKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\n  };\n  const onScroll = (direction, e) => {\n    console.log(\"direction:\", direction);\n    console.log(\"target:\", e.target);\n  };\n  return jsx`<${Transfer}\n        dataSource=${mockData}\n        titles=${['Source', 'Target']}\n        targetKeys=${targetKeys}\n        selectedKeys=${selectedKeys}\n        onChange=${onChange}\n        onSelectChange=${onSelectChange}\n        onScroll=${onScroll}\n        render=${(item) => item.title}\n      />`;\n})","pinCode":false,"dname":"027e4215-6fe1-48f0-ac54-b6bbbb7eb927","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof tree1 = render(({ useSetter }) => {\n    const { Tree } = Antd;\n    const treeData = [\n      {\n        title: \"parent 1\",\n        key: \"0-0\",\n        children: [\n          {\n            title: \"parent 1-0\",\n            key: \"0-0-0\",\n            disabled: true,\n            children: [\n              { title: \"leaf\", key: \"0-0-0-0\", disableCheckbox: true },\n              { title: \"leaf\", key: \"0-0-0-1\" },\n            ],\n          },\n          {\n            title: \"parent 1-1\",\n            key: \"0-0-1\",\n            children: [\n              {\n                title: jsx`<span\n                    style=${{ color: \"#1890ff\" }}\n                  >\n                    sss\n                  </span>`,\n                key: \"0-0-1-0\",\n              },\n            ],\n          },\n        ],\n      },\n    ];\n    const onSelect = (selectedKeys, info) => {\n      console.log(\"selected\", selectedKeys, info);\n    };\n    const onCheck = (checkedKeys, info) => {\n      console.log(\"onCheck\", checkedKeys, info);\n    };\n    return jsx`<${Tree} key='c1097fec-ea53-420b-856e-4001038b2837'\n          checkable\n          defaultExpandedKeys=${[\"0-0-0\", \"0-0-1\"]}\n          defaultSelectedKeys=${[\"0-0-0\", \"0-0-1\"]}\n          defaultCheckedKeys=${[\"0-0-0\", \"0-0-1\"]}\n          onSelect=${onSelect}\n          onCheck=${onCheck}\n          treeData=${treeData}\n        />`;\n  })","pinCode":false,"dname":"47ff25dc-95c0-4e09-9e50-53a3b338ba3c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof tree = render(({ useSetter }) => {\n  const { Tree } = Antd;\n  const treeData = [\n    {\n      title: \"parent 1\",\n      key: \"0-0\",\n      children: [\n        {\n          title: \"parent 1-0\",\n          key: \"0-0-0\",\n          disabled: true,\n          children: [\n            { title: \"leaf\", key: \"0-0-0-0\", disableCheckbox: true },\n            { title: \"leaf\", key: \"0-0-0-1\" },\n          ],\n        },\n        {\n          title: \"parent 1-1\",\n          key: \"0-0-1\",\n          children: [\n            {\n              title: jsx`<span\n                  style=${{ color: \"#1890ff\" }}\n                >\n                  sss\n                </span>`,\n              key: \"0-0-1-0\",\n            },\n          ],\n        },\n      ],\n    },\n  ];\n  const onSelect = (selectedKeys, info) => {\n    console.log(\"selected\", selectedKeys, info);\n  };\n  const onCheck = (checkedKeys, info) => {\n    console.log(\"onCheck\", checkedKeys, info);\n  };\n  return jsx`<${Tree}\n        checkable\n        defaultExpandedKeys=${[\"0-0-0\", \"0-0-1\"]}\n        defaultSelectedKeys=${[\"0-0-0\", \"0-0-1\"]}\n        defaultCheckedKeys=${[\"0-0-0\", \"0-0-1\"]}\n        onSelect=${onSelect}\n        onCheck=${onCheck}\n        treeData=${treeData}\n      />`;\n})","pinCode":false,"dname":"1dd6243d-6d02-40c9-8257-6ca7e4330cc7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"<i class=\"fas fa-tags\"></i>","pinCode":false,"dname":"a4a4ac00-ce8d-430f-be56-70d43d574a13","codeMode":"htmlmixed"}}},{"type":"header","data":{"text":"Tabs","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof tabs = render(({ useSetter }) => {\n    const { Tabs } = Antd;\n    const App = () => (\n      jsx`<${Tabs} defaultActiveKey=\"1\">\n      <${Tabs.TabPane} tab=\"Tab 1\" key=\"1\">\n      Content of Tab Pane 1\n      <//>\n      <${Tabs.TabPane} tab=\"Tab 2\" key=\"2\">\n      Content of Tab Pane 2\n      <//>\n      <${Tabs.TabPane} tab=\"Tab 3\" key=\"3\">\n      Content of Tab Pane 3\n      <//>\n      <//>`\n    );\n  return jsx`<${App}/>`\n})","pinCode":false,"dname":"4dd65a19-81d9-480e-927f-b85dfe3398e5","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter })=>{ \n  const { Radio, Tabs } = Antd;\n  const [size, setSize] = useState('small');\n  const onChange = (e) => {\n    setSize(e.target.value);\n  };\n  return  jsx`<div >\n      <${Radio.Group}\n        value=${size}\n        onChange=${onChange}\n        style=${{\n          marginBottom: 16,\n        }}\n      >\n        <${Radio.Button} value=\"small\">Small<//>\n        <${Radio.Button} value=\"middle\">Middle<//>\n        <${Radio.Button} value=\"large\">Large<//>\n      <//>\n      <${Tabs}\n        defaultActiveKey=\"1\"\n        size=${size}\n        style=${{\n          marginBottom: 32,\n        }}\n      >\n      \t${\n\t\t\tnew Array(3).fill(null).map((_, i) => {\n          const id = String(i + 1);\n          return jsx`<${Tabs.TabPane} tab=\"${`Tab ${id}`}\" key='${id}'>\n      ${`Content of tab ${id}`}\n    <//>`\n        })\n\t\t}\n      <//>\n      <${Tabs}\n        defaultActiveKey=\"1\"\n        type=\"card\"\n        size=${size}\n      >\n      ${\n\t\t\tnew Array(3).fill(null).map((_, i) => {\n          const id = String(i + 1);\n          return jsx`<${Tabs.TabPane} tab=\"${`Tab ${id}`}\" key='${id}'>\n      ${`Content of tab ${id}`}\n    <//>`\n        })\n\t\t}\n      <//>\n    </div>`\n})","pinCode":false,"dname":"ed3ab308-1b62-46c4-abe0-0fa4f5cfb06b","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Table","level":1}},{"type":"codeTool","data":{"codeData":{"value":"viewof table = render(({ useSetter }) => {\n    const { Space, Table, Tag } = Antd;\n    const columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text) => jsx`<a>${text}</a>`,\n      },\n      {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n      },\n      {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n      },\n      {\n        title: 'Tags',\n        key: 'tags',\n        dataIndex: 'tags',\n        render: (_, { tags }) => (\n          jsx`<${Fragment}>\n            ${tags.map((tag) => {\n              let color = tag.length > 5 ? 'geekblue' : 'green';\n              if (tag === 'loser') {\n                color = 'volcano';\n              }\n              return (\n                jsx`<${Tag} color=${color} key='${tag}'>\n                  ${tag.toUpperCase()}\n                <//>`\n              );\n            })}\n          <//>`\n        ),\n      },\n      {\n        title: 'Action',\n        key: 'action',\n        render: (_, record) => (\n          jsx`<${Space} size=\"middle\">\n            <a>Invite ${record.name}</a>\n            <a>Delete</a>\n          <//>`\n        ),\n      },\n    ];\n    const data = [\n      {\n        key: '1',\n        name: 'John Brown',\n        age: 32,\n        address: 'New York No. 1 Lake Park',\n        tags: ['nice', 'developer'],\n      },\n      {\n        key: '2',\n        name: 'Jim Green',\n        age: 42,\n        address: 'London No. 1 Lake Park',\n        tags: ['loser'],\n      },\n      {\n        key: '3',\n        name: 'Joe Black',\n        age: 32,\n        address: 'Sydney No. 1 Lake Park',\n        tags: ['cool', 'teacher'],\n      },\n    ];\n    return jsx`<${Table}  key=\"table_1\" columns=${columns} dataSource=${data} /> `;\n})","pinCode":false,"dname":"bd0ef0f5-8105-495c-b599-241a5a9d3fb0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_3 = render(({ useSetter }) => {\n  const [step_number, setStep_number] = useState(1);\n  const { Table } = Antd;\n  const update_step_number = (d) => setStep_number(step_number + 1);\n  const columns = _.map(cars[0], (v, k) => {\n    return { title: k, dataIndex: k, key: k };\n  });\n  useSetter({ step_number });\n  return jsx`<${Table} key=\"table_2\"\n    columns=${columns}\n    dataSource=${_.map(cars, (car, index) => {\n      return _.assign({ key: String(index) }, car);\n    })}\n    scroll=${{ x: 1500, y: 300 }}\n  /> `;\n})","pinCode":false,"dname":"74346f67-1575-4bd0-aed4-ef769207185e","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Tag<a href=\"https://github.com/ant-design/ant-design/edit/master/components/tag/index.en-US.md\" target=\"_blank\"></a>","level":1}},{"type":"codeTool","data":{"codeData":{"value":"ddsd = 123","pinCode":true,"dname":"2b55ab33-e912-4887-b07b-36029621c4cc","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof tag_1 = render(({ useSetter }) => {\n    const { Tag } = Antd;\n    const log = (e) => {\n      console.log(e);\n    };\n    const preventDefault = (e) => {\n      e.preventDefault();\n      console.log('Clicked! But prevent default.');\n    };\n    return jsx`<${Tag}>Tag 1</${Tag}>\n    <${Tag}>\n      <a href=\"https://github.com/ant-design/ant-design/issues/1862\">Link</a>\n    </${Tag}>\n    <${Tag} closable onClose=${log}>\n      Tag 2\n    </${Tag}>\n    <${Tag} closable onClose=${preventDefault}>\n      Prevent Default\n    </${Tag}>`;\n})","pinCode":false,"dname":"4938e74d-989c-48c4-a370-f176bd13b7a0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof tag_2 = render(({ useSetter }) => {\n  const { Divider, Tag } = Antd;\n  return jsx`<${Fragment}>\n    <${Divider} orientation=\"left\">Presets<//>\n    <div>\n      <${Tag} color=\"magenta\">magenta<//>\n      <${Tag} color=\"red\">red<//>\n      <${Tag} color=\"volcano\">volcano<//>\n      <${Tag} color=\"orange\">orange<//>\n      <${Tag} color=\"gold\">gold<//>\n      <${Tag} color=\"lime\">lime<//>\n      <${Tag} color=\"green\">green<//>\n      <${Tag} color=\"cyan\">cyan<//>\n      <${Tag} color=\"blue\">blue<//>\n      <${Tag} color=\"geekblue\">geekblue<//>\n      <${Tag} color=\"purple\">purple<//>\n    </div>\n    <${Divider} orientation=\"left\">Custom<//>\n    <div>\n      <${Tag} color=\"#f50\">#f50<//>\n      <${Tag} color=\"#2db7f5\">#2db7f5<//>\n      <${Tag} color=\"#87d068\">#87d068<//>\n      <${Tag} color=\"#108ee9\">#108ee9<//>\n    </div>\n  </>`\n})","pinCode":false,"dname":"fb20158c-d13a-4675-ac43-679405311e25","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof pagination = render(({ useSetter }) => {\n  const { HeartOutlined } = AntdIcons;\n  const { Rate } = Antd;\n  return (\n    jsx`<${Fragment}>\n      <${Rate} character=${jsx`<${HeartOutlined} />`} allowHalf />\n      <br />\n      <${Rate} defaultValue=${3} character=\"A\" allowHalf style=${{ fontSize: 36 }} />\n      <br />\n      <${Rate} character=\"好\" allowHalf />\n    <//>`\n  );\n})","pinCode":false,"dname":"b884ae65-8760-49f2-b470-e91387eaa227","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof dropdown = render(({ useSetter }) => {\n  const { Radio } = Antd;\n  const plainOptions = ['Apple', 'Pear', 'Orange'];\n  const options = [\n    {\n      \"<label>\": 'Apple',\n      value: 'Apple',\n    },\n    {\n      label: 'Pear',\n      value: 'Pear',\n    },\n    {\n      label: 'Orange',\n      value: 'Orange',\n    },\n  ];\n  const optionsWithDisabled = [\n    {\n      label: 'Apple',\n      value: 'Apple',\n    },\n    {\n      label: 'Pear',\n      value: 'Pear',\n    },\n    {\n      label: 'Orange',\n      value: 'Orange',\n      disabled: true,\n    },\n  ];\n  const App = () => {\n    const [value1, setValue1] = useState('Apple');\n    const [value2, setValue2] = useState('Apple');\n    const [value3, setValue3] = useState('Apple');\n    const [value4, setValue4] = useState('Apple');\n    const onChange1 = ({ target: { value } }) => {\n      console.log('radio1 checked', value);\n      setValue1(value);\n    };\n    const onChange2 = ({ target: { value } }) => {\n      console.log('radio2 checked', value);\n      setValue2(value);\n    };\n    const onChange3 = ({ target: { value } }) => {\n      console.log('radio3 checked', value);\n      setValue3(value);\n    };\n    const onChange4 = ({ target: { value } }) => {\n      console.log('radio4 checked', value);\n      setValue4(value);\n    };\n    return (\n      jsx`<${Fragment}>\n          <${Radio.Group} options=${plainOptions} onChange=${onChange1} value=${value1} />\n          <br />\n          <${Radio.Group} options=${optionsWithDisabled} onChange=${onChange2} value=${value2} />\n          <br />\n          <br />\n          <${Radio.Group} options=${options} onChange=${onChange3} value=${value3} optionType=\"button\" />\n          <br />\n          <br />\n          <${Radio.Group}\n  options=${optionsWithDisabled}\n  onChange=${onChange4}\n  value=${value4}\n  optionType=\"button\"\n  buttonStyle=\"solid\"\n  />\n    <//>`\n  );\n};\nreturn jsx`<${App} />`;\n    });","pinCode":false,"dname":"54e33d02-f88a-4995-bda8-71c5a3cc621d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import {jsx, render, useState, component, useEffect, useMemo, Fragment } from \"https://grove-help.graphxr.com/react/react\"","pinCode":false,"dname":"4bb00ddb-6aa8-4829-aa62-ce93abe91f45","codeMode":"javascript2"}}}],"version":"2.19.1"}