{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"When write ","pinCode":false,"dname":"a56a4af2-9149-4821-9101-ca98fd29f6cb","codeMode":"markdown"}}},{"type":"codeTool","data":{"codeData":{"value":"## Use the debugger\n\n\nCode not doing what you expect? Use your browser’s built-in debugger to step into code as it runs. Inspect local variables and create breakpoints to control the execution of code.\n\nTo start debugging, add a debugger statement to a cell that’s misbehaving.\n```\n{\n  debugger;\n  return doSomething();\n}\n```\nThen, open your browser’s developer tools. In Chrome, go to View > Developer > JavaScript Console Ctrl-Alt-J (or F12); in Safari, go to Preferences Ctrl-, and check Show Develop menu in the Advanced tab; then go to Develop > Show JavaScript Console Ctrl-Alt-C.\n\nWith the console open, click  Play to run the cell. The browser will then pause execution at the debugger statement, letting you control what happens next. For more on debugging, see the Chrome DevTools overview.","pinCode":false,"dname":"a20bd8ec-3618-4f7a-a7a1-57db0ddd16c5","codeMode":"markdown"}}}],"version":"2.19.1"}