{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"viewof clear_1 = render(({ useSetter }) => {\n    const { Button } = Antd;\n    const [step_number, setStep_number] = useState(1);\n    const update_step_number = (d) => {\n    \tgxr.clear();\n    };\n    useSetter({ step_number });\n    return jsx`Clear the graph <${Button} key='85b05a8f-d1dd-47e4-bf78-a1a36df5aee6' onClick=${update_step_number}  >clear<//> `;\n})","pinCode":false,"dname":"75b2b6a5-63b9-4ce1-a5e2-b2d9532fc54c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n  const { Space, Input, Button, Select } = Antd;\n  const [file2, setFile2] = useState(null);\n  return jsx`<${Space} wrap className=\"align-items-center \" key='146cdd90-e3ae-462a-9a7f-9546b883a469' direction=\"horizonal\">\n  Select a zip file:<${Input} type=\"file\" placeholder=\"Basic usage\" accept=\"*.zip\" label=\"Select a File\" onChange=${(\n    e\n  ) => {\n    mutable archive = jszip.loadAsync(e.target.files[0]);\n  }} />\n  \t  ${\n          !!explainFiles.length &&\n          jsx`<${Button} onClick=${async () => {\n            let file = _.each(explainFiles, (l) => {\n              window.opener._app.controller.importGraphXR(l);\n            })[0];\n            \n          }}>Click to Import All into GraphXR</${Button}>`\n        }\n           Select File:  <${Select}\n      mode=\"single\"\n      allowClear\n      style=${{ width: \"200px\" }}\n      placeholder=\"Please select\"\n      value=${file2}\n      onChange=${(value) => {\n        setFile2(value);\n      }}\n      options=${_.map(explainFiles, (l) => {\n        return { label: l.name, value: l.name };\n      })}\n    />\n        ${\n          !!file2 &&\n          jsx`<${Button} onClick=${async () => {\n            let file = _.filter(explainFiles, (l) => {\n              return l.name === file2;\n            })[0];\n            window.opener._app.controller.importGraphXR(file);\n          }}>Click to Import into GraphXR</${Button}>`\n        }\n    </${Space}>`;\n})","pinCode":false,"dname":"ddf32492-e7d5-4c34-9af7-28a45f0c71ac","codeMode":"javascript2"}}},{"type":"header","data":{"text":"Transform","level":2}},{"type":"header","data":{"text":"extract","level":3}},{"type":"codeTool","data":{"codeData":{"value":"viewof selectCategory_1 = render(({ useSetter }) => {\n  const { Select, Space, Button, Input, Table, Checkbox } = Antd;\n  const [category, setCategory] = useState(categories[0]);\n  const [inheritLinks, setInheritLinks] = useState(false);\n  const [skipEmpty, setSkipEmpty] = useState(false);\n  const [newRelationShip, setNewRelationShip] = useState(\"newRelationShip\");\n  const [newCategory, setNewCategory] = useState(\"newCategory\");\n  const [mainDatas, setMainDatas] = useState(selectMainDatas(categories[0]));\n  const [props, setProps] = useState(\n    _.reduce(\n      mainDatas.properties,\n      (p, key, index) => {\n        p.push({ checked: false, name: key, isKey: false });\n        return p;\n      },\n      []\n    )\n  );\n  const handleChange = (value) => {\n    setCategory(value);\n    setMainDatas(selectMainDatas(value));\n    setProps(\n      _.reduce(\n        selectMainDatas(value).properties,\n        (p, key, index) => {\n          p.push({ checked: false, name: key, isKey: false });\n          return p;\n        },\n        []\n      )\n    );\n  };\n  useSetter({ category, mainDatas });\n  return jsx`<${Space} className=\"align-items-center\" direction=\"vertical\" key='8f2c4069-3065-48a1-a915-ead2e64d58f0'>\n  <${Space} wrap >\n    Select Category: <${Select}\n     value=${category}\n     style=${{ width: 120 }}\n      onChange=${handleChange}\n      options=${_.map(categories, (l) => {\n        return { label: l, value: l };\n      })} />\n   <${Input} placeholder=\"New Relationship\" allowClear value=${newRelationShip} onChange=${(\n    e\n  ) => {\n    setNewRelationShip(e.target.value);\n  }} ></${Input}> \n   <${Input} placeholder=\"New Category\" allowClear value=${newCategory} onChange=${(\n    e\n  ) => {\n    setNewCategory(e.target.value);\n  }} ></${Input}>\n   Inherit Relationship:<${Checkbox} onChange=${(e) => {\n    setInheritLinks(e.target.checked);\n  }} />\n    \n    Skip Empty(\"\"|null|undefined):<${Checkbox} onChange=${(e) => {\n    setSkipEmpty(e.target.checked);\n  }} />\n      <${Button} onClick=${() => {\n    gxr.extract({\n      sourceCategory: category,\n      targetCategory: newCategory,\n      props: props,\n      relationship: newRelationShip,\n      inheritLinks: inheritLinks,\n      skipEmpty: skipEmpty,\n    });\n    gxr.forceLayout();\n  }}>RUN<//>\n    </${Space}>\n     <div style=${{ width: \"500px\" }}>\n    ${_.map(props, (prop, index) => {\n      return jsx`<${RowComp} key=${index} obj=${prop} setObj=${(prop) => {\n        setProps(_.clone(props));\n      }} />`;\n    })}\n  </div>\n    <${CopyComp} text=${`gxr.extract({\n  sourceCategory: \"${category}\",\n  targetCategory: \"${newCategory}\",\n  props: ${JSON.stringify(\n    _.reduce(\n      props,\n      (p, prop, index) => {\n        if (prop.checked) {\n          p.push({ name: prop.name, isKey: prop.isKey });\n        }\n        return p;\n      },\n      []\n    )\n  )},\n  relationship: \"${newRelationShip}\",\n  skipEmpty: ${skipEmpty},\n  inheritLinks: ${inheritLinks}\n})`} /> \n    </${Space}>\n           `;\n})","pinCode":false,"dname":"47d263b2-8bc3-4327-a8f4-028ba775bdda","codeMode":"javascript2"}}},{"type":"header","data":{"text":"link<a href=\"https://www.graphxr.dev/graphxr-api/reference#link\"></a>","level":3}},{"type":"paragraph","data":{"text":"Create new edges between nodes which have the same value for the specified property."}},{"type":"codeTool","data":{"codeData":{"value":"viewof link_1 = render(({ useSetter }) => {\n  const { Select, Space, Button, Input, Table, Checkbox } = Antd;\n  const [category, setCategory] = useState(categories[0]);\n  const [mainDatas, setMainDatas] = useState(selectMainDatas(category));\n  const [property, setProperty] = useState(mainDatas.properties[0]);\n  const [targetCategory, setTargetCategory] = useState(\n    categories[1] || categories[0]\n  );\n  const [targetMainDatas, setTargetMainDatas] = useState(\n    selectMainDatas(targetCategory)\n  );\n  const [targetProperty, setTargetProperty] = useState(targetMainDatas.properties[0]);\n  const [newRelationShip, setNewRelationShip] = useState(\"newRelationShip\");\n  const handleChange = (value) => {\n    setCategory(value);\n    setMainDatas(selectMainDatas(value));\n    setProperty(selectMainDatas(value).properties[0]);\n  };\n  const targetHandleChange = (value) => {\n    setTargetCategory(value);\n    setTargetMainDatas(selectMainDatas(value));\n    setTargetProperty(selectMainDatas(value).properties[0]);\n  };\n  useSetter({ category, mainDatas });\n  return jsx`<${Space} className=\"align-items-center\" direction=\"vertical\" key='d34503f9-61be-4fc4-935c-0a598c61a801'>\n  <${Space} >\n    Source Category: <${Select}\n      value=${category}\n      style=${{ width: 200 }}\n      onChange=${handleChange}\n      options=${_.map(categories, (l) => {\n        return { label: l, value: l };\n      })} />\n    Source Properties:  <${Select}\n      mode=\"single\"\n      allowClear\n      style=${{ width: \"200px\" }}\n      placeholder=\"Please select\"\n      value=${property}\n      onChange=${(value) => {\n        setProperty(value);\n      }}\n      options=${_.map(mainDatas.properties, (l) => {\n        return { label: l, value: l };\n      })}\n    />\n    </${Space}>\n    <${Space} className=\"align-items-center\">New relationship: <${Input} placeholder=\"New Relationship\" allowClear value=${newRelationShip} onChange=${(\n    e\n  ) => {\n    setNewRelationShip(e.target.value);\n  }} ></${Input}> </${Space}>\n    <${Space} >\n    Target Category: <${Select}\n      value=${targetCategory}\n      style=${{ width: 200 }}\n      onChange=${targetHandleChange}\n      options=${_.map(categories, (l) => {\n        return { label: l, value: l };\n      })} />\n    Target Properties:  <${Select}\n      mode=\"single\"\n      allowClear\n      style=${{ width: \"200px\" }}\n      placeholder=\"Please select\"\n      value=${targetProperty}\n      onChange=${(value) => {\n        setTargetProperty(value);\n      }}\n      options=${_.map(targetMainDatas.properties, (l) => {\n        return { label: l, value: l };\n      })}\n    />\n    </${Space}>\n    <${Button} onClick=${() => {\n    gxr.link({\n      sourceCategory: category,\n      sourceProperty: property,\n      targetCategory: targetCategory,\n      targetProperty: targetProperty,\n      relationship: newRelationShip,\n    });\n    gxr.forceLayout();\n  }}>RUN<//>\n    <${CopyComp} text=${`gxr.link({\n  sourceCategory: \"${category}\",\n  sourceProperty: \"${property}\",\n  targetCategory: \"${targetCategory}\",\n  targetProperty: \"${targetProperty}\",\n  relationship: \"${newRelationShip}\",\n})`} /> \n    </${Space}>\n           `;\n})","pinCode":false,"dname":"9b8c19fd-904c-4e3b-a184-c1577c974915","codeMode":"javascript2"}}},{"type":"header","data":{"text":"aggregate","level":3}},{"type":"paragraph","data":{"text":"Pull data to root nodes from their neighborhoods up to a certain depth."}},{"type":"codeTool","data":{"codeData":{"value":"viewof button_1 = render(({ useSetter }) => {\n  const { Button, Space, Select, Input, Switch } = Antd;\n  const [category, setCategory] = useState(categories[0]);\n  const [mainDatas, setMainDatas] = useState(selectMainDatas(category));\n  const [property, setProperty] = useState(\"propertyName\");\n  const [propertyValue, setPropertyValue] = useState(\"propertyValue\");\n  const [editProperty, setEditProperty] = useState(false);\n  const update_step_number = (d) => {\n    _.map(mainDatas.data, (r, i) => {\n      gxr\n        .nodes(mainDatas.data.keysArr[i])\n        .properties(\n          _.assign({ [property]: editProperty?eval(propertyValue)(r):propertyValue }, r)\n        );\n    });\n  };\n  const handleChange = (value) => {\n    setCategory(value);\n    setMainDatas(selectMainDatas(value));\n  };\n  useSetter({});\n  return jsx`<${Space} wrap key='7ac03bc8-e369-4538-a3b1-be77b7dae42d' >\n    \tCategory: <${Select}\n        value=${category}\n        style=${{ width: 200 }}\n        onChange=${handleChange}\n        options=${_.map(categories, (l) => {\n          return { label: l, value: l };\n        })} />\n        New property: <${Input} placeholder=\"New property\" allowClear value=${property} onChange=${( e ) => {\n    setProperty(e.target.value);\n  }} ></${Input}>\n  \t\tValue: ${\n        editProperty\n          ? jsx`<div>\n            <${RawJSONComp} className=\"limit-height\" renderType=${\"RawJSON\"} result=${\n                propertyValue || \"\"\n              } onChange=${(cm, d, value) => {\n                setPropertyValue(value);\n              }}>\n            </${RawJSONComp}>\n        \t<${Button} onClick=${() => {}}>Apply</${Button}>\n        </div>`\n          : jsx`<${Input} placeholder=\"New property\" allowClear value=${propertyValue} onChange=${( e  ) => {\n              setPropertyValue(e.target.value);\n            }} >\n        </${Input}>`\n      }\n  \t\t<${Switch} title=\"Edit Transfer Function\" checked=${editProperty} onChange=${(checked) => {\n            setEditProperty(checked);\n            if (checked) {\n              setPropertyValue(`(r)=>{\n  return r.${mainDatas.properties[0]};\n}`);\n            } else {\n              setPropertyValue(`propertyValue`);\n            }\n          }} />\n    \t<${Button} onClick=${update_step_number}> Add \"${property}\" property to ${category}<//> \n    </${Space}>\n    `;\n})","pinCode":false,"dname":"13639531-aa09-4ba4-8295-19225fe111c9","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof button = render(({ useSetter }) => {\n    const { Button,Select,Space  } = Antd;\n    const [category, setCategory] = useState(categories[0]);\n  \tconst [mainDatas, setMainDatas] = useState(selectMainDatas(category));\n    const [step_number, setStep_number] = useState(1);\n    const update_step_number = (d) => {\n        gxr.aggregate({\n        formula: 'sum',\n        property: \"lineCount\",\n        along: \"SPOKEN_ON\",\n        startNodeId: mainDatas.data.keysArr,\n        toProperty: \"totalLineCount\"\n      })\n    };\n  \tconst handleChange = (value) => {\n      setCategory(value);\n      setMainDatas(selectMainDatas(value));\n    };\n    useSetter({ step_number });\n    return jsx`<${Space} key='e809d5c3-d331-4423-aa2f-52ac6d5b788a' >\n    \tCategory: <${Select}\n        value=${category}\n        style=${{ width: 200 }}\n        onChange=${handleChange}\n        options=${_.map(categories, (l) => {\n          return { label: l, value: l };\n        })} /><${Button} onClick=${update_step_number}  >Add \"totalLineCount\" property to ${category}<//> </${Space}> `;\n})","pinCode":false,"dname":"72ba9938-ab42-430b-9103-fc42ff406d82","codeMode":"javascript2"}}},{"type":"delimiter","data":{}},{"type":"codeTool","data":{"codeData":{"value":"RowComp = component(({ obj,setObj}) => {\n  \tconst { checked, name, isKey } = obj;\n    const { Space, Checkbox,Row,Col } = Antd;\n    return jsx`<${Row} >\n    \t<${Col} span=${6}>${name}</${Col}>  \n        <${Col} span=${6}>selected:<${Checkbox} onChange=${(e)=>{\n      obj.checked = e.target.checked;\n      setObj(obj);\n    }} /></${Col}>\n    <${Col} span=${6}>\n    isKey: <${Checkbox} onChange=${(e)=>{\n      obj.isKey = e.target.checked;\n      setObj(obj);\n    }} />\n    </${Col}>\n    </${Row}>`;\n})","pinCode":false,"dname":"d0bd1df9-ec45-4dd5-af89-1381c9d52de5","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import {jsx, render, useState, component, useEffect, Fragment, useRef } from \"https://grove-help.graphxr.com/react/react\"","pinCode":false,"dname":"0c5fe653-db5f-4704-a77f-e858f8687316","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import {CopyComp,categories  } from \"https://grove-help.graphxr.com/1_react/learn2\"","pinCode":false,"dname":"7a10cf50-e3b9-4e8c-bdf4-d08cb1c6577b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import { showObject, RawJSONComp  } from \"https://grove-help.graphxr.com/1_react/util/helper\"","pinCode":false,"dname":"b945dc47-9a7c-425d-9e77-467ec0524b25","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"RenderObject = component(({ obj }) => {\n  const ref = useRef(null);\n  useEffect(() => {\n    showObject(obj || penguins, (ref && ref.current) || undefined, 0, false);\n    return function cleanup() {};\n  }, []);\n  return jsx`<div ...${{ ref }}></div> `;\n})","pinCode":false,"dname":"d39f051b-a72f-4fb2-9b9c-f49d8bbe5c16","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"mutable archive = FileAttachment(\"GXR_QSG.zip\")\n  .arrayBuffer()\n  .then(buffer => jszip.loadAsync(buffer))","pinCode":false,"dname":"4d1a336f-f0b4-4de6-b2be-5e091158da35","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"getFileType = (fileKey) => {\n    let type;\n    if (imageTypeReg.test(fileKey.toLowerCase())) {\n        type = `image/${imageTypeReg.exec(fileKey.toLowerCase())[0].substring(1)}`\n    } else if (videoTypeReg.test(fileKey.toLowerCase())) {\n        type = `video/${videoTypeReg.exec(fileKey.toLowerCase())[0].substring(1)}`\n    } else if (audioTypeReg.test(fileKey.toLowerCase())) {\n        type = `audio/${audioTypeReg.exec(fileKey.toLowerCase())[0].substring(1)}`\n    } else if (fileKey.toLowerCase().endsWith('.graphxr')) {\n        return 'graphxr'\n    } else {\n        let fileName = getFileName(fileKey);\n        type = (fileName && ~fileName.lastIndexOf('.')) ? `text/${fileName.substring(fileName.lastIndexOf('.') + 1)}` : DefaultFileType;\n    }\n    return type;\n}","pinCode":false,"dname":"bece7101-12cd-4445-9b33-9b86b0283d4b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"getFileName = (fileKey) => {\n  return fileKey && ~fileKey.lastIndexOf(\"/\")\n    ? fileKey.substring(fileKey.lastIndexOf(\"/\") + 1)\n    : fileKey;\n}","pinCode":false,"dname":"8c74cb43-48fb-45c1-b170-743c1d0ca2d6","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"imageTypes = \"jpg|png|gif|ps|jpeg|jfif|webp\".split(\"|\")","pinCode":false,"dname":"ac0b4f71-7e29-4657-84d3-10982f7a0c83","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"imageTypeReg = new RegExp(`\\\\.(${imageTypes.join(\"|\")})$`);","pinCode":false,"dname":"8ae1b4e4-39ae-4394-9c01-3fb1614b9681","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"acceptedImageTypes = _.reduce(\n  imageTypes,\n  (prev, curr) => {\n    prev.push(`image/${curr}`);\n    if (curr === \"webp\") {\n      prev.push(\"text/webp\");\n    }\n    return prev;\n  },\n  []\n)","pinCode":false,"dname":"55261a5f-15b1-4bf7-86b2-1f4516987e10","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"videoTypes = \"mp4|webm|ogg\".split(\"|\")","pinCode":false,"dname":"a0e60624-41a5-4032-b2c8-ef6f893fe52b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"videoTypeReg = new RegExp(`\\\\.(${videoTypes.join(\"|\")})$`)","pinCode":false,"dname":"d5934b55-621c-456d-8a6e-e35d16f040b1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"acceptedVideoTypes = _.reduce(videoTypes, (prev, curr) => {\n  prev.push(`video/${curr}`)\n  prev.push(`application/${curr}`)\n  prev.push(`text/${curr}`)\n  return prev;\n}, []);","pinCode":false,"dname":"01887329-42e9-4eb6-89b8-47127b5e208b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"audioTypes = \"mp3|webm|ogg|ogv|wave|wav|x-wav|x-pn-wav\".split(\"|\")","pinCode":false,"dname":"c52ee2c0-140d-4561-a115-96a5c97e5846","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"audioTypeReg = new RegExp(`\\\\.(${audioTypes.join(\"|\")})$`);","pinCode":false,"dname":"acc2f938-5afc-4655-a026-dd71b609260f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"acceptedAudioTypes = _.reduce(\n  audioTypes,\n  (prev, curr) => {\n    prev.push(`audio/${curr}`);\n    prev.push(`application/${curr}`);\n    prev.push(`text/${curr}`);\n    return prev;\n  },\n  []\n)","pinCode":false,"dname":"c1b379fb-65e8-4107-86ca-9d3c1c7c0dce","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"DefaultFileType = \"text/plain\"","pinCode":false,"dname":"358ba579-fed6-4621-ac46-d5fcf77cee24","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function isFileImage(file) {\n  return file && acceptedImageTypes.includes(file['type'].toLowerCase())\n}","pinCode":false,"dname":"f9721c00-acf9-4b57-8780-9e8a353ec9e4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function isFileNoEdit(file) {\n  return (\n    isFileImage(file) ||\n    isFileGzip(file) ||\n    isFileZip(file) ||\n    isFileDb(file) ||\n    isFileVideo(file) ||\n    isFileExcel(file) ||\n    isFileArrow(file) ||\n    isFileAudio(file) ||\n    isFileGraphxr(file)\n  );\n}","pinCode":false,"dname":"3901b528-5588-466a-969d-0ff5b9ac6803","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function isFileGzip(file) {\n  return file && (file['type'].toLowerCase() === 'text/tgz' || file['type'].toLowerCase() === 'application/gzip');\n}","pinCode":false,"dname":"13d9e19e-9516-433d-b555-14d8cb4deac2","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function isFileZip(file) {\n  return file && (file['type'].toLowerCase() === 'text/zip' || file['type'].toLowerCase() === 'application/zip');\n}","pinCode":false,"dname":"ba2d8267-33c5-4a79-a85e-17779aae61dc","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function isFileGraphxr(file) {\n  return file && (file['type'].toLowerCase() === 'text/graphxr' ||\n    file['type'].toLowerCase() === 'graphxr');\n}","pinCode":false,"dname":"1560ca47-4aad-4fe9-9d9c-7cdc1624f015","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function isFileVideo(file) {\n  return file && (acceptedVideoTypes.includes(file['type'].toLowerCase()));\n}","pinCode":false,"dname":"54abcf9f-9b18-4ae4-99b8-a951df243e12","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function isFileAudio(file) {\n  return file && (acceptedAudioTypes.includes(file['type'].toLowerCase()));\n}","pinCode":false,"dname":"1e09ab09-8976-4bf6-8246-14814027a2a3","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function isFileExcel(file) {\n  return file && (file['type'].toLowerCase() === 'text/xlsx' || file['type'].toLowerCase() === 'text/xls' || file['type'].toLowerCase() === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\n}","pinCode":false,"dname":"ca83704e-9210-4a9a-9b3a-d01bfcf255ca","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function isFileArrow(file) {\n  return file && file['type'].toLowerCase() === 'text/arrow';\n}","pinCode":false,"dname":"f55cc774-2d62-4955-a74c-f88040538972","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function isFileJson(file) {\n  return file && file['type'].toLowerCase() === 'text/json';\n}","pinCode":false,"dname":"57ab27d7-0ae4-4512-aefb-601783eaba76","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function isFileDb(file) {\n  return file && (file['type'].toLowerCase() === 'text/db' || file['type'].toLowerCase() === 'text/sqlite');\n}\n","pinCode":false,"dname":"1d0bfd3d-fecf-4187-81ff-0620241b9ac5","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function isFilePlain(file) {\n  return file && file['type'].toLowerCase() === 'text/plain';\n}","pinCode":false,"dname":"73f39fd5-783e-4d5d-bd4d-9b0287d749a2","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function isFileJs(file) {\n  return file && file[\"type\"].toLowerCase() === \"text/js\";\n}","pinCode":false,"dname":"80751be8-0093-4a6d-8e35-b1452f310c14","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function isFileHtml(file) {\n  return file && file['type'].toLowerCase() === 'text/html';\n}","pinCode":false,"dname":"b2af03d4-6fef-425f-b5ae-8171ba6f7faf","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"explainFiles = {\n  const promiseList = _.reduce(\n    archive.files,\n    (p, file, zipFileKey) => {\n      if (file.dir) {\n        return p;\n      } else {\n        let type = getFileType(zipFileKey);\n        if (isFileNoEdit({ type })) {\n          p.push(\n            file.async(\"base64\").then(function (base64) {\n              return new File([base64], zipFileKey, {\n                type,\n                endings: \"transparent\",\n              });\n            })\n          );\n        } else {\n          p.push(\n            file.async(\"string\").then(function (string) {\n              return new File(\n                [string],\n                zipFileKey.endsWith(\".grove\")\n                  ? zipFileKey.substring(0, zipFileKey.length - \".grove\".length)\n                  : zipFileKey,\n                { type, endings: \"transparent\" }\n              );\n            })\n          );\n        }\n        return p;\n      }\n    },\n    []\n  );\n  return await Promise.all(promiseList);\n  await Promise.all(promiseList);\n}","pinCode":false,"dname":"fddd9056-f210-4441-a4dd-bfc1145c132c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"jszip = require(\"jszip@3/dist/jszip.min.js\")","pinCode":false,"dname":"9d66c42d-1f33-46a6-8d19-d90dfb359e86","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"b64toBlob = (b64Data, contentType='', sliceSize=512) => {\n  const byteCharacters = atob(b64Data);\n  const byteArrays = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n    const byteNumbers = new Array(slice.length);\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    const byteArray = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n    \n  const blob = new Blob(byteArrays, {type: contentType});\n  return blob;\n}","pinCode":false,"dname":"29283eda-891c-4ac5-b7c1-942507178a25","codeMode":"javascript2"}}}],"version":"2.19.1"}