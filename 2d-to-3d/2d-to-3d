{"blocks":[{"type":"antChart","data":{"chartConfigs":{"57eb676c-078a-4b03-9576-6b9e6252748f":{"chartKey":"57eb676c-078a-4b03-9576-6b9e6252748f","createTime":1698669553537,"renderType":"Markdown","active":true,"fetchPeriod":0,"text":"","selectedCategoryFrom":"","selectedCategory":"","selectedProperties":[],"selectedDb":"","chartData":[],"emptyFills":{},"castColumns":{},"joinColumns":{},"chartColumns":[],"type":"","options":{"title":{"text":"empty Markdown title","size":{"displayConfig":{"type":"Select"},"selector":["h1","h2","h3","h4","h5","h6"],"value":"h6"}},"description":{"text":"Enter markdown here..."},"backgroundColor":{"displayConfig":{"type":"Off","onValue":{"displayConfig":{"type":"Color"},"value":"#fafafa"}}}}}},"layouts":{"lg":[{"w":3,"h":4,"x":0,"y":0,"i":"57eb676c-078a-4b03-9576-6b9e6252748f","minW":2,"minH":3,"moved":false,"static":false,"isDraggable":true,"isResizable":true},{"w":3,"h":4,"x":3,"y":0,"i":"add","minW":2,"minH":3,"moved":false,"static":false,"isDraggable":false,"isResizable":false}],"md":[{"w":3,"h":4,"x":0,"y":0,"i":"57eb676c-078a-4b03-9576-6b9e6252748f","minW":2,"minH":3,"isResizable":true,"isDraggable":true}],"sm":[{"w":6,"h":4,"x":0,"y":0,"i":"57eb676c-078a-4b03-9576-6b9e6252748f","minW":2,"minH":3,"isResizable":true,"isDraggable":true}],"xs":[{"w":4,"h":4,"x":0,"y":0,"i":"57eb676c-078a-4b03-9576-6b9e6252748f","minW":2,"minH":3,"isResizable":true,"isDraggable":true}],"xxs":[{"w":2,"h":4,"x":0,"y":0,"i":"57eb676c-078a-4b03-9576-6b9e6252748f","minW":2,"minH":3,"isResizable":true,"isDraggable":true}]},"dname":"77a53fa6-e278-4492-967e-8539bf5a6f32"}},{"type":"codeTool","data":{"codeData":{"value":"md`# 2D to 3D\nExploring data visualization in another dimension!\n`","pinCode":false,"dname":"dca468c2-966f-469b-a782-2c414f289b2b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"{\n  const scene = new THREE.Scene()\n  //scene.fog = new THREE.FogExp2(0xffffff, 0.0012)\n  const canvasHeight = 600\n  \n  const renderer = new THREE.WebGLRenderer({ antialias: true })\n  renderer.setSize(width, canvasHeight)\n  renderer.setPixelRatio(devicePixelRatio)\n  renderer.setClearColor(0xffffff)\n\n  const camera = new THREE.PerspectiveCamera(60, width/canvasHeight, 0.1, height * 2)\n  camera.position.x = 228//50\n  camera.position.y = 240//50\n  camera.position.z = 150//30\n  camera.lookAt(new THREE.Vector3(width/2, 0, height/2))\n  \n  const controls = new THREE.OrbitControls(camera, renderer.domElement)\n  controls.enableDamping = true\n  // controls.maxDistance = 15\n  invalidation.then(() => (controls.dispose(), renderer.dispose()))\n  controls.addEventListener(\"change\", () => {\n    mutable debug = camera.position\n    renderer.render(scene, camera)\n  })\n\n  const light = new THREE.AmbientLight(0xcccccc)\n  scene.add(light)\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5)\n  directionalLight.position.set(1, 1, 1)\n  scene.add(directionalLight)\n\n  const group = new THREE.Group()\n  scene.add(group)\n  group.translateX(-width * .5)\n  group.translateZ(-height * .5)\n\n  const shape = new THREE.Shape()\n  for(let i = 0; i <= 6; i ++) {\n    const angle = Math.PI / 3 * i + Math.PI / 2\n    const x = Math.cos(angle) * 14\n    const y = Math.sin(angle) * 14\n\n    if(i===0) shape.moveTo(x, y)\n    else shape.lineTo(x, y)\n  }\n  \n  bins.forEach(bin => {\n    // Physically Based Rendering\n    const material = new THREE.MeshStandardMaterial({\n      color: ycolor(bin.length)\n    })\n\n    //const geometry = new THREE.BoxGeometry(10, 1, 10)\n    const geometry = new THREE.ExtrudeGeometry(shape, { depth: 1, bevelEnabled: false, metalness: 1 })\n    const mesh = new THREE.Mesh(geometry, material)\n    // we are mapping our data's Y dimension to Three's Z dimension\n    mesh.geometry.scale(1, 1, y(bin.length))\n    mesh.position.set(bin.x, y(bin.length), bin.y)\n    mesh.rotation.x = Math.PI/2\n    group.add(mesh)\n  })\n\n  \n  const shape2 = new THREE.Shape()\n  for(let i = 0; i <= 6; i ++) {\n    const angle = Math.PI / 3 * i + Math.PI / 2\n    const x = Math.cos(angle) * 7\n    const y = Math.sin(angle) * 7\n\n    if(i===0) shape2.moveTo(x, y)\n    else shape2.lineTo(x, y)\n  }\n  \n  bins2.forEach(bin => {\n    // Physically Based Rendering\n    const material = new THREE.MeshStandardMaterial({\n      color: ycolor(bin.length)\n    })\n\n    //const geometry = new THREE.BoxGeometry(10, 1, 10)\n    const geometry = new THREE.ExtrudeGeometry(shape2, { depth: 1, bevelEnabled: false })\n    const mesh = new THREE.Mesh(geometry, material)\n    // we are mapping our data's Y dimension to Three's Z dimension\n    mesh.geometry.scale(1, 1, y(bin.length))\n    mesh.position.set(bin.x, y(bin.length) + 1, bin.y-0.1)\n    mesh.rotation.x = Math.PI/2\n    group.add(mesh)\n  })\n  \n  while(true) {\n    controls.update()\n    mutable debug = camera.position\n    renderer.render(scene, camera)\n    \n    yield renderer.domElement\n  }    \n}","pinCode":false,"dname":"7da680a8-8ddd-46b3-bb6c-65918ccd06b4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"chart = {\n  let svg = d3.select(DOM.svg(width, height))\n\n  svg.selectAll(\"circle.big\")\n    .data(bins)\n    .enter()\n    .append(\"circle\").classed(\"big\", true)\n    .attr(\"cx\", d => d.x)\n    .attr(\"cy\", d => d.y)\n    .attr(\"r\", radius*.8)\n    .attr(\"fill\", d => color(d.length))\n    // .attr(\"stroke-width\", d => z(d.length))\n    // .attr(\"stroke\", \"#111\")\n    // .attr(\"stroke-opacity\", 0.2)\n\n    svg.selectAll(\"circle.small\")\n    .data(bins2)\n    .enter()\n    .append(\"circle\").classed(\"small\", true)\n    .attr(\"cx\", d => d.x)\n    .attr(\"cy\", d => d.y)\n    .attr(\"r\", radius2 * 0.6)\n    // .attr(\"fill\", d => color(d.length))\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"#111\")\n\n  return svg.node()\n}","pinCode":false,"dname":"615a4dc0-d48a-4202-b481-94dd1dc58f04","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import { data,bins,x,y as z,height } with { radius } from '2d-to-3d/72b6cebe5430bf1c'","pinCode":false,"dname":"9450254a-231f-4a3f-a12f-43d2e1f60d66","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"radius = (24)","pinCode":false,"dname":"0ba84ece-cdeb-4e7b-9bcf-2c60e4ee4c85","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"radius2 = (12)","pinCode":false,"dname":"4e5b78e5-6f1f-49da-9406-21299ddb5449","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import { bins as bins2 } with { radius2 as radius } from '2d-to-3d/72b6cebe5430bf1c'","pinCode":false,"dname":"09d2ac34-b234-4500-a592-ed3002fe719e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"ccc = bins","pinCode":false,"dname":"c8f7bcc2-748c-4b6c-88d8-72399db6874d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"bins2","pinCode":false,"dname":"8965d031-922e-4ba4-b152-ac5c59dccd76","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"bins[0]","pinCode":false,"dname":"5712fa65-9091-48b8-9e8c-21dc222cde7e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"bbb = data","pinCode":false,"dname":"a87b8b1b-259b-44e7-a98c-5a9ee4702d81","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"d3 = (require(\"d3@6\"))","pinCode":false,"dname":"f9ac61e6-af76-4549-9079-2ca585add3d1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"xextent = (d3.extent(bins, d => d.x))","pinCode":false,"dname":"a6042468-edcb-402a-b34a-4e24692c02b3","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"zextent = (d3.extent(bins, d => d.y))","pinCode":false,"dname":"6f1c2290-1e42-4b6a-a757-65445b9702c2","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"yextent = (d3.extent(bins, d => d.length))","pinCode":false,"dname":"9be6881d-8472-4748-8d9c-98e41fcb0d06","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"color = (d3.scaleSequential(d3.interpolateBuPu)\n    .domain([0, d3.max(bins, d => d.length) / 2]))","pinCode":false,"dname":"c146a137-da8a-49b3-a36d-08f0e308f92e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"ramp(d3.interpolateBuPu)","pinCode":false,"dname":"2d3d05f7-80e2-459f-acb5-a4e5cfea66ad","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import { ramp }  from '2d-to-3d/2c4ec3f145ea8103'","pinCode":false,"dname":"cd7ccd91-4277-4154-a543-01afd606011d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"THREE = {\n  const THREE = window.THREE = await require(\"three/build/three.min.js\");\n  await require(\"three/examples/js/controls/OrbitControls.js\").catch(() => {});\n  return THREE;\n}","pinCode":false,"dname":"2d33dd55-c134-4dae-b829-8428ee7cc9ab","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"mutable debug = {}","pinCode":false,"dname":"af9c8087-28e0-4de1-b22f-ce83c9a94529","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"y = (d3.scaleLinear()\n  .domain([0, d3.max(bins, d => d.length) / 2])\n  .range([0, 100]))","pinCode":false,"dname":"7848146d-ed20-4824-941a-d846569e6eef","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"ycolor = (d3.scaleSequential(d3.interpolateBuPu)\n    .domain([d3.max(bins, d => d.length) / 1, 0]))","pinCode":false,"dname":"7f8cb5ae-fc8f-4cb5-b5a4-c6e626a7290f","codeMode":"javascript2"}}}],"version":"2.19.1"}