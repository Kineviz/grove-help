{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# Disposal\n\n<p style=\"background: #fffced; box-sizing: border-box; padding: 10px 20px;\">***Update Feb. 2021:*** *The disposal function is now available as part of [**Observable Inputs**](/@observablehq/inputs)! This notebook will remain for history, but please upgrade.*</p>\n\nThis is a little helper to detect when an element is removed from the DOM. It functions similarly to [invalidation](https://github.com/observablehq/notebook-stdlib/blob/master/README.md#invalidation), except that you donâ€™t need to pass the invalidation promise around. The downside is that it only works if the resource you want to dispose is attached to a DOM element.`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"disposal = (Inputs.disposal)","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"md`This is a test; the count should be three.\n\n${Array.from({length: 3}, test)}`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"mutable count = (0)","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"test = (function test() {\n  const span = html`<span>`;\n  ++mutable count;\n  disposal(span).then(() => --mutable count);\n  return span;\n})","pinCode":false}}}],"version":"2.19.1"}