{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# Inputs\n<div style=\"margin-top: -3px; font-size: 1.05em;\">*a.k.a “The Grand Native Inputs Bazaar”*</div>\n\n<img width=\"350px\" src=\"${await FileAttachment(\"capstan.gif\").url()}\" />\n\nA collection of assorted fancy inputs, odds and ends — with which to produce values to feed your burgeoning sketches. All inputs support optional **titles** and **descriptions**; where it makes sense, inputs also support a **submit** option, which allows you to prevent the value from updating until the input has been finalized.\n\nWares we have on offer: \n  * [\\`slider\\`](#sliders)\n  * [\\`button\\`](#buttons)\n  * [\\`select\\`](#dropdown-menus-and-multiselects)\n  * [\\`autoSelect\\`](#autoselects)\n  * [\\`color\\`](#color-pickers)\n  * [\\`coordinates\\`](#coordinates)\n  * [\\`worldMapCoordinates\\`](#world-map-coordinates)\n  * [\\`usaMapCoordinates\\`](#u-s-a-map-coordinates)\n  * [\\`date\\`](#dates)\n  * [\\`time\\`](#times)\n  * [\\`file\\`](#file-upload)\n  * [\\`text\\`](#text-inputs)\n  * [\\`textarea\\`](#textareas)\n  * [\\`radio\\`](#radio-buttons)\n  * [\\`checkbox\\`](#checkboxs)\n  * [\\`number\\`](#numbers)\n  * [\\`password\\`](#passwords)`","pinCode":false,"dname":"98a5a143-ed09-4d38-af53-11dccb681b0a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`| <h3>Friends & Family:</h3>  |   |\n|---|---|\n| **[@mbostock/form-input](/@mbostock/form-input)**  | Fully custom forms, combining inputs into a single reactive cell. |\n| **[@mbostock/scrubber](/@mbostock/scrubber)** | A slider that automatically plays through its range, useful for driving and scrubbing through animations. |\n| **[@bumbeishvili/input-groups](/@bumbeishvili/input-groups)** | A wrapper function that can put many of these inputs into a more compact grid layout. | \n| **[@zechasault/color-schemes-and-interpolators-picker](/@zechasault/color-schemes-and-interpolators-picker)**  | Color scheme and interpolation pickers. |\n| **[@awhitty/fips-county-code-brush](/@awhitty/fips-county-code-brush)**  | A brushable map of the United States, allowing you to quickly select sets of counties to get their FIPS codes. |\n| **[@mootari/range-slider](https://observablehq.com/@mootari/range-slider)**  |  True range sliders, setting both a minimum and maximum value. |\n| **[@bumbeishvili/data-driven-range-sliders](/@bumbeishvili/data-driven-range-sliders)** | Data-driven range sliders, displaying a distribution histogram of the underlying data. |\n| **[@trebor/snapping-histogram-slider](/@trebor/snapping-histogram-slider)** | Another data-driven range slider option. |\n| **[@mootari’s 2D Slider](https://observablehq.com/d/98bbb19bf9e859ee)** | Two dimensional sliders, exploring discrete points on a plane. |\n| **[@yurivish/ternary-slider](/@yurivish/ternary-slider)** | Nifty ternary plot inputs, describing the percentages of a whole composed of exactly three things. |\n| **[@rreusser/binary-input](/@rreusser/binary-input)** | Input numbers in binary, great for working with values where results vary with specific bit positions. |\n| **[@bartok32/diy-inputs](/@bartok32/diy-inputs)** | A fun tool for defining your own fancy and colorful inputs. |\n| **[@bobkerns/elements-input](/@bobkerns/elements-input)** | A periodic table of the elements input! You can construct molecules programmatically, or click on the table to create formulas. |\n| **[@fil/selectflat](/@fil/selectflat)** | A fast selector to explore a discrete parameter space. The value changes on mouseover, and sticks when you click. |\n| **[@oscar6echo/player](/@oscar6echo/player)** | A slider with buttons to play, pause, step, and change speed and direction — useful for animations. |\n| **[@harrislapiroff/list-input](/@harrislapiroff/list-input)** | A input for when you want more than one of something. |\n| **[@nhogs/easing-graphs-editor](/@nhogs/easing-graphs-editor)** | A curve input to display and edit values of animated properties over time, such as easing curves and animation curves. |\n| **[@j-f1/checkbox](/@j-f1/checkbox)** | A simple checkbox input that provides a boolean value. |\n\n<br>*If you have any improvements for the bazaar, [please make your change in a fork and send it to me as a suggestion.](https://observablehq.com/@observablehq/suggestions-and-comments)*`","pinCode":false,"dname":"119ed8b9-a9a9-4d7c-949b-862255bd9454","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"sliderDemo = (md`---\n## Sliders\n\n~~~js\nimport {slider} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"f545831c-d27d-4423-bef4-8d16a5beea73","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof a = (slider())","pinCode":false,"dname":"37162375-9f92-4466-853d-8b2a46849a62","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof a1 = (slider({\n  min: 0, \n  max: 1, \n  step: 0.01, \n  format: \".0%\",\n  description: \"Zero to one, formatted as a percentage\"\n}))","pinCode":false,"dname":"7ab13de8-5409-42ae-94c2-0f15268ba045","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof a1_1 = (slider({\n  min: 0, \n  max: 1, \n  step: 0.01, \n  format: v => `${Math.round(100 * v)} per cent`,\n  description: \"Zero to one, formatted with a custom function\"\n}))","pinCode":false,"dname":"e147c0f7-f957-4575-8a8c-13035000e4c1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof a2 = (slider({\n  min: 0,\n  max: 1e9,\n  step: 1000,\n  value: 3250000,\n  format: \",\",\n  description:\n    \"Zero to one billion, in steps of one thousand, formatted as a (US) number\"\n}))","pinCode":false,"dname":"53292d46-6a59-4a4d-aa5b-0b3871370fa8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof a3 = (slider({\n  min: 0, \n  max: 100, \n  step: 1, \n  value: 10, \n  title: \"Integers\", \n  description: \"Integers from zero through 100\"\n}))","pinCode":false,"dname":"58a18dbf-31e6-46fe-a285-e163516d67ca","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof a4 = (slider({\n  min: 0.9,\n  max: 1.1,\n  precision: 3,\n  description: \"A high precision slider example\"\n}))","pinCode":false,"dname":"0cc5d885-f44d-4c72-8979-6f872ff3c162","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof a5 = (slider({\n  min: 0.9,\n  max: 1.1,\n  precision: 3,\n  submit: true,\n  description: \"The same as a4, but only changes value on submit\"\n}))","pinCode":false,"dname":"fe545b74-0257-48cf-8706-d436d278d389","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`More [fancy slider techniques](https://observablehq.com/@mootari/prime-numbers-slider).`","pinCode":false,"dname":"1cd4f635-8ac6-4bf4-83d3-c6fecb0e6bca","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"slider = (function slider(config = {}) {\n  let {\n    min = 0,\n    max = 1,\n    value = (max + min) / 2,\n    step = \"any\",\n    precision = 2,\n    title,\n    description,\n    disabled,\n    getValue,\n    format,\n    display,\n    submit\n  } = typeof config === \"number\" ? { value: config } : config;\n  precision = Math.pow(10, precision);\n  if (!getValue)\n    getValue = input => Math.round(input.valueAsNumber * precision) / precision;\n  return input({\n    type: \"range\",\n    title,\n    description,\n    submit,\n    format,\n    display,\n    attributes: { min, max, step, disabled, value },\n    getValue\n  });\n})","pinCode":false,"dname":"e59c804d-8ff7-4080-a9bc-ca1b71f9804d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"buttonDemo = (md`---\n## Buttons\n\n~~~js\nimport {button} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"66b30e21-f752-4089-84aa-6e6d745099fb","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof b = (button())","pinCode":false,"dname":"289b11be-1c6b-418b-9fde-2b70df1dc1b4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"{\n  b\n  return !this;\n}","pinCode":false,"dname":"abef8f35-f14b-44ef-aa4b-a69bd6198f89","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof b1 = (button({value: \"Click me\", description: \"We use a reference to the button below to record the time you pressed it.\"}))","pinCode":false,"dname":"a418254f-010c-4b36-8acc-edd09429dcc2","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"{\n  b1;\n  return new Date(Date.now()).toUTCString()\n}","pinCode":false,"dname":"e0a41d56-baa0-4697-882b-7165b08a021e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"button = (function button(config = {}) {\n  const {\n    value = \"Ok\", title, description, disabled\n  } = typeof config === \"string\" ? {value: config} : config;\n  const form = input({\n    type: \"button\", title, description,\n    attributes: {disabled, value}\n  });\n  form.output.remove();\n  return form;\n})","pinCode":false,"dname":"b4035e87-35e2-4dca-92c3-343661660e76","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"selectDemo = (md`---\n## Dropdown Menus and Multiselects\n\n~~~js\nimport {select} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"fd90ee92-5239-41fb-bb03-9bb72a8b1a61","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof dd = (select([\"Spring\", \"Summer\", \"Fall\", \"Winter\"]))","pinCode":false,"dname":"26c4cc1a-ae02-4933-80f7-ab27e1421e02","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"dd","pinCode":false,"dname":"cd72d0fb-2ea7-45e2-881d-d13b2605364e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof dd1 = (select({\n  title: \"Stooges\",\n  description: \"Please pick your favorite stooge.\",\n  options: [\"Curly\", \"Larry\", \"Moe\", \"Shemp\"],\n  value: \"Moe\"\n}))","pinCode":false,"dname":"1b69b7f2-1192-4d64-8b1f-5bce7383e8d6","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"dd1","pinCode":false,"dname":"4b7875cf-dce3-4cd2-9890-8a66cf542138","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof dd2 = (select({\n  description: \"As a child, which vegetables did you refuse to eat?\",\n  options: [\"Spinach\", \"Broccoli\", \"Brussels Sprouts\", \"Cauliflower\", \"Kale\", \"Turnips\", \"Green Beans\", \"Asparagus\"],\n  multiple: true\n}))","pinCode":false,"dname":"350bebc0-0503-4eed-b98c-638e15020743","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"dd2","pinCode":false,"dname":"453488d0-37b7-45be-b184-7de3392be30a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof dd3 = {\n  const dd3 = select({\n    title: \"How are you feeling today?\",\n    options: [\n      { label: \"🤷\", value: \"shrug\" },\n      { label: \"😂\", value: \"tears-of-joy\" },\n      { label: \"😍\", value: \"loving-it\" },\n      { label: \"🤔\", value: \"hmmm\" },\n      { label: \"😱\", value: \"yikes\", disabled: true },\n      { label: \"😈\", value: \"mischievous\" },\n      { label: \"💩\", value: \"poo\" }\n    ],\n    value: \"hmmm\"\n  });\n  dd3.input.style.fontSize = \"30px\";\n  dd3.input.style.marginTop = \"8px\";\n  return dd3;\n}","pinCode":false,"dname":"01fd5008-b17f-4b8b-a501-64dc5234c0c7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"dd3","pinCode":false,"dname":"b7ca3953-f928-4e44-8147-2c808f3320e7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"select = (function select(config = {}) {\n  let {\n    value: formValue,\n    title,\n    description,\n    disabled,\n    submit,\n    multiple,\n    size,\n    options\n  } = Array.isArray(config) ? { options: config } : config;\n  options = options.map(o =>\n    typeof o === \"object\" ? o : { value: o, label: o }\n  );\n  const form = input({\n    type: \"select\",\n    title,\n    description,\n    submit,\n    attributes: { disabled },\n    getValue: input => {\n      const selected = Array.prototype.filter\n        .call(input.options, i => i.selected)\n        .map(i => i.value);\n      return multiple ? selected : selected[0];\n    },\n    form: html`\n      <form>\n        <select name=\"input\" ${\n          multiple ? `multiple size=\"${size || options.length}\"` : \"\"\n        }>\n          ${options.map(({ value, label,disabled }) =>\n            Object.assign(html`<option>`, {\n              value,\n              selected: Array.isArray(formValue)\n                ? formValue.includes(value)\n                : formValue === value,\n              disabled : disabled ? disabled : false,\n              textContent: label\n            })\n          )}\n        </select>\n      </form>\n    `\n  });\n  form.output.remove();\n  return form;\n})","pinCode":false,"dname":"230356f4-beca-4b59-8b0b-ccd98625cb1f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"autoSelectDemo = (md`---\n## Autoselects\n*A variant of an option menu, using an autocompleting text input, via HTML’s datalist element.* \n\n~~~js\nimport {autoSelect} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"77483c1c-7559-4cd1-9d3a-1bc0768d4a1f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof as = (autoSelect({\n  options: usa.objects.states.geometries.map(d => d.properties.name),\n  placeholder: \"Search for a US state . . .\"\n}))","pinCode":false,"dname":"64e6bb52-9581-4084-a0de-3aaf26715704","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"as","pinCode":false,"dname":"6d9be9e2-53b0-454c-a03e-37ba5d0f4137","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"autoSelect = (function autoSelect(config = {}) {\n  const {\n    value,\n    title,\n    description,\n    disabled,\n    autocomplete = \"off\",\n    placeholder,\n    size,\n    options,\n    list = \"options\"\n  } = Array.isArray(config) ? { options: config } : config;\n\n  const optionsSet = new Set(options);\n\n  const form = input({\n    type: \"text\",\n    title,\n    description,\n    attributes: { disabled },\n    action: fm => {\n      fm.value = fm.input.value = value || \"\";\n      fm.onsubmit = e => e.preventDefault();\n      fm.input.oninput = function(e) {\n        e.stopPropagation();\n        fm.value = fm.input.value;\n        if (!fm.value || optionsSet.has(fm.value))\n          fm.dispatchEvent(new CustomEvent(\"input\"));\n      };\n    },\n    form: html`\n      <form>\n         <input name=\"input\" type=\"text\" autocomplete=\"off\" \n          placeholder=\"${placeholder ||\n            \"\"}\" style=\"font-size: 1em;\" list=${list}>\n          <datalist id=\"${list}\">\n              ${options.map(d =>\n                Object.assign(html`<option>`, {\n                  value: d\n                })\n              )}\n          </datalist>\n      </form>\n      `\n  });\n\n  form.output.remove();\n  return form;\n})","pinCode":false,"dname":"91df3107-8216-4b9e-93c1-6f51327aa7cb","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"colorDemo = (md`---\n## Color Pickers\n\n*value: a hexadecimal string, e.g. * \\`\"#bada55\"\\` \n\n~~~js\nimport {color} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"23f135ca-0519-4410-8d66-17cdb819668d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof c = (color())","pinCode":false,"dname":"0ce7e94e-535e-4bd2-807f-1ae408b58773","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof c1 = (color({\n  value: \"#0000ff\",\n  title: \"Background Color\",\n  description: \"This color picker starts out blue\"\n}))","pinCode":false,"dname":"116b6737-5f5c-432b-bb52-8f10db72b6c4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"color = (function color(config = {}) {\n  const { value = \"#000000\", title, description, disabled, submit, display } =\n    typeof config === \"string\" ? { value: config } : config;\n  const form = input({\n    type: \"color\",\n    title,\n    description,\n    submit,\n    display,\n    attributes: { disabled, value }\n  });\n  // The following two lines are a bugfix for Safari, which hopefully can be removed in the future.\n  form.input.value = '';\n  form.input.value = value;\n  if (title || description) form.input.style.margin = \"5px 0\";\n  return form;\n})","pinCode":false,"dname":"cbe178ba-be4f-49c9-9d60-2b615931d645","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"coordinatesDemo = (md` ---\n## Coordinates\n\n*value: an array pair of \\`[longitude, latitude]\\`, e.g. * \\`[-122.27, 37.87]\\` \n\n~~~js\nimport {coordinates} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"5f20dd37-c25b-4879-8634-f7b15e1f4600","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof coords1 = (coordinates())","pinCode":false,"dname":"16d871a5-2143-48a7-81de-70b8030fd617","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"coords1","pinCode":false,"dname":"58ce1175-97a2-4d8f-accc-f36fcc76ba02","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof coords2 = (coordinates({\n  title: \"Hometown\",\n  description: \"Enter the coordinates of where you were born\",\n  value: [-122.27, 37.87],\n  submit: true\n}))","pinCode":false,"dname":"a5e32286-7463-4b7d-ae24-2129bc72559d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"coords2","pinCode":false,"dname":"086f26b1-7a25-474c-99f5-c8a2688b0de0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"coordinates = (function coordinates(config = {}) {\n  const { value = [], title, description, submit } = Array.isArray(config)\n    ? { value: config }\n    : config;\n  let [lon, lat] = value;\n  lon = lon != null ? lon : \"\";\n  lat = lat != null ? lat : \"\";\n  const lonEl = html`<input name=\"input\" type=\"number\" autocomplete=\"off\" min=\"-180\" max=\"180\" style=\"width: 80px;\" step=\"any\" value=\"${lon}\" />`;\n  const latEl = html`<input name=\"input\" type=\"number\" autocomplete=\"off\" min=\"-90\" max=\"90\" style=\"width: 80px;\" step=\"any\" value=\"${lat}\" />`;\n  const form = input({\n    type: \"coordinates\",\n    title,\n    description,\n    submit,\n    getValue: () => {\n      const lon = lonEl.valueAsNumber;\n      const lat = latEl.valueAsNumber;\n      return [isNaN(lon) ? null : lon, isNaN(lat) ? null : lat];\n    },\n    form: html`\n      <form>\n        <label style=\"display: inline-block; font: 600 0.8rem sans-serif; margin: 6px 0 3px;\">\n          <span style=\"display: inline-block; width: 70px;\">Longitude:</span>\n          ${lonEl}\n        </label>\n        <br>\n        <label style=\"display: inline-block; font: 600 0.8rem sans-serif; margin: 0 0 6px;\">\n          <span style=\"display: inline-block; width: 70px;\">Latitude:</span>\n          ${latEl}\n        </label>\n      </form>\n    `\n  });\n  form.output.remove();\n  return form;\n})","pinCode":false,"dname":"05b1762e-f31b-4c83-9eb5-ddd42ca421cb","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"worldMapCoordinatesDemo = (md` ---\n## World Map Coordinates\n\n*value: an array pair of \\`[longitude, latitude]\\`, e.g. * \\`[-122.27, 37.87]\\` \n\n~~~js\nimport {worldMapCoordinates} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"ffa13ce1-b8e6-4fdd-85f8-4da3b9955c67","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof worldMap1 = (worldMapCoordinates([-122.27, 37.87]))","pinCode":false,"dname":"93338a4b-072b-4b48-a358-0645c76c6ab5","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"worldMap1","pinCode":false,"dname":"0577a0f6-ebca-485b-b2cb-e1090930312a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"worldMapCoordinates = (function worldMapCoordinates(config = {}) {\n  const {\n    value = [], title, description, width = 400\n  } = Array.isArray(config) ? {value: config} : config;\n  const height = Math.round((210 / 400) * width);\n  let [lon, lat] = value;\n  lon = lon != null ? lon : null;\n  lat = lat != null ? lat : null;\n  const formEl = html`<form style=\"width: ${width}px;\"></form>`;\n  const context = DOM.context2d(width, height);\n  const canvas = context.canvas;\n  canvas.style.margin = \"10px 0 3px\";\n  const projection = d3geo\n    .geoNaturalEarth1()\n    .precision(0.1)\n    .fitSize([width, height], { type: \"Sphere\" });\n  const path = d3geo.geoPath(projection, context).pointRadius(2.5);\n  formEl.append(canvas);\n\n  function draw() {\n    context.fillStyle = \"#fff\";\n    context.fillRect(0, 0, width, height);\n    context.beginPath();\n    path(graticule);\n    context.lineWidth = 0.35;\n    context.strokeStyle = `#ddd`;\n    context.stroke();\n    context.beginPath();\n    path(land);\n    context.fillStyle = `#f4f4f4`;\n    context.fill();\n    context.beginPath();\n    path(countries);\n    context.strokeStyle = `#aaa`;\n    context.stroke();\n    if (lon != null && lat != null) {\n      const pointPath = { type: \"MultiPoint\", coordinates: [[lon, lat]] };\n      context.beginPath();\n      path(pointPath);\n      context.fillStyle = `#f00`;\n      context.fill();\n    }\n  }\n\n  canvas.onclick = function(ev) {\n    const { offsetX, offsetY } = ev;\n    var coords = projection.invert([offsetX, offsetY]);\n    lon = +coords[0].toFixed(2);\n    lat = +coords[1].toFixed(2);\n    draw();\n    canvas.dispatchEvent(new CustomEvent(\"input\", { bubbles: true }));\n  };\n\n  draw();\n\n  const form = input({\n    type: \"worldMapCoordinates\",\n    title,\n    description,\n    display: v =>\n      html`<div style=\"width: ${width}px; white-space: nowrap; color: #444; text-align: center; font: 13px sans-serif; margin-bottom: 5px;\">\n            <span style=\"color: #777;\">Longitude:</span> ${lon != null ? lon.toFixed(2) : \"\"}\n            &nbsp; &nbsp; \n            <span style=\"color: #777;\">Latitude:</span> ${lat != null ? lat.toFixed(2) : \"\"} \n          </div>`,\n    getValue: () => [lon != null ? lon : null, lat != null ? lat : null],\n    form: formEl\n  });\n  return form;\n})","pinCode":false,"dname":"b6974511-26e9-4101-8b04-60800feb476a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"usaMapCoordinatesDemo = (md` ---\n## U.S.A. Map Coordinates\n\n*value: an array pair of \\`[longitude, latitude]\\`, e.g. * \\`[-122.27, 37.87]\\` \n\n~~~js\nimport {usaMapCoordinates} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"815263c3-52b9-4046-947a-888cecd207a0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof usaMap1 = (usaMapCoordinates([-122.27, 37.87]))","pinCode":false,"dname":"b9e7c820-41fe-4858-b318-e58858ef419f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"usaMap1","pinCode":false,"dname":"f21605ca-5a9e-44e2-97b1-dc1d6f91469d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof usaMap2 = (usaMapCoordinates({\n  title: \"A Mini Map\",\n  description: \"Defaults to New York City\",\n  width: 200,\n  value: [-74, 40.71]\n}))","pinCode":false,"dname":"72963c71-692b-40d8-9b37-a06537d777ff","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"usaMap2","pinCode":false,"dname":"cc7d23c9-79c0-40c3-bf08-7f99c7bbf9f4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"usaMapCoordinates = (function usaMapCoordinates(config = {}) {\n  const {\n    value = [], title, description, width = 400\n  } = Array.isArray(config) ? {value: config} : config;\n  const scale = width / 960;\n  const height = scale * 600;\n  let [lon, lat] = value;\n  lon = lon != null ? lon : null;\n  lat = lat != null ? lat : null;\n  const formEl = html`<form style=\"width: ${width}px;\"></form>`;\n  const context = DOM.context2d(width, height);\n  const canvas = context.canvas;\n  canvas.style.margin = \"5px 0 20px\";\n  const projection = d3geo\n    .geoAlbersUsa()\n    .scale(1280)\n    .translate([480, 300]);\n  const path = d3geo\n    .geoPath()\n    .context(context)\n    .pointRadius(2.5 / scale);\n  formEl.append(canvas);\n\n  function draw() {\n    context.clearRect(0, 0, width, height);\n    context.save();\n    context.scale(scale, scale);\n    context.lineWidth = 0.35 / scale;\n    context.beginPath();\n    path(nation);\n    context.fillStyle = `#f4f4f4`;\n    context.fill();\n    context.beginPath();\n    path(states);\n    context.strokeStyle = `#aaa`;\n    context.stroke();\n    if (lon != null && lat != null) {\n      const pointPath = {\n        type: \"MultiPoint\",\n        coordinates: [projection([lon, lat])]\n      };\n      context.beginPath();\n      path(pointPath);\n      context.fillStyle = `#f00`;\n      context.fill();\n    }\n    context.restore();\n  }\n\n  canvas.onclick = function(ev) {\n    const { offsetX, offsetY } = ev;\n    var coords = projection.invert([offsetX / scale, offsetY / scale]);\n    lon = +coords[0].toFixed(2);\n    lat = +coords[1].toFixed(2);\n    draw();\n    canvas.dispatchEvent(new CustomEvent(\"input\", { bubbles: true }));\n  };\n\n  draw();\n\n  const form = input({\n    type: \"worldMapCoordinates\",\n    title,\n    description,\n    display: v =>\n      html`<div style=\"position: absolute; width: ${width}px; white-space: nowrap; color: #444; text-align: center; font: 13px sans-serif; margin-top: -18px;\">\n            <span style=\"color: #777;\">Longitude:</span> ${lon != null ? lon : \"\"}\n            &nbsp; &nbsp; \n            <span style=\"color: #777;\">Latitude:</span> ${lat != null ? lat : \"\"} \n          </div>`,\n    getValue: () => [lon != null ? lon : null, lat != null ? lat : null],\n    form: formEl\n  });\n  return form;\n})","pinCode":false,"dname":"d9f97b64-020a-47aa-a436-97255fcfc5ba","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"dateDemo = (md` ---\n## Dates\n\n*value: a YYYY-MM-DD formatted string: * \\`\"2016-11-08\"\\` \n\n~~~js\nimport {date} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"397a6b8b-60a5-4544-800f-4bab998656ee","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof d = (date())","pinCode":false,"dname":"dbc814aa-a961-4e3d-838e-809141ccf389","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof d1 = (date({\n  title: \"2017\", \n  min: \"2017-01-01\",\n  max: \"2017-12-31\",\n  value: \"2017-01-01\",\n  description: \"Only dates within the 2017 calendar year are allowed\"\n}))","pinCode":false,"dname":"b4bb4a12-fc5d-4595-b1a0-97d282fe2be1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"date = (function date(config = {}) {\n  const { min, max, value, title, description, disabled, display } =\n    typeof config === \"string\" ? { value: config } : config;\n  return input({\n    type: \"date\",\n    title,\n    description,\n    display,\n    attributes: { min, max, disabled, value }\n  });\n})","pinCode":false,"dname":"5059efb6-18e7-4180-8a96-27274bf24ab4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"timeDemo = (md` ---\n## Times\n\n*value: a HH:MM:SS formatted string: * \\`\"09:30:45\"\\`\n<br>*(Time values are always in 24-hour format)*\n\n~~~js\nimport {time} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"8488c454-10d9-4192-aa22-25d3533fa79a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof t = (time())","pinCode":false,"dname":"70a08062-e16d-45a1-863b-5b97e0d14f72","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"t","pinCode":false,"dname":"df76293d-fcd0-49f9-8af4-cb931543308a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof t1 = (time({\n  title: \"Afternoon\",\n  min: \"12:00:00\",\n  max: \"23:59:59\",\n  value: \"13:00:00\",\n  step: 1,\n  description: \"Only times after noon are allowed, and seconds are included\"\n}))","pinCode":false,"dname":"ba509277-6a3d-42a9-bce1-5152f2b0276e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"t1","pinCode":false,"dname":"bbaaecab-bffe-4fce-94fb-37a437fe1bc1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"time = (function time(config = {}) {\n  const { min, max, step, value, title, description, disabled, display } =\n    typeof config === \"string\" ? { value: config } : config;\n  const el = input({\n    type: \"time\",\n    title,\n    description,\n    display,\n    getValue: d => (d.value ? d.value : undefined),\n    attributes: { min, max, step, disabled, value }\n  });\n  el.output.remove();\n  return el;\n})","pinCode":false,"dname":"c660f92b-4a3d-450b-97d4-828bbf043523","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"fileDemo = (md`---\n## File Upload\n*Use the JavaScript [File API](https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications) to work with uploaded file contents.*\n\n\\`import {file} from \"@jashkenas/inputs\"\\``)","pinCode":false,"dname":"6f5c5265-d68d-4f6a-b23a-87176fee5cc8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof e = (file())","pinCode":false,"dname":"2c2cf6a2-0cfa-48d3-a04f-6e574609e887","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof e1 = (file({\n  title: \"Photographs\",\n  description: \"Only .jpg files are allowed in this example. Choose some images, and they’ll appear in the cell below.\",\n  accept: \".jpg\",\n  multiple: true,\n}))","pinCode":false,"dname":"70d0478c-8971-4025-88c4-ed4b53473d66","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"{\n  const div = html`<div>`;\n  for (var j = 0; j < e1.length; j++) {\n    let file = e1[j];\n    let img = html`<img height=\"125px\" style=\"margin: 2px;\" />`;\n    img.src = await Files.url(e1[j]);\n    div.append(img);\n  }\n  return div;\n}","pinCode":false,"dname":"b988b10a-da18-4f5e-88f7-71dc1d440791","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"file = (function file(config = {}) {\n  const { multiple, accept, title, description, disabled } = config;\n  const form = input({\n    type: \"file\",\n    title,\n    description,\n    attributes: { multiple, accept, disabled },\n    action: form => {\n      form.input.onchange = () => {\n        form.value = multiple ? form.input.files : form.input.files[0];\n        form.dispatchEvent(new CustomEvent(\"input\"));\n      };\n    }\n  });\n  form.output.remove();\n  form.input.onchange();\n  return form;\n})","pinCode":false,"dname":"fac2f089-eee6-4879-aee4-5b1846cd052d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"textDemo = (md`---\n## Text Inputs\n\n~~~js\nimport {text} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"cb9c370a-d4ac-48a7-8e2a-6bddb01ae0bd","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof f = (text())","pinCode":false,"dname":"b0d0f9db-6f96-4c04-a483-e7369f2d8bae","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof f1 = (text({title: \"A Text Input\", placeholder: \"Placeholder text\", description: \"Note that text inputs don’t show output on the right\"}))","pinCode":false,"dname":"c21ccec2-b0ba-4a62-82f1-b031928f741c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"f1","pinCode":false,"dname":"9b8e5a3a-e1af-4042-8548-d99784932f18","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof f2 = (text({placeholder: \"Placeholder text\", description: \"This input only changes value on submit\", submit: \"Go\"}))","pinCode":false,"dname":"31cd73f3-1feb-491c-a530-f63d3fda3dfb","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"f2","pinCode":false,"dname":"dfa9f024-a5ff-4c01-b7a8-aafb4ed89749","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"text = (function text(config = {}) {\n  const {\n    value,\n    title,\n    description,\n    disabled,\n    autocomplete = \"off\",\n    maxlength,\n    minlength,\n    pattern,\n    placeholder,\n    size,\n    submit,\n    getValue\n  } = typeof config === \"string\" ? { value: config } : config;\n  const form = input({\n    type: \"text\",\n    title,\n    description,\n    submit,\n    getValue,\n    attributes: {\n      value,\n      autocomplete,\n      maxlength,\n      minlength,\n      pattern,\n      placeholder,\n      size,\n      disabled\n    }\n  });\n  form.output.remove();\n  form.input.style.fontSize = \"1em\";\n  return form;\n})","pinCode":false,"dname":"bf69aa8c-3dfd-4fca-9c9b-951a1d95c73d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"textareaDemo = (md`---\n## Textareas\n\n~~~js\nimport {textarea} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"cee89e88-e6cf-4f1f-b65d-a5c13ad266e9","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof g = (textarea())","pinCode":false,"dname":"fe2f6921-ce35-4859-b06e-ff69286bc194","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"g","pinCode":false,"dname":"2a989353-a555-4523-91e6-bcdf66f7fd92","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof g1 = (textarea({\n  title: \"Your Great American Novel\", \n  placeholder: \"Insert story here...\", \n  spellcheck: true,\n  width: \"100%\",\n  rows: 10,\n  submit: \"Publish\"\n}))","pinCode":false,"dname":"29983d94-5973-4f5e-b39b-03970f046d7b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"g1","pinCode":false,"dname":"f0bcd03f-4168-433d-9410-bc29e878b2b3","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"textarea = (function textarea(config = {}) {\n  const {\n    value = \"\",\n    title,\n    description,\n    autocomplete,\n    cols = 45,\n    rows = 3,\n    width,\n    height,\n    maxlength,\n    placeholder,\n    spellcheck,\n    wrap,\n    submit,\n    disabled,\n    getValue\n  } = typeof config === \"string\" ? { value: config } : config;\n  const form = input({\n    form: html`<form><textarea style=\"display: block; font-size: 0.8em;\" name=input>${value}</textarea></form>`,\n    title,\n    description,\n    submit,\n    getValue,\n    attributes: {\n      autocomplete,\n      cols,\n      rows,\n      maxlength,\n      placeholder,\n      spellcheck,\n      wrap,\n      disabled\n    }\n  });\n  form.output.remove();\n  if (width != null) form.input.style.width = width;\n  if (height != null) form.input.style.height = height;\n  if (submit) form.submit.style.margin = \"0\";\n  if (title || description) form.input.style.margin = \"3px 0\";\n  return form;\n})","pinCode":false,"dname":"a3f634b2-2625-4e73-8829-6ae100e384ba","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"radioDemo = (md`---\n## Radio Buttons\n\n~~~js\nimport {radio} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"d54305c2-e5b1-4e76-8d6e-3a1745be3856","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof r = (radio([\"Lust\", \"Gluttony\", \"Greed\", \"Sloth\", \"Wrath\", \"Envy\", \"Pride\"]))","pinCode":false,"dname":"cb81db59-4daf-4e5a-ad11-813302f6db85","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"r","pinCode":false,"dname":"896b7805-d95b-4253-8d1d-23d3f3d799c6","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof r1 = (radio({\n  title: 'Contact Us',\n  description: 'Please select your preferred contact method',\n  options: [\n    { label: 'By Email', value: 'email' },\n    { label: 'By Phone', value: 'phone' },\n    { label: 'By Pager', value: 'pager' },\n  ],\n  value: 'pager'\n}))","pinCode":false,"dname":"55564ad3-136e-4ded-929b-17c0fa7715ce","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"r1","pinCode":false,"dname":"a0de253a-6c5b-4e0f-9bce-02a4150165c0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"radio = (function radio(config = {}) {\n  let {\n    value: formValue,\n    title,\n    description,\n    submit,\n    options,\n    disabled\n  } = Array.isArray(config) ? { options: config } : config;\n  options = options.map(o =>\n    typeof o === \"string\" ? { value: o, label: o } : o\n  );\n  const form = input({\n    type: \"radio\",\n    title,\n    description,\n    submit,\n    getValue: input => {\n      if (input.checked) return input.value;\n      const checked = Array.prototype.find.call(input, radio => radio.checked);\n      return checked ? checked.value : undefined;\n    },\n    form: html`\n      <form>\n        ${options.map(({ value, label }, i) => {\n          const input = html`<input type=radio name=input ${\n            value === formValue ? \"checked\" : \"\"\n          } style=\"vertical-align: top; ${\n            i === 0 ? `margin-left: 1px;` : ``\n          }\" />`;\n          input.setAttribute(\"value\", value);\n          if (disabled) input.setAttribute(\"value\", disabled);\n          const tag = html`\n          <label style=\"display: inline-block; margin: 5px 10px 3px 0; font-size: 0.85em;\">\n           ${input}\n           ${label}\n          </label>`;\n          return tag;\n        })}\n      </form>\n    `\n  });\n  form.output.remove();\n  return form;\n})","pinCode":false,"dname":"6b7dee9a-76db-4df4-b5b9-d76d3fa17a6a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"checkboxDemo = (md`---\n## Checkboxes\n\n~~~js\nimport {checkbox} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"9b7a224d-844f-4165-a75f-79a2c75cf737","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof ch = (checkbox([\"Lust\", \"Gluttony\", \"Greed\", \"Sloth\", \"Wrath\", \"Envy\", \"Pride\"]))","pinCode":false,"dname":"b349a244-3929-41bb-95be-4e32e0555a28","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"ch","pinCode":false,"dname":"cfb93312-b445-426e-9688-9fce998ccd18","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof ch1 = (checkbox({\n  title: \"Colors\",\n  description: \"Please select your favorite colors\",\n  options: [\n    { value: \"r\", label: \"Red\" },\n    { value: \"o\", label: \"Orange\" },\n    { value: \"y\", label: \"Yellow\" },\n    { value: \"g\", label: \"Green\" },\n    { value: \"b\", label: \"Blue\" },\n    { value: \"i\", label: \"Indigo\" },\n    { value: \"v\", label: \"Violet\" }\n  ],\n  value: [\"r\", \"g\", \"b\"],\n  submit: true\n}))","pinCode":false,"dname":"d315cdb1-98a3-4701-9ce4-810d758a0e7b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"ch1","pinCode":false,"dname":"c53538d1-2b43-458c-9c11-cc4e02f055c7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof ch3 = (checkbox({\n  description: \"Just a single checkbox to toggle\",\n  options: [{ value: \"toggle\", label: \"On\" }],\n  value: \"toggle\"\n}))","pinCode":false,"dname":"98d7267b-b391-4d82-854a-69f694c40d7e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"ch3","pinCode":false,"dname":"febba194-7e31-47a6-9ecb-f6626b0e82aa","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"checkbox = (function checkbox(config = {}) {\n  let {\n    value: formValue,\n    title,\n    description,\n    submit,\n    disabled,\n    options\n  } = Array.isArray(config) ? { options: config } : config;\n  options = options.map(o =>\n    typeof o === \"string\" ? { value: o, label: o } : o\n  );\n  const form = input({\n    type: \"checkbox\",\n    title,\n    description,\n    submit,\n    getValue: input => {\n      if (input.length)\n        return Array.prototype.filter\n          .call(input, i => i.checked)\n          .map(i => i.value);\n      return input.checked ? input.value : false;\n    },\n    form: html`\n      <form>\n        ${options.map(({ value, label }, i) => {\n          const input = html`<input type=checkbox name=input ${\n            (formValue || []).indexOf(value) > -1 ? \"checked\" : \"\"\n          } style=\"vertical-align: top; ${\n            i === 0 ? `margin-left: 1px;` : ``\n          }\" />`;\n          input.setAttribute(\"value\", value);\n          if (disabled) input.setAttribute(\"disabled\", disabled);\n          const tag = html`<label style=\"display: inline-block; margin: 5px 10px 3px 0; font-size: 0.85em;\">\n           ${input}\n           ${label}\n          </label>`;\n          return tag;\n        })}\n      </form>\n    `\n  });\n  form.output.remove();\n  return form;\n})","pinCode":false,"dname":"42dec6ec-c095-4fc3-9c2e-fafbf42a616c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"numberDemo = (md`---\n## Numbers\n\n~~~js\nimport {number} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"0768acc8-51a8-43cd-aad1-c4b5e6d58dcb","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof h = (number())","pinCode":false,"dname":"fbd830f7-1223-4b7b-8c76-41c985faa749","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"h","pinCode":false,"dname":"5a99d543-a2f8-4df0-afdb-4ae7569e0c4d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof h1 = (number({placeholder: \"13+\", title: \"Your Age\", submit: true}))","pinCode":false,"dname":"dcb5aedf-18c7-4ecf-aeb4-9bc0d6ab70a9","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"h1","pinCode":false,"dname":"7f100d00-2178-4e70-8fd1-1147c65ede5c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"number = (function number(config = {}) {\n  const {\n    value,\n    title,\n    description,\n    disabled,\n    placeholder,\n    submit,\n    step = \"any\",\n    min,\n    max\n  } =\n    typeof config === \"number\" || typeof config === \"string\"\n      ? { value: +config }\n      : config;\n  const form = input({\n    type: \"number\",\n    title,\n    description,\n    submit,\n    attributes: {\n      value,\n      placeholder,\n      step,\n      min,\n      max,\n      autocomplete: \"off\",\n      disabled\n    },\n    getValue: input => input.valueAsNumber\n  });\n  form.output.remove();\n  form.input.style.width = \"auto\";\n  form.input.style.fontSize = \"1em\";\n  return form;\n})","pinCode":false,"dname":"5215aff7-f869-4352-b3b0-b7fe3ba2dd09","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"passwordDemo = (md`---\n## Passwords\n\n~~~js\nimport {password} from \"@jashkenas/inputs\"\n~~~`)","pinCode":false,"dname":"11bb5521-84ad-4c53-80f3-c28cbbde8294","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof i = (password({value: \"password\"}))","pinCode":false,"dname":"51883c77-72a9-4d5f-91cb-700de81a9bdf","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"i","pinCode":false,"dname":"14595023-3f15-44a3-a645-829be383003e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof i1 = (password({\n  title: \"Your super secret password\", \n  description: \"Less than 12 characters, please.\",\n  minlength: 6,\n  maxlength: 12\n}))","pinCode":false,"dname":"5b68e6b1-7ccc-4181-8e74-d76739a5a584","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"i1","pinCode":false,"dname":"c51e2dfa-2b1a-485a-b318-61b8270284b4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"password = (function password(config = {}) {\n  const {\n    value,\n    title,\n    description,\n    disabled,\n    autocomplete = \"off\",\n    maxlength,\n    minlength,\n    pattern,\n    placeholder,\n    size,\n    submit\n  } = typeof config === \"string\" ? { value: config } : config;\n  const form = input({\n    type: \"password\",\n    title,\n    description,\n    submit,\n    attributes: {\n      value,\n      autocomplete,\n      maxlength,\n      minlength,\n      pattern,\n      placeholder,\n      size,\n      disabled\n    }\n  });\n  form.output.remove();\n  form.input.style.fontSize = \"1em\";\n  return form;\n})","pinCode":false,"dname":"6fa50235-b574-44f8-b997-22294f6ed452","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`---\n## Wishlist (Send suggestions, please!)\n\n* 3D coordinate input (for say, positioning a camera in a WebGL sketch)\n* Geocoder search with location autocomplete that returns longitude and latitude.\n* Degrees or radians input, for circular things, or angles.\n* A dimensions input, or a box-model input, with margin (and optionally, padding).\n* A map-projection-picker input, rendering little thumbnails of all the d3-geo-projections.\n* Drag and drop file upload input.\n* Alternative coordinate inputs, e.g. Right Ascension, Declination.\n* Other useful formatting options.\n\n---`","pinCode":false,"dname":"f73eac55-c95e-49d3-b648-8e54b4cd4965","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"input = (function input(config) {\n  let {\n    form,\n    type = \"text\",\n    attributes = {},\n    action,\n    getValue,\n    title,\n    description,\n    format,\n    display,\n    submit,\n    options\n  } = config;\n  const wrapper = html`<div></div>`;\n  if (!form)\n    form = html`<form>\n\t<input name=input type=${type} />\n  </form>`;\n  Object.keys(attributes).forEach(key => {\n    const val = attributes[key];\n    if (val != null) form.input.setAttribute(key, val);\n  });\n  if (submit)\n    form.append(\n      html`<input name=submit type=submit style=\"margin: 0 0.75em\" value=\"${\n        typeof submit == \"string\" ? submit : \"Submit\"\n      }\" />`\n    );\n  form.append(\n    html`<output name=output style=\"font: 14px Menlo, Consolas, monospace; margin-left: 0.5em;\"></output>`\n  );\n  if (title)\n    form.prepend(\n      html`<div style=\"font: 700 0.9rem sans-serif; margin-bottom: 3px;\">${title}</div>`\n    );\n  if (description)\n    form.append(\n      html`<div style=\"font-size: 0.85rem; font-style: italic; margin-top: 3px;\">${description}</div>`\n    );\n  if (format)\n    format = typeof format === \"function\" ? format : d3format.format(format);\n  if (action) {\n    action(form);\n  } else {\n    const verb = submit\n      ? \"onsubmit\"\n      : type == \"button\"\n      ? \"onclick\"\n      : type == \"checkbox\" || type == \"radio\"\n      ? \"onchange\"\n      : \"oninput\";\n    form[verb] = e => {\n      e && e.preventDefault();\n      const value = getValue ? getValue(form.input) : form.input.value;\n      if (form.output) {\n        const out = display ? display(value) : format ? format(value) : value;\n        if (out instanceof window.Element) {\n          while (form.output.hasChildNodes()) {\n            form.output.removeChild(form.output.lastChild);\n          }\n          form.output.append(out);\n        } else {\n          form.output.value = out;\n        }\n      }\n      form.value = value;\n      if (verb !== \"oninput\")\n        form.dispatchEvent(new CustomEvent(\"input\", { bubbles: true }));\n    };\n    if (verb !== \"oninput\")\n      wrapper.oninput = e => e && e.stopPropagation() && e.preventDefault();\n    if (verb !== \"onsubmit\") form.onsubmit = e => e && e.preventDefault();\n    form[verb]();\n  }\n  while (form.childNodes.length) {\n    wrapper.appendChild(form.childNodes[0]);\n  }\n  form.append(wrapper);\n  return form;\n})","pinCode":false,"dname":"ca792367-2a9f-4450-b6b2-f3b711084cb5","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"d3geo = (require(\"d3-geo@1\"))","pinCode":false,"dname":"9c0308d1-b279-42b6-baa5-811e3269ab86","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"d3format = (require(\"d3-format@1\"))","pinCode":false,"dname":"cb505fb5-bc13-4dd5-a4e0-179c6cd29938","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"topojson = (require(\"topojson-client@3\"))","pinCode":false,"dname":"01ed07b6-400d-47a0-bd01-2c667e3362f4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"world = ((await fetch(\"https://cdn.jsdelivr.net/npm/world-atlas@1/world/110m.json\")).json())","pinCode":false,"dname":"f187f463-1d67-429c-9573-19494e57aa14","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"land = (topojson.feature(world, world.objects.land))","pinCode":false,"dname":"52ea77d0-b2b4-422f-b657-466946b8bc2b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"countries = (topojson.feature(world, world.objects.countries))","pinCode":false,"dname":"59e46589-9c14-47aa-9577-f0385f85544e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"usa = ((await fetch(\"https://cdn.jsdelivr.net/npm/us-atlas@^2.1/us/states-10m.json\")).json())","pinCode":false,"dname":"eaac24e0-254d-42a2-aa9e-6201f5fc2542","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"nation = (topojson.feature(usa, usa.objects.nation))","pinCode":false,"dname":"e3b8836a-813f-439c-b387-2d9bca13aa1a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"states = (topojson.feature(usa, usa.objects.states))","pinCode":false,"dname":"f5bdcb16-d823-4610-9e7f-be8b8ec997c8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"graticule = (d3geo.geoGraticule10())","pinCode":false,"dname":"8bd5fe39-10f1-43b8-a6d3-2f5352d5e9f6","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof license = {\n  const license = md`License: [MIT](https://opensource.org/licenses/MIT)`;\n  license.value = \"MIT\";\n  return license;\n}","pinCode":false,"dname":"4db3caa6-019b-4a8a-9ac0-6a3d26afff0c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`*Clip art courtesy [ClipArt ETC](https://etc.usf.edu/clipart/), radio buttons and checkboxes courtesy [Amit Sch](https://observablehq.com/@meetamit/multiple-choice-inputs).*`","pinCode":false,"dname":"c877262b-85ec-4aa8-b32b-7c92e65f61a8","codeMode":"javascript2"}}}],"version":"2.19.1"}