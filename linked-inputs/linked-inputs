{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# Linked Inputs\n\n<p style=\"background: #fffced; box-sizing: border-box; padding: 10px 20px;\">***Update Feb. 2021:*** *Observable now supports [**Range inputs**](/@observablehq/input-range) that provide this behavior by default! (And see [Synchronized Inputs](/@observablehq/synchronized-inputs) for more advanced usage.) This notebook will remain for history, but please upgrade to [Observable Inputs](/@observablehq/inputs).*</p>\n\nShowing how to link together a range slider and a number input. Use either input to change the value of *x*.`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"viewof x = {\n  const div = html`\n    <input type=range min=0 max=100>\n    <input type=number min=0 max=100 style=\"width:auto;\">\n  `;\n  const range = div.querySelector(\"[type=range]\");\n  const number = div.querySelector(\"[type=number]\");\n  div.value = range.value = number.value = 50;\n  range.oninput = () => number.value = div.value = range.valueAsNumber;\n  number.oninput = () => range.value = div.value = number.valueAsNumber;\n  return div;\n}","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"md`The current value is: ${x}`","pinCode":false}}}],"version":"2.19.1"}