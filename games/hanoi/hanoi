{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# 汉诺塔`","pinCode":false,"dname":"cbba30f1-511a-4472-a0b7-698912fc8b58","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof scale = (Inputs.range([2, 12], {label: \"方块个数\", value: 3, step: 1}))","pinCode":false,"dname":"38108e2c-e831-420b-aa24-06156e7141d9","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof time = (Inputs.range([0, 2000], {value: 1000, label: \"移动时间\", step: 1}))","pinCode":false,"dname":"6dd28c0a-9b17-42a2-9ab4-16ce8790ce36","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof item_width = (Inputs.range([5, 100], {value: 40, label: \"方块宽度\", step:1}))","pinCode":false,"dname":"de98c561-514b-4ba0-9811-4311a817cbed","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof item_height = (Inputs.range([5, 100], {label: \"方块高度\",value:20, step : 1}))","pinCode":false,"dname":"26a447cb-643d-4a33-b92b-7892a3a4ec54","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof gap = (Inputs.range([1, 150], {label: \"塔间距\",value: 30, step: 1}))","pinCode":false,"dname":"6731895b-098d-4f4c-8903-99f9fd1583c4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof toggle = (Inputs.toggle({label: \"动画播放\",value:true}))","pinCode":false,"dname":"d8f8bfce-0d33-4e99-904d-a4b791382698","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"(async function (\n  width = 960,\n  height = 600,\n  color = [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  svg = d3\n    .create(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .style(\"border\", \"2px solid\")\n) {\n  function create_items(n, panel) {\n    let items = [];\n\n    function render_init(item) {\n      let g = svg.append(\"g\").attr(\"class\", \"item\");\n      g.append(\"rect\")\n        .attr(\"width\", item.width)\n        .attr(\"height\", item.height)\n        .attr(\"rx\", 8)\n        .attr(\"x\", item.x)\n        .attr(\"y\", item.y)\n        .style(\"fill\", color[item.order]);\n      g.append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"dominant-baseline\", \"middle\")\n        .attr(\"x\", item.x + item.width / 2)\n        .attr(\"y\", item.y + item.height / 2)\n        .text(item.order + 1)\n        .style(\"fill\", \"#f2f2f2\");\n      return g;\n    }\n\n    for (let i = n - 1; i >= 0; --i) {\n      let item = { order: i, width: item_width + i * 20, height: item_height };\n      panel.push(item);\n      let element = render_init(item);\n      item.render = async function () {\n        let rect = element\n          .select(\"rect\")\n          .transition()\n          .duration(time / 2)\n          .attr(\"y\", 20)\n          .transition()\n          .duration(time / 2)\n          .attr(\"x\", item.x)\n          .transition()\n          .duration(time)\n          .attr(\"y\", item.y)\n          .end();\n        let text = element\n          .select(\"text\")\n          .transition()\n          .duration(time / 2)\n          .attr(\"y\", 20 + item.height / 2)\n          .transition()\n          .duration(time / 2)\n          .attr(\"x\", item.x + item.width / 2)\n          .transition()\n          .duration(time)\n          .attr(\"y\", item.y + item.height / 2)\n          .end();\n        await Promise.all([text, rect]);\n      };\n    }\n  }\n  let x = 250 - gap;\n  let padding = gap + 120;\n  let A = new Panel(x, height - 100, \"A\", 100 + gap, 15, svg);\n  let B = new Panel(x + padding, height - 100, \"B\", 100 + gap, 15, svg);\n  let C = new Panel(x + padding * 2, height - 100, \"C\", 100 + gap, 15, svg);\n  create_items(scale, A);\n  if (toggle) hanoi(A, B, C, scale);\n  return svg.node();\n})()","pinCode":false,"dname":"9086dd6d-4f86-4850-9157-9c0a108afdb8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"htl.html`<style>\nsvg {\n    scale: 1;\n    transform-origin: left;\n    /* transform: translate(0px, 0px); \n    margin-top: -150px;\n    margin-bottom: -150px;*/\n}\n</style>`","pinCode":false,"dname":"04cc3f6c-620b-442f-9e69-de8dcde2ec57","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"Panel = (class Panel {\n  constructor(x, y, name, width = 40, height = 20, svg) {\n    this.items = [];\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.name = name;\n    let element = svg.append(\"g\");\n    element\n      .append(\"line\")\n      .attr(\"x1\", x + width / 2)\n      .attr(\"y1\", y)\n      .attr(\"x2\", x + width / 2)\n      .attr('y2', 20)\n      .style('stroke', 'black')\n       .style('stroke-width', 4);\n\n    element\n      .append(\"rect\")\n      .attr(\"x\", x)\n      .attr(\"y\", y)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .style(\"fill\", \"rgb(90, 18, 22)\");\n    element\n      .append(\"text\")\n      .attr(\"x\", x + width / 2)\n      .attr(\"y\", y + height + 30)\n      .attr(\"font-size\", \"20px\")\n      .attr('text-anchor', 'middle')\n      .text(name);\n  }\n  push(item) {\n    let top = this.items.at(-1);\n    if (top === undefined || top.order > item.order) {\n      this.recomputation(item, this.items.length);\n      this.items.push(item);\n    }\n  }\n  async move(panel) {\n    if (this.items.length === 0) return;\n    let item = this.items.at(-1);\n    panel.push(item);\n    this.items.pop();\n    await item.render();\n  }\n  recomputation(item, index) {\n    item.x = this.x + this.width / 2 - item.width / 2;\n    item.y = this.y - (index+1)*(item.height+2);\n    return item;\n  }\n})","pinCode":false,"dname":"041773bf-adf1-4618-8508-abc66d4314a7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`## 嵌套过程`","pinCode":false,"dname":"c9751de6-39de-4cb3-92c2-20d3c52f0df3","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"hanoi = (async function hanoi(A, B, C, scale) {\n  if (scale == 1) return await A.move(C);\n  await hanoi(A, C, B, scale - 1);\n  await A.move(C);\n  await hanoi(B, A, C, scale - 1);\n})","pinCode":false,"dname":"71283571-887c-45f7-9328-32447ca74027","codeMode":"javascript2"}}}],"version":"2.19.1"}