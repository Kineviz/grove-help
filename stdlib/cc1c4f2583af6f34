{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# Mock Database Client\n\nSmoke-and-mirrors version of [database clients](/@observablehq/connecting-to-databases) to demonstrate their API. Please pardon the deception. Real clients are üëåüèº.`","pinCode":false,"dname":"_1644567046389"}}},{"type":"codeTool","data":{"codeData":{"value":"MockDatabaseClient = (function MockDatabaseClient(name) {\n  switch (name) {\n    case \"Baby Names\": return FileAttachment(\"names.db\").sqlite();\n    case \"Weather\": return FileAttachment(\"weather.sqlite\").sqlite();\n    default: throw new Error(`database not found: ${name}`);\n  }\n})","pinCode":false,"dname":"_1644567046393"}}},{"type":"codeTool","data":{"codeData":{"value":"MockDatabaseClient(\"does_not_exist\")","pinCode":false,"dname":"_1644567046395"}}},{"type":"codeTool","data":{"codeData":{"value":"dc = (MockDatabaseClient(\"Baby Names\"))","pinCode":false,"dname":"_1644567046396"}}},{"type":"codeTool","data":{"codeData":{"value":"dc.query(`\n  SELECT *\n  FROM names\n  WHERE name IN (?, ?)\n`, [\"Loki\", \"Thor\"])","pinCode":false,"dname":"_1644567046397"}}},{"type":"codeTool","data":{"codeData":{"value":"dc.explain(`\n  SELECT *\n  FROM names\n  WHERE name = 'Loki'\n`)","pinCode":false,"dname":"_1644567046397"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof desc = (dc.describe(\"names\"))","pinCode":false,"dname":"_1644567046398"}}},{"type":"codeTool","data":{"codeData":{"value":"desc","pinCode":false,"dname":"_1644567046399"}}}],"version":"2.19.1"}