{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# Introduction to Data\n\nHow do you get data into Grove for analysis and visualization? Depending on its form and where it lives, there are a variety of ways:\n\n* [inline](#inline) - embedded in the notebook as code, for small amounts of data\n* [files](#files) - attached to the notebook, for medium amounts of data (*e.g.*, CSV, SQLite)\n* [APIs](#apis) - queried from a remote server, for programmatic access to data\n* [databases](#databases) - via an Grove database client, for accessing SQL databases\n\nYou can also [download](#downloads) generated data from notebooks.`","pinCode":false,"dname":"6b7e08bf-2856-4b09-81c6-acb628d284c8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"inline = (md`## Inline\n\nFor tiny datasets, you can inline JSON:`)","pinCode":false,"dname":"0a375e5d-0270-4e01-987b-09c01971ceb7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"primes = ([2, 3, 5, 7, 11, 13])","pinCode":false,"dname":"52e1707e-c3d0-485b-811b-d25a3a6859c0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`You can also inline tiny CSV files, if you parse them:`","pinCode":false,"dname":"f400f25a-afce-4c91-a5a2-a1ac4e52d65c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"mtcars = (d3.csvParse(`name,mpg,cyl,disp,hp,drat,wt,qsec,vs,am,gear,carb\nMazda RX4,21,6,160,110,3.9,2.62,16.46,0,1,4,4\nMazda RX4 Wag,21,6,160,110,3.9,2.875,17.02,0,1,4,4\nDatsun 710,22.8,4,108,93,3.85,2.32,18.61,1,1,4,1\nHornet 4 Drive,21.4,6,258,110,3.08,3.215,19.44,1,0,3,1\nHornet Sportabout,18.7,8,360,175,3.15,3.44,17.02,0,0,3,2\nValiant,18.1,6,225,105,2.76,3.46,20.22,1,0,3,1\nDuster 360,14.3,8,360,245,3.21,3.57,15.84,0,0,3,4\nMerc 240D,24.4,4,146.7,62,3.69,3.19,20,1,0,4,2\n`))","pinCode":false,"dname":"edf94a92-2af1-4cc6-825d-2303e46f2fc4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`Once you’ve defined a dataset, you can reference it like a normal value:`","pinCode":false,"dname":"7668751b-4f75-4a5e-a907-0ab8fd805717","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`The first prime is ${primes[0]}.`","pinCode":false,"dname":"1cb852c2-344a-477d-a047-47821348c17e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`The first car is a ${mtcars[0].name} with ${mtcars[0].hp} horsepower.`","pinCode":false,"dname":"63933875-bcd3-4c78-8c25-7854b9b6d809","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"medianMilesPerGallon = (d3.median(mtcars, d => d.mpg))","pinCode":false,"dname":"553e4dd7-8c37-4730-a0d0-b495b67c79e8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"files = (md`## Files\n\nFor medium-size datasets, you can [attach files](/@observablehq/file-attachments) directly to your notebooks. To use a file, pass the file’s name to the built-in FileAttachment function from the ${Link(\"stdlib/stdlib\",\"Grove standard library\")} then call the ${Link(\"file-attachments/file-attachments\",\"appropriate method\")} depending on how you want to consume the file.`)","pinCode":false,"dname":"d4a7df6d-7ec9-4dff-a3e2-1dadb986b799","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"flare = (FileAttachment(\"flare.csv\").csv())","pinCode":false,"dname":"249ec960-7eaf-4646-b4a1-815fffb4959c","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`You can also fetch files uploaded and hosted on outside services such as [GitHub Gist](https://gist.github.com), as long as they support [CORS](https://enable-cors.org/). For example, you can replace “gist.github.com” in a gist’s raw link with “gist.githubusercontent.com”.`","pinCode":false,"dname":"76e8e7fd-67a3-4773-81d0-09a9622fc1fc","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"flareGist = (d3.csv(\"https://gist.githubusercontent.com/mbostock/4063570/raw/11847750012dfe5351ee1eb290d2a254a67051d0/flare.csv\"))","pinCode":false,"dname":"bca88b7a-952c-4d00-b316-fffb0157f30e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`(You can ${Link(\"input-file/input-file\",\"read local files\")} in your notebooks too, without hosting! But the downside of local files is that you’re only able to read a local file if you have it… well, locally, whereas hosted files will also be available to your readers. So, we recommend ${Link(\"file-attachments/file-attachments\",\"file attachments\")} instead.)`","pinCode":false,"dname":"cca54c9b-7c52-4b5d-b4fe-239e58e05128","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`A particularly powerful type of file for data analysis is a SQLite file, which you can query with arbitrary SQL without connecting to an external database. Observable has built-in support for SQLite; see [Introduction to SQLite](https://observablehq.com/@observablehq/sqlite).`","pinCode":false,"dname":"645872cc-089c-49d4-afce-36c43a9966c2","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"apis = (md`## APIs\n\nThere are myriad APIs available on the web, many of which are publicly accessible. For example: [CryptoCompare](https://www.cryptocompare.com/api/) provides a free API for cryptocurrency price data; Todd Motto maintains a nice list of [free public APIs](https://github.com/toddmotto/public-apis) you can peruse; and here’s an example of ${Link(\"working-with-the-census-api/working-with-the-census-api\",\"working with the U.S. Census API\")}. You can also use [WebSockets](https://developer.mozilla.org/docs/Web/API/WebSockets_API) to connect to realtime data streams!\n\nIf you want to access services that use API secret keys or passwords, you can use ${Link(\"secrets/secrets\",\"Grove secrets\")} to store sensitive values securely, separately from code (and avoid accidentally publishing them within your notebooks).`)","pinCode":false,"dname":"cbbeea22-2826-41a4-8ea4-e11c944e42f8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"databases = (md`## Databases\n\nTo access PostgreSQL 8+, MySQL 5, or Google BigQuery databases, you can use an ${Link(\"databases/databases\",\"Grove database client\")}. For databases on private networks, use our ${Link(\"self-hosted-database-proxies/self-hosted-database-proxies\",\"self-hosted database proxy\")}. After setting up a database client from [your settings](/settings/databases), query from your notebooks like so:`)","pinCode":false,"dname":"d3e16f26-c12c-4f24-940e-becc8f6207fd","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"client = (DatabaseClient(\"Baby Names\"))","pinCode":false,"dname":"e221bc10-3cac-4031-8cf7-3adb780f3a56","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"names = (client.query(`SELECT name, gender, year, SUM(number) AS number\nFROM names\nWHERE year > ?\nGROUP BY name, gender, year`, [1920]))","pinCode":false,"dname":"927f63a8-23c9-497a-b7c6-d1ef8a9d431d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"SELECT name\n     , gender\n     , year\n     , sum(number) AS number\n  FROM names\n WHERE year > 1920\n GROUP BY name, gender, year","pinCode":true,"dname":"5edd9d19-34a8-4b22-977f-f9c0fbb3df45","codeMode":"sql","db":"client","sqlType":"sqlite"}}},{"type":"codeTool","data":{"codeData":{"value":"downloads = (md`## Downloads\n\nYou can get data back out of notebooks as CSV or JSON by clicking on the cell menu. Try it on any of the data cells above:\n\n<figure>\n  <img src=\"${await FileAttachment(\"Screen Shot 2020-01-31 at 10.13.51 AM.png\").url()}\" width=\"280\">\n</figure>`)","pinCode":false,"dname":"48704c36-19d9-4dd0-8754-5b81aa3ccda5","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`This technique is especially useful for transforming (aggregating, filtering or reducing) data within a notebook, and then loading the transformed data in the future rather than transforming it on load. You can also download any attached files from the files pane.`","pinCode":false,"dname":"b1c50b02-507a-4e98-a3dd-b64545945355","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`In addition to the built-in cell download menu items, you can download any file using [DOM.download](https://github.com/observablehq/stdlib/blob/master/README.md#DOM_download). For example, you can download the Flare data (loaded above) as CSV by clicking the button below:`","pinCode":false,"dname":"b5e92ab7-6669-44f3-a65f-ac8a65df7be3","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"blob = (new Blob([d3.csvFormat(flare)], {type: \"text/csv\"}))","pinCode":false,"dname":"de4649a8-0311-485e-9fd8-b7532900e2df","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"DOM.download(blob, \"flare.csv\")","pinCode":false,"dname":"abc978a0-0a3e-45b9-8a23-ed70d1fe847b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`---\n\n## Appendix`","pinCode":false,"dname":"c42d2d87-37c4-4c16-bf1d-debf75858ddd","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import { MockDatabaseClient as DatabaseClient }  from './mock-database-client'","pinCode":false,"dname":"61611804-d6ca-4f76-85b6-13f4b78025be","codeMode":"javascript2"}}}],"version":"2.19.1"}