{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# More Deliberate Inputs\n\n<p style=\"background: #fffced; box-sizing: border-box; padding: 10px 20px;\">***Update Feb. 2021:*** *Observable now supports [**Text inputs**](/@observablehq/input-text) with a submit option! This notebook will remain for history, but please upgrade to [Observable Inputs](/@observablehq/inputs).*</p>\n\nIf you use a default text input in Observable, the notebook will react instantaneously as you type in the input.`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"viewof text = (html`<input placeholder=\"Type here!\">`)","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"text","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"md`Sometimes what you want is a more *deliberate* input, where the notebook will only react when you click submit or hit enter. You can do that using a form and mapping the formâ€™s *submit* event to the *input* event expected by Observable.`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"viewof value = (submit())","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"value","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"md`To use this implementation in your notebook:\n\n~~~js\nimport {submit} from \"@mbostock/more-deliberate-inputs\"\n~~~`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"md`---\n\n## Appendix`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"submit = (({\n  value = \"\",\n  placeholder = \"Type here, then click submit.\",\n  submit = \"Submit\",\n  ...props\n} = {}) => {\n  const form = Inputs.text({value, placeholder, submit});\n  Object.assign(form.text, props);\n  return form;\n})","pinCode":false}}}],"version":"2.19.1"}