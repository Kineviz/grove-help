{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# Fullscreen Canvas\n\nThe trick is to make the cell’s *container* element go fullscreen, not the cell’s content. Here I’m reaching through the DOM to find the container element of the following cell, which also prevents the button from re-rendering reactively.`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"fullscreen = (htl.html`<button onclick=${({currentTarget}) => {\n  const currentCell = currentTarget.parentElement;\n  const nextCell = currentCell.nextElementSibling;\n  nextCell.requestFullscreen ? nextCell.requestFullscreen()\n    : nextCell.webkitRequestFullscreen ? nextCell.webkitRequestFullscreen()\n    : (() => { throw new Error(\"Fullscreen API not supported\"); });\n}}>Fullscreen</button>`)","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"canvas = {\n  const n = 200;\n  const height = Math.ceil(width * screen.height / screen.width);\n  const margin = 60;\n  const svg = htl.svg`<svg width=${width} height=${height} style=\"background: white; display: block;\">`;\n  const pointsPath = svg.appendChild(htl.svg`<path fill=\"currentColor\">`);\n  const meshPath = svg.appendChild(htl.svg`<path stroke=\"red\" fill=\"none\">`);\n  const particles = Array.from({length: n}, () => [Math.random() * width, Math.random() * height, 0, 0]);\n  while (true) {\n    const delaunay = d3.Delaunay.from(particles);\n    const voronoi = delaunay.voronoi([0, 0, width, height]);\n    pointsPath.setAttribute(\"d\", delaunay.renderPoints());\n    meshPath.setAttribute(\"d\", voronoi.render());\n    yield svg;\n    for (const p of particles) {\n      p[0] += p[2];\n      p[1] += p[3];\n      if (p[0] < -margin) p[0] += width + margin * 2;\n      else if (p[0] > width + margin) p[0] -= width + margin * 2;\n      if (p[1] < -margin) p[1] += height + margin * 2;\n      else if (p[1] > height + margin) p[1] -= height + margin * 2;\n      p[2] += 0.2 * (Math.random() - 0.5) - 0.01 * p[2];\n      p[3] += 0.2 * (Math.random() - 0.5) - 0.01 * p[3];\n    }\n  }\n}","pinCode":false}}}],"version":"2.19.1"}