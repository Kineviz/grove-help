{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# Canvas to GIF\n\nLetâ€™s make an animated GIF from a Canvas element using [gif.js](https://jnordberg.github.io/gif.js/).`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"viewof gif = {\n  const gif = new GIF;\n  const canvas = DOM.canvas(width, height);\n  const context = canvas.getContext(\"2d\");\n  context.font = \"128px Helvetica Neue\";\n  context.textAlign = \"center\";\n  for (let i = 0, n = 10; i < n; ++i) {\n    context.clearRect(0, 0, width, height);\n    context.fillStyle = `hsl(${i / n * 360},100%,50%)`;\n    context.fillText(`Frame ${i}`, width / 2, height / 2 + 40);\n    gif.addFrame(canvas, {copy: true, delay: 250});\n    yield canvas;\n  }\n  canvas.value = new Promise(resolve => gif.on(\"finished\", resolve));\n  gif.render();\n  yield canvas;\n}","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"html`<img src=\"${URL.createObjectURL(gif, {type: \"image/gif\"})}\">`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"DOM.download(gif)","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"GIF = {\n  const [gif, workerScript] = await Promise.all([\n    require(\"gif.js@0.2\"),\n    require.resolve(\"gif.js@0.2/dist/gif.worker.js\")\n      .then(fetch)\n      .then(response => response.blob())\n      .then(blob => URL.createObjectURL(blob, {type: \"text/javascript\"}))\n  ]);\n  return class extends gif {\n    constructor(options) {\n      super({workerScript, ...options});\n    }\n  };\n}","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"width = (640)","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"height = (480)","pinCode":false}}}],"version":"2.19.1"}