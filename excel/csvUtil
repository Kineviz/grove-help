{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"function saveLink(link, title) {\n  let save_link = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n  document.body.appendChild(save_link);\n  save_link.href = link;\n  if (title) {\n    save_link.download = title;\n  }\n  let event = document.createEvent('MouseEvents');\n  event.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n  save_link.dispatchEvent(event);\n  URL.revokeObjectURL(save_link.href);\n  document.body.removeChild(save_link);\n}","pinCode":false,"dname":"3ce27fd1-3217-44f9-807d-8d05f90d36ad","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function exportCsv(csvTitle, content){\n  let universalBOM = \"\\uFEFF\";\n  const file = new File([universalBOM + content], { type: 'text/plain', endings: 'transparent' });\n  console.log(file)\n  const url = URL.createObjectURL(file);\n  \n  saveLink(url, csvTitle + \".csv\");\n}","pinCode":false,"dname":"ea1a3c4d-c9c1-41d3-9dbd-82fdce70ef0e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function extractAllKeys(objects) {\n  let obj = {};\n  _.each(objects, (object) => {\n    _.each(object, (value, key) => {\n      if (undefined === obj[key]) {\n        obj[key] = value;\n      }\n    })\n  })\n  return obj;\n}","pinCode":false,"dname":"eb43081b-d425-4d65-87f2-7d9d56b93104","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"function ConvertToCSV(objArray,headerMap) {\n  let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n  let keys =objArray.columns || _.keys(extractAllKeys(objArray)).sort()\n  let header = _.reduce(keys, (line, key, index) => {\n    if (index != 0) line += ','\n    line += (headerMap&&headerMap[key]||key);\n    return line;\n  }, '')\n  let str = '';\n  for (let i = 0; i < array.length; i++) {\n    let line = '';\n    if (typeof array[i] != 'object') {\n      continue;\n    }\n    for (let index = 0; index < keys.length; index++) {\n      let key = keys[index];\n      if (index != 0) line += ','\n      if (array[i][key] === undefined) {\n        line += '';\n      } else {\n        line += (typeof array[i][key] === 'string'  && ~array[i][key].indexOf(\",\")?`\"${array[i][key]}\"`:array[i][key]);\n      }\n    }\n\n    str += line + '\\r\\n';\n  }\n  return header + '\\r\\n' + str;\n}","pinCode":false,"dname":"d1312d5b-0054-4b5d-a6cb-4dd986d644bd","codeMode":"javascript2"}}}],"version":"2.19.1"}