{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# Big Query`","pinCode":false,"dname":"f45dd4ec-73f7-4122-a5a5-6f4e765da7c9","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n    const { Button, Input } = Antd;\n    const readFile = (event) => {\n       const inputElement = event.target;\n       const inputFile = inputElement.files[0];\n       const reader = new FileReader();\n       reader.onload =  onLoadFunc\n       reader.readAsText(inputFile);\n    }\n    return <Input key='62c0a4fb-c105-4705-934d-792442af7bee' type=\"file\" onChange={readFile}  /> ;\n})","pinCode":false,"dname":"27d56bf7-61c5-4e48-a0f7-3e3a4a97bc14","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"projectID = service_account_credentials?.project_id //'black-dragon-324218'","pinCode":false,"dname":"9d6c4342-cec8-4540-ba79-0dcb8f4d7a75","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"onLoadFunc = (loadedEvent) => {\n  const parsedResult = JSON.parse(loadedEvent.target.result);\n  mutable service_account_credentials = parsedResult;\n}","pinCode":false,"dname":"36dc529e-79ea-4348-915c-1677fbdb9dad","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"jsrsasign = require('https://bundle.run/jsrsasign@10.1.4')","pinCode":false,"dname":"6cb26da4-bcb3-4d25-832a-c7c89d2c1aaf","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"async function getAccessTokenFromServiceAccount(serviceAccountKey) {\n  // First create a JWT from the credentials\n  const tNow = Math.floor((new Date()).getTime() / 1000);\n  const sHeader = JSON.stringify({alg: 'RS256', typ: 'JWT'});\n  const sPayload = JSON.stringify({\n      iss: serviceAccountKey.client_email,\n      scope: \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/cloud-platform\",\n      iat: tNow,\n      exp: tNow + 600,\n      aud: \"https://oauth2.googleapis.com/token\",\n  });\n  const JWT = jsrsasign.KJUR.jws.JWS.sign(\"RS256\", sHeader, sPayload, serviceAccountKey.private_key);\n    \n  // Swap JWT for access_token\n  const tokenResponse = await fetch(\n    'https://oauth2.googleapis.com/token',\n    {\n      method: 'POST',\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      body: `grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer&assertion=${JWT}`,\n    }\n  );\n\n  if (tokenResponse.status != 200) {\n    throw new Error(await tokenResponse.text())\n  }\n  return (await tokenResponse.json()).access_token;\n}","pinCode":false,"dname":"7fc916ae-8d9a-47a8-a87f-274c5e745411","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"async function createGapi({\n  // Create API key https://cloud.google.com/docs/authentication/api-keys\n  apiKey = undefined,\n  // Find the APIs you want to use https://developers.google.com/apis-explorer/#p/\n  discoveryDocs = [],\n  // One way of authenticating is with an access_token\n  // gcloud auth print-access-token\n  access_token = undefined,\n  // Another is with a service account key like\n  /*\n  {\n    \"type\": \"service_account\",\n    \"project_id\": \"...\",\n    \"private_key_id\": \"...\",\n    \"private_key\": \"...\",\n    \"client_email\": \"...@....iam.gserviceaccount.com\",\n    \"client_id\": \"....\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"token_uri\": \"https://oauth2.googleapis.com/token\",\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/....iam.gserviceaccount.com\"\n  }*/\n  service_account_key = undefined\n} = {}) {\n  const gapi = await new Promise((resolve, reject) => {\n    require(\"https://apis.google.com/js/api.js\")\n      .catch(() => {\n        window.gapi.load(\"client:auth2\", () => resolve(window.gapi));\n      })\n      .then(() => {\n        window.gapi.load(\"client:auth2\", () => resolve(window.gapi)); // Embeds work?\n      });\n  });\n  await gapi.client.init({\n    apiKey,\n    discoveryDocs\n  });\n  // Auth based on config\n  if (service_account_key) {\n    console.log(\"Using service account to mint access token\");\n    access_token = await getAccessTokenFromServiceAccount(service_account_key);\n  }\n  if (access_token) {\n    console.log(\"Using access token\");\n    gapi.client.setToken({\n      access_token\n    });\n  }\n  return gapi.client;\n}","pinCode":false,"dname":"8b38128a-9546-432d-877c-82552dac6cce","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"mutable service_account_credentials = 'No File Chosen Yet'","pinCode":false,"dname":"d90eeb82-0fe2-4eda-afc4-6640d20f4cd4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"gapi_config = ({\n  discoveryDocs: \n    [\"https://bigquery.googleapis.com/discovery/v1/apis/bigquery/v2/rest\"]\n  ,\n  service_account_key: service_account_credentials\n})","pinCode":false,"dname":"635d4726-4c26-439b-ae7d-39ae9c1a820e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"bqClient = await createGapi(gapi_config)","pinCode":false,"dname":"94778fa8-20b4-43fe-a8d5-0a7c6e037e8a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"runBigQuery = async (queryStr)=>{  \n  let result = await bqClient.bigquery.jobs.query({\n    projectId: [projectID],\n    resource: {\n      // See https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/query#QueryRequest\n      query:\n        [queryStr],\n      useLegacySql: false\n    }\n  })\n//   console.log(result)\n\n  if(result==null | result.result.totalRows==0) return []\n  let keys=result.result.schema.fields.map(f=>f.name)\n  return result.result.rows\n    .map(row=>row.f.map(x=>x.v))\n    .map(arr=>_.fromPairs(_.zip(keys,arr)))\n}","pinCode":false,"dname":"46f9005c-9c9e-4ef4-a8a4-d929f788b884","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"import {jsx, render, useState, component, useEffect, Fragment } from \"https://grove-help.graphxr.com/react/react\"","pinCode":false,"dname":"f4128cf5-e9d7-4c2c-9952-71a82e9002d5","codeMode":"javascript2"}}}],"version":"2.19.1"}