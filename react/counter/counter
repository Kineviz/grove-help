{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# React Counter`","pinCode":false,"dname":"bd4cec61-32f6-4111-9c87-34c183351846","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n    const { Space } = Antd;\n    return <main className=\"grid\">\n      <Counter />\n      <Todos />\n      <Clock />\n    </main>;\n  })","pinCode":false,"dname":"db716ff1-997c-440c-b016-3c0c8da18128","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"function Card({ title, children }) {\n  return (\n    <section className=\"card\">\n      <h2>{title}</h2>\n      <div>{children}</div>\n    </section>\n  );\n}","pinCode":false,"dname":"ead67c7a-3d7b-47c1-a94c-c3641d2a641c","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"function Counter() {\n  const [count, setCount] = useState(0);\n  return (\n    <Card title=\"Counter\">\n      <p className=\"muted\">A tiny stateful component</p>\n      <div className=\"row\">\n        <button className=\"btn\" onClick={() => setCount(c => c - 1)}>-1</button>\n        <button className=\"btn\" onClick={() => setCount(0)}>Reset</button>\n        <button className=\"btn\" onClick={() => setCount(c => c + 1)}>+1</button>\n      </div>\n      <p style={{fontSize:28, fontWeight:700, marginTop:8}} aria-live=\"polite\">{count}</p>\n    </Card>\n  );\n}","pinCode":false,"dname":"63b8ba48-4990-48ef-be0b-7ee5d0331811","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"function Todos() {\n  const [text, setText] = useState(\"\");\n  const [items, setItems] = useState([\"Clone this file\", \"Edit the code\", \"Build something cool ✨\"]);\n\n  function add() {\n    const t = text.trim();\n    if (!t) return;\n    setItems(prev => [...prev, t]);\n    setText(\"\");\n  }\n  function remove(i) {\n    setItems(prev => prev.filter((_, idx) => idx !== i));\n  }\n\n  return (\n    <Card title=\"Todos\">\n      <p className=\"muted\">Minimal list with add/remove</p>\n      <div className=\"row\" style={{marginBottom:8}}>\n        <input value={text} onChange={e => setText(e.target.value)} placeholder=\"Add a task…\" onKeyDown={(e)=> e.key==='Enter' && add()} />\n        <button className=\"btn\" onClick={add}>Add</button>\n      </div>\n      <ul>\n        {items.map((t, i) => (\n          <li key={i}>\n            {t}\n            <button className=\"btn secondary\" style={{marginLeft:8}} onClick={() => remove(i)}>Done</button>\n          </li>\n        ))}\n      </ul>\n    </Card>\n  );\n}\n","pinCode":false,"dname":"82f2be3b-3879-4a6c-b3ec-71133d45c8c7","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"function Clock() {\n  const [now, setNow] = useState(() => new Date());\n  useEffect(() => {\n    const id = setInterval(() => setNow(new Date()), 1000);\n    return () => clearInterval(id);\n  }, []);\n  const fmt = useMemo(() => now.toLocaleString(), [now]);\n  return (\n    <Card title=\"Clock\">\n      <p className=\"muted\">Updates every second</p>\n      <div style={{fontSize:24, fontVariantNumeric:'tabular-nums'}}>{fmt}</div>\n    </Card>\n  );\n}","pinCode":false,"dname":"f985290d-d668-476b-a506-4dd077a4f9d1","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"<style>\n  .global-style :root { --bg:#0b1220; --panel:#111a2b; --text:#e8eefc; --muted:#9bb0d3; --accent:#66a3ff; --accent-2:#7cf29c; --border:#22304d; }\n  * { box-sizing: border-box; }\n  .grid { margin:0; font-family: system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, \"Apple Color Emoji\", \"Segoe UI Emoji\"; background: linear-gradient(180deg, #0b1220, #0f1a2e); color: var(--text); }\n  .container { max-width: 960px; margin: 0 auto; padding: 24px; }\n  header { display:flex; align-items:center; justify-content:space-between; gap:16px; padding:16px 20px; border:1px solid var(--border); background:rgba(17,26,43,.7); backdrop-filter: blur(8px); border-radius:16px; position: sticky; top: 12px; }\n  .brand { display:flex; align-items:center; gap:12px; }\n  .logo { width:32px; height:32px; border-radius:10px; background: conic-gradient(from 180deg at 50% 50%, var(--accent), var(--accent-2)); box-shadow: 0 0 24px rgba(102,163,255,.5); }\n  .title { font-weight:700; letter-spacing:.3px; }\n  .grid { display:grid; grid-template-columns: repeat(auto-fit, minmax(260px,1fr)); gap:16px; margin-top:16px; }\n  .card { border:1px solid var(--border); background: linear-gradient(180deg, rgba(17,26,43,.9), rgba(14,21,36,.9)); border-radius:16px; padding:18px; box-shadow: 0 10px 30px rgba(0,0,0,.25); }\n  .card h2 { margin: 0 0 10px; font-size: 18px; }\n  .muted { color: var(--muted); font-size: 13px; }\n  .btn { appearance:none; border:1px solid var(--border); background: #0f1930; color: var(--text); padding:10px 14px; border-radius:12px; cursor:pointer; transition:.15s transform,.2s background; font-weight:600; }\n  .btn:hover { transform: translateY(-1px); background:#13244a; }\n  .btn.secondary { background:#11203d; }\n  input[type=\"text\"] { width:100%; padding:10px 12px; background:#0d1527; border:1px solid var(--border); border-radius:12px; color:var(--text); }\n  ul { padding-left: 18px; }\n  li { margin:6px 0; }\n  .footer { margin-top: 18px; font-size: 12px; color: var(--muted); text-align: center; }\n  .pill { display:inline-block; padding:6px 10px; border-radius:999px; border:1px solid var(--border); color:var(--muted); font-size:12px; }\n  .row { display:flex; gap:8px; }\n</style>","pinCode":false,"dname":"302f1267-8b51-4277-94a7-bc9f11e87175","codeMode":"htmlmixed"}}},{"type":"codeTool","data":{"codeData":{"value":"import {jsx, render, useState, component, useEffect, Fragment, useMemo } from \"https://grove-help.graphxr.com/react/react\"","pinCode":false,"dname":"90ca1167-7293-4dca-9819-f6a6fcc163fa","codeMode":"javascript2"}}}],"version":"2.19.1"}