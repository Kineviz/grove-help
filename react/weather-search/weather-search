{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# Weather Search (Demo)`","pinCode":false,"dname":"1ad9cbc3-f019-47a0-94ac-48f700ae2e9b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"render(({ useSetter }) => {\n    const { Space } = Antd;\n    return  <WeatherApp />;\n})","pinCode":false,"dname":"ef43c1c0-d280-435b-b20b-89eede00a247","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"// Weather component - simulates fetching weather info for a city\nfunction WeatherApp() {\n  // State to hold input text\n  const [city, setCity] = useState(\"\");\n  // State to hold a fake weather result\n  const [result, setResult] = useState(null);\n\n  // Simulated fetch (in real apps you'd call an API)\n  function searchWeather() {\n    if (!city.trim()) return;\n    // Instead of calling a real API, just create a mock result\n    const temp = (Math.random() * 15 + 10).toFixed(1); // 10–25 °C\n    setResult({ city, temp, condition: \"Sunny\" });\n  }\n\n  return (\n    <div className=\"card\">\n      <h2>Search Weather</h2>\n      {/* Input box bound to city state */}\n      <input \n        type=\"text\" \n        placeholder=\"Enter a city...\" \n        value={city} \n        onChange={e => setCity(e.target.value)} \n        />\n\n      {/* Button to trigger weather search */}\n      <button onClick={searchWeather}>Search</button>\n\n      {/* Show result if available */}\n      {result && (\n        <div className=\"result\">\n          <strong>{result.city}</strong><br/>\n          {result.condition}, {result.temp}°C\n        </div>\n      )}\n    </div>\n  );\n}","pinCode":false,"dname":"d9833fee-ca8d-4984-9500-589df5f03176","codeMode":"jsx"}}},{"type":"codeTool","data":{"codeData":{"value":"import {jsx, render, useState, component, useEffect, Fragment } from \"https://grove-help.graphxr.com/react/react\"","pinCode":false,"dname":"370e6a15-987f-43f7-9495-5407081c9ee0","codeMode":"javascript2"}}}],"version":"2.19.1"}