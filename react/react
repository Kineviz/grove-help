{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`## Try This React Pages\n* #### ${Link(\"template/react-start/react-start\",\"Quick Start\")}<br>\nThis page will give you an introduction to 80% of the React concepts that you will use on a daily basis.\n* #### ${Link(\"../react-ant-design/components\",\"Ant Design Components\")}<br>\nComponents in ant design, which we can using it in grove page design.\n* #### ${Link(\"./keyboard-shortcuts/shortcutKey\",\"Shortcut Key for Grove\")}<br>\nShow grove shortcut in grov\n* #### ${Link(\"./office/office\", \"Office Testing Page\")}<br>\nA Testing Page for Office. A good try to use react in grove.\n`","pinCode":false,"dname":"cc54255e-ef39-40fe-89ab-769ca31a4473","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`# React\n\n...in Grove!\n\n${__SECRET_SWITCHER('@j-f1/react')}\n\nYou probably want to use \\`@j-f1/react-16\\` because this notebook will follow major version updates, which could break your code.`","pinCode":false,"dname":"a45e53ff-5943-4ca6-a3cc-7469f856b697","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"<span><b>Table of Contents</b>\n    <ul>\n        <li><a href=\"#example\">Example</a></li>\n        <li><a href=\"#api-docs\">API & Docs</a></li>\n        <ul>\n            <li><a href=\"#debugging\">Debugging</a></li>\n        </ul>\n        <ul>\n            <li><a href=\"#less-common-apis\">Less common APIs</a></li>\n        </ul>\n        <li><a href=\"#dependencies\">Dependencies</a></li>\n        <li><a href=\"#private-apis\">Private APIs</a></li>\n        <li><a href=\"#react-re-exports\">React re-exports</a></li>\n        <ul>\n            <li><a href=\"#creating-react-elements\">Creating React Elements</a></li>\n        </ul>\n        <ul>\n            <li><a href=\"#transforming-elements\">Transforming Elements</a></li>\n        </ul>\n        <ul>\n            <li><a href=\"#fragments\">Fragments</a></li>\n        </ul>\n        <ul>\n            <li><a href=\"#refs\">Refs</a></li>\n        </ul>\n        <ul>\n            <li><a href=\"#suspense\">Suspense</a></li>\n        </ul>\n        <ul>\n            <li><a href=\"#context\">Context</a></li>\n        </ul>\n        <ul>\n            <li><a href=\"#hooks\">Hooks</a></li>\n        </ul>\n        <ul>\n            <ul>\n                <li><a href=\"#basic-hooks\">Basic Hooks</a></li>\n            </ul>\n        </ul>\n        <ul>\n            <ul>\n                <li><a href=\"#additional-hooks\">Additional Hooks</a></li>\n            </ul>\n        </ul>\n        <ul>\n            <li><a href=\"#react-dom\">React DOM</a></li>\n        </ul>\n        <li><a href=\"#more-examples\">More Examples</a></li>\n    </ul>\n</span>","pinCode":false,"dname":"b49d33fe-b0f6-4b68-9558-ab72f0c98526","codeMode":"htmlmixed"}}},{"type":"codeTool","data":{"codeData":{"value":"// Generators.observe(notify => {\n//   let headings = [];\n\n//   function observed() {\n//     const h = Array.from(document.querySelectorAll('h2,h3,h4,h5,h6'));\n//     if (h.length !== headings.length || h.some((h, i) => headings[i] !== h)) {\n//       notify(html`<b>Table of Contents</b><ul>${Array.from(headings = h, h => {\n//         const level = parseInt(h.tagName.slice(1)) - 1;\n//         return Object.assign(\n//           html`${level > 1 ? '<ul>'.repeat(level-1) + '<li>' : '<li>'}<a href=#${h.id}>${DOM.text(h.textContent)}`,\n//           {onclick: e => (e.preventDefault(), h.scrollIntoView())}\n//         );\n//       })}`);\n//     }\n//   }\n\n//   const observer = new MutationObserver(observed);\n//   observer.observe(document.body, {childList: true, subtree: true});\n//   observed();\n//   return () => observer.disconnect();\n// })","pinCode":false,"dname":"efd7d4da-a2e2-421b-a18c-0cbf2d75dafa","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`## Example\n\n(more examples [below](#more_examples))`","pinCode":false,"dname":"6319d259-cfce-43a4-b006-0d6bb8113d0b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"render(() => jsx`<p>Hello, world!</p>`)","pinCode":false,"dname":"3cc2b1ca-7696-4cdf-b4fa-c82b9eefdefd","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof exampleText = (render(({ useSetter }) => {\n  const [value, setValue] = useState(\"\");\n  useSetter(value);\n  return jsx`<div>\n    <${ExampleCounter} number=${exampleCount} />\n    <input\n      type=\"text\"\n      placeholder=\"Enter some text...\"\n      value=${value}\n      onChange=${useCallback(event => setValue(event.target.value), [setValue])}\n    /></d\n  `;\n}))","pinCode":false,"dname":"99ab5b7d-4043-4625-a8aa-996e88732c5a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"exampleText","pinCode":false,"dname":"99173c5a-7c63-4a91-a562-9b8145ccc40a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"ExampleCounter = (component(\n  ({ number }) => jsx`\n    <p>\n      <strong>${number}</strong>${' '}\n      second${number === 1 ? ' has' : 's have'} elapsed\n      <br />\n    </p>\n  `\n))","pinCode":false,"dname":"0eaa8e26-4c8c-425f-a35c-bc5c1f842cf7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"exampleCount = {\n  let i = 0;\n  yield 0;\n  while (true) {\n    yield Promises.delay(1000, ++i);\n  }\n}","pinCode":false,"dname":"d82dc76e-7027-4619-9694-214a53b09114","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`Notice that the function returned by \\`component()\\` only changes when the component’s code changes.\nThis means that updates to values used by the component (like \\`count\\` above) don’t reset the component’s\nstate (they do trigger a re-render though). However, changing the component’s code does change the\nreturned component function, which means you can’t accidentally violate [the rules of hooks](https://reactjs.org/docs/hooks-rules.html) during development.\n\nFor a full example notebook, check out the [Golden Number Calculator](https://observablehq.com/@vorth/react-golden-calculator) by <a style=\"color: black; font-weight: bold; font-family: -apple-system, BlinkMacSystemFont, sans-serif;\" href=\"https://observablehq.com/@vorth\">@vorth</a>.`","pinCode":false,"dname":"fb180067-652b-45c4-af0f-73a635552f29","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`---\n\n## API & Docs\n\n<small>First, a note. If you have any ideas for how to improve the notebook, edit this page, click the “⋯” menu at the top, and click “Suggest…” to send me a suggestion with your comments or proposed changes.</small>`","pinCode":false,"dname":"02b0f017-090d-4468-ace4-6104f6222886","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`The \\`render\\` function takes a function that returns JSX and renders said JSX to a \\`<div>\\` that it returns using \\`react-dom\\`. The returned element will change when you alter the source code of the passed function (meaning that the component will remain the same if only the variables you reference change). You can safely use Hooks in this function.\n\nYour render function is passed an object containing three keys: \\`getValue\\`, \\`setValue\\`, and \\`useSetter\\`. These allow you to take advantage of Observable’s \\`viewof\\` functionality:\n* \\`getValue()\\` returns the current value of the view.\n* <code>setValue(*newValue*)</code> will immediately update the view’s value.\n* <code>useSetter(*setter*[, *deps*])</code> will set the view’s value to the result of \\`setter(currentValue)\\` whenever one of the \\`deps\\` change. It’s very similar to \\`useEffect\\`.\n* <code>useSetter(*value*)</code> will set the view’s value to \\`value\\` whenever the component is rendered. Note that this won’t work if you do \\`useSetter(ref.current)\\` because changing the \\`current\\` property of the ref won’t trigger a re-render.\n\nFor some more advanced use cases (usually where you call \\`render\\` in a helper function), you can pass a second parameter to \\`render\\` to help it cache properly. It can take one of two types of value:\n\n* a key (string) which will be added to your function’s code as a cache key. This can be used to keep a lightweight API by passing the string value of a renderer function your code will be called with, although I’m sure there are other things that it could be used for.\n* an HTML element that was previously returned from \\`render()\\`. If your helper is expected to be used at the top level of a cell, tell your users to pass \\`this\\` into your helper — it’s the currently rendered HTML element which can be passed to \\`render\\`.`","pinCode":false,"dname":"8b69a838-1fd2-4f1f-becb-99ca923c2287","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"render = ((render, keyOrElement) =>\n  __SECRET_INTERNALS('elements', String(render), keyOrElement, {\n    init: state => ({\n      renderer: () => state.render(state.public),\n      id: __SECRET_CREATE_ID(),\n      element: DOM.element('div', {class:\"grove-react-app\"}),\n      public: {\n        useSetter: (setterOrValue, deps) =>\n          typeof setterOrValue === 'function'\n            ? useEffect(\n                () =>\n                  state.public.setValue(setterOrValue(state.public.getValue())),\n                deps\n              )\n            : useEffect(() => state.public.setValue(setterOrValue), [\n                setterOrValue\n              ]),\n        getValue: () => state.element.value,\n        setValue: value => {\n          state.element.value = value;\n          state.element.dispatchEvent(new CustomEvent('input'));\n        }\n      }\n    }),\n    update: { render },\n    effect: state =>\n      ReactDOM.render(createElement(state.renderer), state.element),\n    return: state => state.element\n  }))","pinCode":false,"dname":"2fd6d13f-33a2-4b04-b080-36567e05a808","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`The \\`component\\` function is like \\`render\\` except that it passes props to the function instead of the metadata object and returns a function component instead of an element. Note that this notebook does not provide you a way to create class components that depend on other Observable values while still keeping their state, but you should be able to render class components by referencing them in a function component like you do in vanilla React.\n\nSimilarly to \\`render\\`, you can pass a key or previous result in for similar advanced use cases. (Except with \\`component\\`, the \\`this\\` value should be a component fucntion previously returned)`","pinCode":false,"dname":"c73b598b-3745-4a23-acd9-daf51e03cfba","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"component = ((render, name, keyOrPrevious) =>\n  __SECRET_INTERNALS('components', String(render), keyOrPrevious, {\n    init: (state, funcFor) => ({\n      component: __SECRET_SET_DISPLAYNAME(funcFor('render'), name)\n    }),\n    update: { render },\n    return: state => state.component\n  }))","pinCode":false,"dname":"35df55ab-d8c4-43af-bb82-28695062c0b6","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`The \\`jsx\\` function provides a copy of [\\`htm\\`](https://github.com/developit/htm) that’s already hooked up to React. It’s called \\`jsx\\` instead of \\`html\\` so you can import it and still use the \\`html\\` tag. Note that this isn’t actually JSX syntax, there are a few differences:\n\n- components that start with a capital letter have to be referred to as \\`<${\"${Foo}\"} />\\` rather than \\`<Foo />\\`\n- props that are passed a non-string need to have the braces prefixed with a \\`$\\`: \\`<input value=${\"${value}\"} />\\`\n- spread props have to have the \\`...\\` outside the \\`${\"${}\"}\\` — \\`<div ...${\"${props}\"} />\\`\n- instead of fragments (\\`<><div/><span/></>\\`), you can just pass multiple elements: \\`\\`jsx\\`<div/><span/>\\` \\`\\`\n- quotes are optional for string props — \\`<input type=text>\\`\n- components can be closed without duplicating the name — \\`<${\"${Foo}\"}>...<//>\\``","pinCode":false,"dname":"debe11b5-57e2-416f-bef8-a0d7809c4fa5","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"jsx = {\n  const jsx = htm.bind(createElement);\n  return (...args) => {\n    try {\n      return jsx(...args);\n    } catch (e) {\n      // throw a clearer error\n      let stack = e.stack;\n      if (!stack.includes(e.message)) {\n        stack = `${e.constructor.name}: ${e.message}\\n${stack}`;\n      }\n      throw new SyntaxError('JSX syntax error\\n' + stack);\n    }\n  };\n}","pinCode":false,"dname":"0ac2c75f-58c1-4630-96c7-c3d15abe1605","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`### Debugging\n\nWhen developing code, you might encounter an error message that says React is unable to provide the actual error message.`","pinCode":false,"dname":"4149fdcc-062f-46e0-8f9f-7ab836c32b1f","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`To see the actual error message, replace your import of \\`@j-f1/react\\` with these two cells:\n\n\\`\\`\\`js\ndev = false\n\nimport { ... whatever you were importing before ... } with { dev } from '@j-f1/react'\n\\`\\`\\`\n\nThis will disable a bunch of React’s error checking, however, so it’s best to change \\`dev\\` back to \\`true\\` once you’ve fixed the bug.`","pinCode":false,"dname":"d66697de-7c43-4eef-a070-0d50e085b0f7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`### Less common APIs`","pinCode":false,"dname":"fd6f1cb0-cdf0-4fe0-a78a-8d53bea4386d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`The \\`memo\\` function is a version of \\`component()\\` that wraps your component in \\`React.memo\\`.\nThe \\`keyOrElement\\` parameter is fully optional and identical to the one in \\`render\\`.`","pinCode":false,"dname":"f875d2ff-2f01-4539-b4d4-708703456087","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"memo = ((render, arePropsEqual, name, keyOrElement) =>\n  __SECRET_INTERNALS(\n    'memos',\n    JSON.stringify([String(render), String(arePropsEqual)]),\n    keyOrElement,\n    {\n      init: (state, funcFor) => ({\n        component: React.memo(\n          __SECRET_SET_DISPLAYNAME(funcFor('render'), name),\n          funcFor('arePropsEqual')\n        )\n      }),\n      update: { render, arePropsEqual },\n      return: state => state.component\n    }\n  ))","pinCode":false,"dname":"53605924-cb8b-41e3-9edb-18ba3aa7563a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`The \\`forwardRef\\` function is a version of \\`component()\\` that wraps your component in \\`React.forwardRef\\`.\nThe \\`keyOrElement\\` parameter fully optional and is identical to the one in \\`render\\`.`","pinCode":false,"dname":"e78bf673-6f8b-405f-b042-ed862dd1bb36","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"forwardRef = ((render, name, keyOrElement) =>\n  __SECRET_INTERNALS('forwardRefs', String(render), keyOrElement, {\n    init: (state, funcFor) => ({\n      component: React.forwardRef(\n        __SECRET_SET_DISPLAYNAME(funcFor('render'), name)\n      )\n    }),\n    update: { render },\n    return: state => state.component\n  }))","pinCode":false,"dname":"4b02c5ed-e054-4dc6-b5bf-2212c18fc575","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`---\n## Dependencies\n\nThis is the [\\`htm\\`](https://npm.im/htm) library.`","pinCode":false,"dname":"164167a6-2a59-4c05-bca9-836555904e6b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"htm = (require('htm@2.2.1/dist/htm.umd.js'))","pinCode":false,"dname":"13e5cbb4-b22c-44fd-bf3e-b2ee6bc660d7","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"versionRangeDoc = (md`\nYou can pass a different \\`versionRange\\` using Observable’s \\`import\\`…\\`with\\` syntax to load a different React version.\nYou can also pass an object with \\`react\\` and \\`dom\\` keys to load different versions of React and React DOM.\n\nYou should be fine without specifying a version number since the React team is reluctant to make breaking changes, but it’s possible your code will break in the future if you don’t.\n`)","pinCode":false,"dname":"4751bd36-f3be-4f06-b958-c7bed8b35d5b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"versionRange = \"16\"//('latest')","pinCode":false,"dname":"49446c7d-fea8-47f2-9e19-6d2582b0c998","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`Set this to \\`false\\` using Observable’s \\`import\\`…\\`with\\` syntax for better performance but less debugging information. Checkout [React’s docs](https://reactjs.org/docs/optimizing-performance.html#use-the-production-build) for some additional explanation.`","pinCode":false,"dname":"cd3be990-48b8-496c-ae6c-4b36ecab1cdd","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"dev = (true)","pinCode":false,"dname":"b1343143-ce95-4e77-8072-1117dce09a1e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`These are the React and React DOM imports. If you need to access APIs that haven’t been re-exported below, feel free to import these variables, like I do in the [Suspense-enabled version of this notebook](https://observablehq.com/@j-f1/react-experimental).`","pinCode":false,"dname":"9250a516-c75a-4f61-8360-c4aa8893bee5","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"// React = (__SECRET_REQUIRE('react'))","pinCode":false,"dname":"6e151922-5200-4c0a-b43d-c40d5b12c313","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"// ReactDOM = (__SECRET_REQUIRE('react-dom'))","pinCode":false,"dname":"4e9b7c14-549f-4f40-ba86-d7b8768d11d0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`---\n## Private APIs\nThese are private APIs used to make the whole shebang work. As a user of this notebook, you don’t need to worry about them. Additionally, they can change at any time, so if you’re going to directly use them make sure to pin the notebook version.`","pinCode":false,"dname":"134d877e-b3cc-4171-9a61-84f34768084e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"__SECRET_INTERNALS = (function cache(\n  type,\n  key,\n  ctx,\n  { init, update, effect, return: returnValue }\n) {\n  const fullKey = typeof ctx === 'string' ? key + '\\n' + ctx : key;\n  const prevResult =\n    typeof ctx === 'object' || typeof ctx === 'function' ? ctx : null;\n\n  const updateAndReturn = state => {\n    Object.assign(state, update);\n    if (effect) effect(state);\n    const ret = returnValue(state);\n    try {\n      ret[__SECRET_STATE] = state;\n    } catch {}\n    return ret;\n  };\n\n  if (prevResult) {\n    return updateAndReturn(prevResult[__SECRET_STATE]);\n  }\n\n  if (!cache[type]) cache[type] = Object.create(null);\n  if (!cache[type][fullKey]) {\n    const state = Object.create(null);\n    Object.assign(\n      state,\n      init(state, subkey => (...args) => state[subkey](...args))\n    );\n    cache[type][fullKey] = state;\n  }\n  return updateAndReturn(cache[type][fullKey]);\n})","pinCode":false,"dname":"548b8283-af67-4789-abd2-2e34ee94663a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"__SECRET_CREATE_ID = (() =>\n  Number(\n    Math.random()\n      .toString()\n      .slice(2)\n  ).toString(36))","pinCode":false,"dname":"5f98d35f-960d-4d21-b28d-ad6f83fa9323","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"__SECRET_SET_DISPLAYNAME = ((f, name) => {\n  f.displayName = name;\n  return f;\n})","pinCode":false,"dname":"d9acb24f-2b1b-4111-b211-1bf30e17ecc3","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"__SECRET_DOC = {\n  const { Inspector } = await require('@observablehq/inspector');\n  const doc = (url, name, value) => {\n    const node = DOM.element('span');\n    const inspector = new Inspector(node);\n    inspector.fulfilled(value, name);\n    const nameEl = node.querySelector('.observablehq--cellname');\n    const clobberName = () =>\n      (nameEl.innerHTML = `<a href=\"${url}\">${name}</a> = `);\n    clobberName();\n    new MutationObserver(clobberName).observe(nameEl.parentNode, {\n      childList: true,\n      attributes: true\n    });\n    node.value = value;\n    return node;\n  };\n  return Object.assign(doc, {\n    react: (name, id = 'react' + name.toLowerCase()) =>\n      doc('https://reactjs.org/docs/react-api.html#' + id, name, React[name]),\n    hook: name =>\n      doc(\n        'https://reactjs.org/docs/hooks-reference.html#' + name.toLowerCase(),\n        name,\n        React[name]\n      ),\n    dom: (name, id = name.toLowerCase()) =>\n      doc('https://reactjs.org/docs/react-dom.html#' + id, name, ReactDOM[name])\n  });\n}","pinCode":false,"dname":"d95cf6b4-b1fd-4a9c-9e7e-9bc829425bdb","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"__SECRET_SWITCHER = (current => {\n  const link = (name, owner = 'j-f1') => {\n    const slug = `@${owner}/${name}`;\n    return slug === current\n      ? html`<code><strong>${DOM.text(slug)}</strong></code> (this notebook)`\n      : html`<a href=\"https://observablehq.com/${slug}\"><code>${DOM.text(\n          slug\n        )}`;\n  };\n  return md`\n${\n  current === '@j-f1/react'\n    ? ''\n    : `\nYou can use it in exactly the same ways as the original notebook, and you should be able to simply swap\n\n~~~js\nimport { ... } from '@j-f1/react'\n~~~\n\nwith\n\n~~~js\nimport { ... } from '${current}'\n~~~\n`\n}\nOther notebooks in this series:\n- ${link('react')}, which always uses the latest stable version of React\n- ${link('react-16')}, which always uses the latest stable version of\n  React 16.x. (You can also do this by [manually specifying the React version](#versionRangeDoc))\n- ${link('react-experimental')}, which always uses the latest **experimental**\n  version of React.\n  `;\n})","pinCode":false,"dname":"3c7f3ed8-b82b-4600-a2ed-f3934e829a55","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"// __SECRET_REQUIRE = (require.alias({\n//   react: `https://unpkg.com/react@${versionRange.react ||\n//     versionRange}/umd/react.${dev ? 'development' : 'production.min'}.js`,\n//   'react-dom': `https://unpkg.com/react-dom@${versionRange.dom ||\n//     versionRange}/umd/react-dom.${dev ? 'development' : 'production.min'}.js`\n// }))","pinCode":false,"dname":"a1850e40-3920-44ff-84e9-74af2584f594","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"__SECRET_STATE = (Symbol('rendered state'))","pinCode":false,"dname":"94675816-6c19-4c16-a71c-9e6170f83cfc","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`---\n## React re-exports\n\nThese allow you to import various helpful functions directly from this notebook instead of having to prefix them with \\`React.\\` when using them.\n\n### Creating React Elements`","pinCode":false,"dname":"9bdba636-c4b3-4ec9-810d-236ef2cf01fb","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof createElement = (__SECRET_DOC.react('createElement', 'createlement'))","pinCode":false,"dname":"4ede814f-dd6c-4b9e-a261-22b34ced2e92","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof createFactory = (__SECRET_DOC.react('createFactory', 'creatfactory'))","pinCode":false,"dname":"00120d69-8545-4646-aa09-55a48fc5278a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`### Transforming Elements`","pinCode":false,"dname":"2a5c7296-c433-40a3-8bb5-99131ff79b1b","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof cloneElement = (__SECRET_DOC.react('cloneElement', 'cloneelement'))","pinCode":false,"dname":"6db7abee-f5af-4c19-a11e-e499a5760c46","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof isValidElement = (__SECRET_DOC.react('isValidElement', 'isvalidelement'))","pinCode":false,"dname":"a4f8619a-22fd-4cdf-ac3b-5073d4be747a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof Children = (__SECRET_DOC.react('Children'))","pinCode":false,"dname":"0e03839c-3a7a-4607-8812-aad483011e4e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`### Fragments`","pinCode":false,"dname":"5f01323f-e35f-40fb-a12e-d93b357a7736","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof Fragment = (__SECRET_DOC.react('Fragment'))","pinCode":false,"dname":"2c562818-0b53-4f39-8919-da52c8f3b9b4","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`### Refs`","pinCode":false,"dname":"92406bc0-c5f0-438a-9823-d411af29e6d0","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof createRef = (__SECRET_DOC.react('createRef'))","pinCode":false,"dname":"d7282503-f8dd-4084-b3a1-1c52fe66df30","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`<code>[forwardRef](https://reactjs.org/docs/react-api.html#reactforwardref) = [</code>see [above](#forwardRef)\\`]\\`\n\n### Suspense\n\n*See my [separate notebook](https://observablehq.com/@j-f1/react-experimental) for full Suspense/Concurrent Mode support.*`","pinCode":false,"dname":"c833626a-11b4-4c79-89c3-76913be2ea79","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof lazy = (__SECRET_DOC.react('lazy'))","pinCode":false,"dname":"1e78d042-41d7-44a8-90aa-935602dafcd1","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof Suspense = (__SECRET_DOC.react('Suspense'))","pinCode":false,"dname":"161f64c8-a2b9-4e6d-b456-bd643402b46a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof StrictMode = (__SECRET_DOC.react('StrictMode'))","pinCode":false,"dname":"bce55084-a5ff-4b50-bb64-6c4629fea683","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`### Context`","pinCode":false,"dname":"cfef4f50-4280-4566-b3fb-dbc6fa4ce4cc","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof createContext = (__SECRET_DOC(\n  'https://reactjs.org/docs/context.html#reactcreatecontext',\n  'createContext',\n  React.createContext\n))","pinCode":false,"dname":"4f9b7e11-fb97-4bf9-b83b-1893f51842e8","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`### Hooks\n#### Basic Hooks`","pinCode":false,"dname":"ff80356f-855f-4878-8e75-cfd9b1ed3a82","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof useState = (__SECRET_DOC.hook('useState'))","pinCode":false,"dname":"65305c79-9f97-4c44-9f81-0c6012394749","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof useEffect = (__SECRET_DOC.hook('useEffect'))","pinCode":false,"dname":"15942f01-cbaa-4e4c-ac3a-cc2ce765b807","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof useContext = (__SECRET_DOC.hook('useContext'))","pinCode":false,"dname":"941b779d-0de7-472a-9097-67d35b60f6b2","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`#### Additional Hooks`","pinCode":false,"dname":"d9e22f39-cc6f-4c29-aabb-bb5c27f4e040","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof useReducer = (__SECRET_DOC.hook('useReducer'))","pinCode":false,"dname":"70de8a08-1776-4c3c-ba0f-0addbc646a6e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof useCallback = (__SECRET_DOC.hook('useCallback'))","pinCode":false,"dname":"e3f3b548-c0b0-4e4a-9306-3559bf7f295e","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof useMemo = (__SECRET_DOC.hook('useMemo'))","pinCode":false,"dname":"6f2b141b-0cc7-4ed8-90e7-5af7cd598d68","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof useRef = (__SECRET_DOC.hook('useRef'))","pinCode":false,"dname":"1e24047f-8bfe-4acb-aea1-c6559aaf947d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof useImperativeHandle = (__SECRET_DOC.hook('useImperativeHandle'))","pinCode":false,"dname":"8b0dae42-86b2-4a1e-ae0f-b65af88e26a9","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof useLayoutEffect = (__SECRET_DOC.hook('useLayoutEffect'))","pinCode":false,"dname":"eef7dd4b-8f6a-4f1e-9119-214b9a092eff","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof useDebugValue = (__SECRET_DOC.hook('useDebugValue'))","pinCode":false,"dname":"2f318e71-d081-48bb-bb5b-ed53b8275cce","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"md`### React DOM\n\n**Note**: the regular \\`ReactDOM.render\\` function isn’t exported since the provided \\`render\\` function above is better for use with Observable.`","pinCode":false,"dname":"bdfca11d-48c4-410f-978b-3bf741dad368","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof createPortal = (__SECRET_DOC.dom('createPortal'))","pinCode":false,"dname":"797f2d9d-8db7-422b-a786-8482f8eeb52d","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"more_examples = (md`---\n## More Examples`)","pinCode":false,"dname":"0ee0c59e-ad41-4033-8ccd-4da668fde788","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"exampleObject","pinCode":false,"dname":"43d3398f-cee9-4235-8d76-1104f35dbedd","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"viewof exampleObject = (render(({ useSetter }) => {\n  const [message, setMessage] = useState('Hello, form!');\n  const [hue, setHue] = useState(180);\n  const [size, setSize] = useState(24);\n  useSetter({ message, hue, size });\n  return jsx`<form>\n    <div>\n      <label>\n        <input type=text value=${message} onChange=${e =>\n    setMessage(e.target.value)} />\n        ${' '}<i>message</i>\n      </label>\n    </div>\n    <div>\n      <label>\n        <input type=range min=0 max=360 value=${hue} onChange=${e =>\n    setHue(e.target.valueAsNumber)} />\n        ${' '}<i style=${{ color: `hsl(${hue}deg, 100%, 30%)` }}>hue</i>\n      </label>\n    </div>\n    <div>\n      <${ExampleRadio} label=\"small\" value=${12} setValue=${setSize} current=${size} />${' '}\n      <${ExampleRadio} label=\"medium\" value=${24} setValue=${setSize} current=${size} />${' '}\n      <${ExampleRadio} label=\"large\" value=${48} setValue=${setSize} current=${size} />\n    </div>\n  </form>`;\n}))","pinCode":false,"dname":"a618f23c-527d-41d6-ab4e-398276b0789a","codeMode":"javascript2"}}},{"type":"codeTool","data":{"codeData":{"value":"ExampleRadio = (component(\n  ({ label, value, setValue, current }) => jsx` \n    <label>\n      <input\n        type=\"radio\"\n        checked=${current === value}\n        onChange=${() => setValue(value)}\n      />\n      ${' '}<i>${label}</i>\n    </label>\n  `\n))","pinCode":false,"dname":"87ee886e-a82d-46c5-9f57-919e6c6fdb40","codeMode":"javascript2"}}}],"version":"2.19.1"}