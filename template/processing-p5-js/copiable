{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# Copiable\n\nThis notebook provides an affordance for copying text. You can use it like this, and click this import statement to copy it:\n\n${copiable(md`\n\\`\\`\\`js\nimport {copiable, style} from \"@tmcw/copiable\"\n\\`\\`\\``)}\n\nIt uses [execCommand](https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand) to do its thing.\n\n---\n\n\\`\\`\\`\nmd\\`\nThis is a chunk of text, with this bit copiable:\n\n$\\{copiable(md\\`Some content\\`)}\n\\`\n\\`\\`\\`\n\n\n---\n\n\\`\\`\\`js\nstyle\n\\`\\`\\`\n\n(the style value is a stylesheet that adds the nice yellow hover indication when something is copiable/copied)\n\n`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"copiable = (element => {\n  element.addEventListener('click', e => {\n    copy(element.textContent.trim());\n    element.classList.add('copied');\n    setTimeout(() => element.classList.remove('copied'), 500);\n  });\n  element.classList.add('copiable');\n  return element;\n})","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"copy = (function copy(text) {\n  const fakeElem = document.body.appendChild(document.createElement('textarea'));\n  fakeElem.style.position = 'absolute';\n  fakeElem.style.left = '-9999px';\n  fakeElem.setAttribute('readonly', '');\n  fakeElem.value = text;\n  fakeElem.select();\n  try {\n    return document.execCommand('copy');\n  } catch (err) {\n    return false;\n  } finally {\n    fakeElem.parentNode.removeChild(fakeElem);\n  }\n})","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"style = (html`<style>\n.copiable {\n  position:relative;\n  cursor:pointer;\n}\n.copiable:hover::after {\n  background: #FBF1A9;\n  content: 'click to copy';\n  padding: 0px 10px;\n}\n.copiable.copied:hover::after {\n  content: 'copied!';\n}\n</style>`)","pinCode":false}}}],"version":"2.19.1"}