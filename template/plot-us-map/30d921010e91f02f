{"blocks":[{"type":"codeTool","data":{"codeData":{"value":"md`# United States Coronavirus Daily Cases Map (COVID-19)\n\nIn late January, a team of journalists at The New York Times began [tracking each confirmed case](https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html) of the new coronavirus in the United States. Working with freelance reporters and teams of journalism students, they continue to work around the clock to gather the most detailed county-level data available. In a better timeline, this data would be centrally gathered and reported by the CDC â€” but alas, we live in the country we have. As of publication (March 27), the United States has more confirmed cases than any other nation.\n\n*Source: [The New York Times](https://www.nytimes.com/article/coronavirus-county-data-us.html) *`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"viewof day = (Scrubber(dates.slice(0, data.length), {\n  delay,\n  loop: false,\n  format: d => d.toLocaleDateString()\n}))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"map = {\n  const svg = d3\n    .create(\"svg\")\n    .attr(\"viewBox\", [0, 0, w, h])\n    .attr(\"class\", \"map\");\n\n  const legend = svg\n    .append(\"g\")\n    .attr(\"class\", \"legend\")\n    .attr(\"fill\", \"#777\")\n    .attr(\"transform\", `translate(${[w - 270, 90]})`);\n\n  legend\n    .append(\"text\")\n    .attr(\"class\", \"legend-title\")\n    .text(\"No. confirmed cases\")\n    .attr(\"dx\", 5)\n    .attr(\"dy\", -(radius(legendRadii[legendRadii.length - 1]) * 2 + 10));\n\n  const legendBubbles = legend\n    .selectAll(\"g\")\n    .data(legendRadii)\n    .join(\"g\");\n\n  let margin = 0;\n  legendBubbles\n    .attr(\"transform\", (d, i) => {\n      margin += i === 0 ? 0 : radius(legendBubbles.data()[i - 1]) * 2 + 18;\n      return `translate(${margin + radius(d)}, 0)`;\n    })\n    .append(\"circle\")\n    .attr(\"class\", \"legend-bubble\")\n    .attr(\"fill\", d => colorScale(d))\n    .attr(\"cy\", d => -radius(d))\n    .attr(\"r\", radius);\n\n  legendBubbles\n    .append(\"text\")\n    .attr(\"dy\", \"1.3em\")\n    .text(numFormat);\n\n  svg\n    .append(\"path\")\n    .datum(topojson.feature(us, us.objects.nation))\n    .attr(\"fill\", \"#f4f4f4\")\n    .attr(\"stroke\", \"#999\")\n    .attr(\"stroke-width\", 1)\n    .attr(\"stroke-linejoin\", \"round\")\n    .attr(\"d\", path);\n\n  svg\n    .append(\"path\")\n    .datum(topojson.mesh(us, us.objects.states, (a, b) => a !== b))\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"#999\")\n    .attr(\"stroke-width\", 0.5)\n    .attr(\"stroke-linejoin\", \"round\")\n    .attr(\"d\", path);\n\n  const bubble = svg\n    .selectAll(\".bubble\")\n    .data(\n      data[data.length - 1].sort((a, b) => +b.cases - +a.cases),\n      d => d.fips || d.county\n    )\n    .enter()\n    .append(\"circle\")\n    .attr(\"transform\", d => \"translate(\" + path.centroid(getLocation(d)) + \")\")\n    .attr(\"class\", \"bubble\")\n    .attr(\"fill-opacity\", 0.5)\n    .attr(\"fill\", d => colorScale(0))\n    .attr(\"r\", d => radius(0));\n\n  bubble.append(\"title\");\n\n  svg\n    .selectAll(\"place\")\n    .data(places)\n    .enter()\n    .append(\"circle\")\n    .attr(\"class\", \"place\")\n    .attr(\"r\", 2.5)\n    .attr(\"transform\", function(d) {\n      return \"translate(\" + albersProjection([+d.LONGITUDE, +d.LATITUDE]) + \")\";\n    });\n\n  svg\n    .selectAll(\".place-label\")\n    .data(places)\n    .enter()\n    .append(\"text\")\n    .attr(\"class\", \"place-label\")\n    .attr(\"transform\", function(d) {\n      return \"translate(\" + albersProjection([+d.LONGITUDE, +d.LATITUDE]) + \")\";\n    })\n    .attr(\"dy\", \".35em\")\n    .text(function(d) {\n      return d.NAME;\n    })\n    .attr(\"x\", 6)\n    .style(\"text-anchor\", \"start\");\n\n  const wrapper = html`<div class=\"wrapper\"></div>`;\n  wrapper.append(svg.node());\n\n  return Object.assign(wrapper, {\n    update(i) {\n      const t = svg\n        .transition()\n        .duration(i === 0 ? 0 : delay)\n        .ease(d3.easeLinear);\n\n      bubble\n        .data(data[i], d => d.fips || d.county)\n        .call(b => {\n          b.transition(t)\n            .attr(\"fill\", d => colorScale(+d.cases))\n            .attr(\"r\", d => radius(+d.cases))\n            .select(\"title\")\n            .text(d => `${placeName(d)}: ${numFormat(+d.cases)} cases`);\n        })\n        .exit()\n        .call(b => {\n          b.transition()\n            .attr(\"fill\", d => colorScale(0))\n            .attr(\"r\", d => radius(0));\n        });\n    }\n  });\n}","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"md`<br><br><br>\n\n## Appendix\n\n*The implementation of this notebook lies below. It is not yet organized or commented.*\n\n---\n\n<br><br><br><br><br><br><br>`","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"{\n  const c = `rgb(255, 255, 255, 0.5)`;\n  return html`<style>\nform output {\n  font-weight: bold;\n  font-size: 14px;\n}\n.wrapper {\n  text-align: center;\n}\n.map {\n  text-anchor: middle;\n  font-family: sans-serif;\n  font-size: 10px;\n  margin: 0 auto;\n}\n.subunit {\n  fill: #f4f4f4;\n  stroke: #999;\n  stroke-width: 0.5;\n}\n.place {\n  fill: rgba(0,0,0,0.8);\n  stroke: none;\n  pointer-events: none;\n}\n.place-label {\n  pointer-events: none;\n  text-shadow: ${c} 1px 0px 0px, ${c} 0.540302px 0.841471px 0px, ${c} -0.416147px 0.909297px 0px, ${c} -0.989992px 0.14112px 0px, ${c} -0.653644px -0.756802px 0px, ${c} 0.283662px -0.958924px 0px, ${c} 0.96017px -0.279415px 0px;\n}\n.place-label, .legend-title {\n  font-weight: bold;\n  font-size: 12px;\n  fill: rgba(0,0,0,0.8);\n}\n.bubble, .legend-bubble {\n  stroke-width: 0.8;\n  stroke: rgba(0,0,0,0.3)\n}\n.bubble:hover {\n  stroke: rgba(0,0,0,0.6);\n  stroke-width: 1.2;\n  cursor: crosshair;\n}\n.legend text {\n  fill: #000;\n}\n.legend-bubble {\n  stroke: rgba(0,0,0,0.4);\n}\n.legend-title {\n  text-anchor: start;\n}\n</style>`;\n}","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"legendRadii = ([10, 1000, 10000, 50000])","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"placeName = (function placeName(d) {\n  if (d.county === \"New York City\") return \"New York City\";\n  const loc = getLocation(d);\n  return `${loc.properties.name} ${\n    d.state === \"Louisiana\" ? \"Parish\" : \"County\"\n  }`;\n})","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"getLocation = (function getLocation(d) {\n  let location = countyMap.get(d.fips);\n  if (!location && d.county === \"New York City\")\n    location = countyMap.get(\"36061\");\n  if (!location) location = stateMap.get(d.state);\n  if (!location) console.warn(\"No location found for: \" + JSON.stringify(d));\n  return location;\n})","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"map.update(index)","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"w = (975)","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"h = (610)","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"albersProjection = {\n  // XXX super hacky\n  const proj = d3.geoAlbersUsa().scale(1300);\n  return function(coords) {\n    const [x, y] = proj(coords);\n    return [x + 6, y + 54];\n  };\n}","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"magnitude = (toMagnitude(maxCases))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"countyMap = (new Map(\n  topojson.feature(us, us.objects.counties).features.map(d => [d.id, d])\n))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"stateMap = (new Map(\n  topojson\n    .feature(us, us.objects.states)\n    .features.map(d => [d.properties.name, d])\n))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"toMagnitude = (function toMagnitude(n) {\n  var order = Math.floor(Math.log(n) / Math.LN10 + 0.000000001);\n  return Math.pow(10, order);\n})","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"mutable index = (0)","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"{\n  mutable index = dates.indexOf(day);\n}","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"radius = (d3\n  .scaleSqrt()\n  .domain([0, maxCases])\n  .range([0, maxRadius]))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"colorScale = (d3\n  .scaleSqrt()\n  .domain([0, maxCases])\n  .range([`hsla(57, 100%, 50%, 0.36)`, `hsla(7, 100%, 50%, 0.57)`]))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"delay = (250)","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"maxCases = (d3.max(recentData.map(d => +d.cases)))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"excludeTerritories = (new Set([\"Guam\", \"Puerto Rico\", \"Virgin Islands\"]))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"data = (d3\n  .nest()\n  .key(d => d.date)\n  .entries(rawData.filter(d => !excludeTerritories.has(d.state)))\n  .map(d => d.values)\n  .filter(d => d[0].date >= startDate))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"rawData = (d3.csv(\"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv\"))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"path = (d3.geoPath())","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"maxRadius = (50)","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"recentData = (data[data.length - 1])","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"startDate = (\"2020-03-01\")","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"dates = (data.map(d => d[0].date).map(d => new Date(`${d}T20:00Z`)))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"places = (d3.csvParse(await FileAttachment(\"us-places.csv\").text()))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"sFormat = (d3.format(\".1s\"))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"numFormat = (d3.format(\"~s\"))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"us = (FileAttachment(\"counties-albers-10m.json\").json())","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"import { Scrubber }  from 'template/plot-us-map/450051d7f1174df8'","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"topojson = (require(\"topojson-client@3\"))","pinCode":false}}},{"type":"codeTool","data":{"codeData":{"value":"d3 = (require(\"d3@5\"))","pinCode":false}}}],"version":"2.19.1"}